openapi: 3.0.2
info:
  contact:
    email: sales@schedmd.com
    name: SchedMD LLC
    url: https://www.schedmd.com/
  description: API to access and control Slurm.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://github.com/SchedMD/slurm/blob/master/DISCLAIMER
  title: Slurm Rest API
  version: 0.0.37
servers:
- url: /slurm/v0.0.37/
security:
- user: []
  token: []
tags:
- description: methods that query slurmctld
  name: slurm
- description: methods that query for OpenAPI specifications
  name: openapi
paths:
  /diag/:
    get:
      operationId: slurmctld_diag
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.37_diag'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.37_diag'
          description: diagnostic results
        default:
          description: unable to request ping test
      summary: get diagnostics
      tags:
      - slurm
  /licenses/:
    get:
      operationId: slurmctld_licenses
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.37_licenses'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.37_licenses'
          description: results of get all licenses
        default:
          description: unable to request licenses
      summary: get all license info
      tags:
      - slurm
  /ping/:
    get:
      operationId: slurmctld_ping
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.37_pings'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.37_pings'
          description: results of ping test
        default:
          description: unable to request ping test
      summary: ping test
      tags:
      - slurm
  /jobs/:
    get:
      operationId: slurmctld_get_jobs
      parameters:
      - description: Filter if changed since update_time. Use of this parameter can
          result in faster replies.
        explode: false
        in: query
        name: update_time
        required: false
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.37_jobs_response'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.37_jobs_response'
          description: job(s) information
        default:
          description: job not found
      summary: get list of jobs
      tags:
      - slurm
  /job/{job_id}:
    delete:
      operationId: slurmctld_cancel_job
      parameters:
      - description: Slurm Job ID
        explode: false
        in: path
        name: job_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: signal to send to job
        explode: true
        in: query
        name: signal
        required: false
        schema:
          $ref: '#/components/schemas/v0.0.37_signal'
        style: form
      responses:
        "200":
          description: job cancelled or sent signal
        "500":
          description: job not found
      summary: cancel or signal job
      tags:
      - slurm
    get:
      operationId: slurmctld_get_job
      parameters:
      - description: Slurm Job ID
        explode: false
        in: path
        name: job_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.37_jobs_response'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.37_jobs_response'
          description: job(s) information
        default:
          description: job not found
      summary: get job info
      tags:
      - slurm
    post:
      operationId: slurmctld_update_job
      parameters:
      - description: Slurm Job ID
        explode: false
        in: path
        name: job_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.0.37_job_properties'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/v0.0.37_job_properties'
        description: update job
        required: true
      responses:
        "200":
          description: job information
        "500":
          description: job not found
      summary: update job
      tags:
      - slurm
  /job/submit:
    post:
      operationId: slurmctld_submit_job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.0.37_job_submission'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/v0.0.37_job_submission'
        description: submit new job
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.37_job_submission_response'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.37_job_submission_response'
          description: job submitted
        default:
          description: job rejected
      summary: submit new job
      tags:
      - slurm
  /nodes/:
    get:
      operationId: slurmctld_get_nodes
      parameters:
      - description: Filter if changed since update_time. Use of this parameter can
          result in faster replies.
        explode: false
        in: query
        name: update_time
        required: false
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.37_nodes_response'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.37_nodes_response'
          description: node information
        default:
          description: no nodes in cluster
      summary: get all node info
      tags:
      - slurm
  /node/{node_name}:
    get:
      operationId: slurmctld_get_node
      parameters:
      - description: Slurm Node Name
        explode: false
        in: path
        name: node_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.37_nodes_response'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.37_nodes_response'
          description: node information
        default:
          description: node not found
      summary: get node info
      tags:
      - slurm
  /partitions/:
    get:
      operationId: slurmctld_get_partitions
      parameters:
      - description: Filter if changed since update_time. Use of this parameter can
          result in faster replies.
        explode: false
        in: query
        name: update_time
        required: false
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.37_partitions_response'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.37_partitions_response'
          description: partition information
        default:
          description: no partitions found
      summary: get all partition info
      tags:
      - slurm
  /partition/{partition_name}:
    get:
      operationId: slurmctld_get_partition
      parameters:
      - description: Slurm Partition Name
        explode: false
        in: path
        name: partition_name
        required: true
        schema:
          type: string
        style: simple
      - description: Filter if there were no partition changes (not limited to partition
          in URL endpoint) since update_time.
        explode: false
        in: query
        name: update_time
        required: false
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.37_partitions_response'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.37_partitions_response'
          description: partition information
        default:
          description: no partitions found
      summary: get partition info
      tags:
      - slurm
  /reservations/:
    get:
      operationId: slurmctld_get_reservations
      parameters:
      - description: Filter if changed since update_time. Use of this parameter can
          result in faster replies.
        explode: false
        in: query
        name: update_time
        required: false
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.37_reservations_response'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.37_reservations_response'
          description: reservation information
        default:
          description: no reservations found
      summary: get all reservation info
      tags:
      - slurm
  /reservation/{reservation_name}:
    get:
      operationId: slurmctld_get_reservation
      parameters:
      - description: Slurm Reservation Name
        explode: false
        in: path
        name: reservation_name
        required: true
        schema:
          type: string
        style: simple
      - description: Filter if no reservation (not limited to reservation in URL)
          changed since update_time.
        explode: false
        in: query
        name: update_time
        required: false
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.0.37_reservations_response'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/v0.0.37_reservations_response'
          description: reservation information
        default:
          description: no reservations found
      summary: get reservation info
      tags:
      - slurm
  /openapi.yaml:
    get:
      responses:
        "200":
          description: OpenAPI Specification
      summary: Retrieve OpenAPI Specification
      tags:
      - openapi
    servers:
    - url: /
  /openapi.json:
    get:
      responses:
        "200":
          description: OpenAPI Specification
      summary: Retrieve OpenAPI Specification
      tags:
      - openapi
    servers:
    - url: /
  /openapi:
    get:
      responses:
        "200":
          description: OpenAPI Specification
      summary: Retrieve OpenAPI Specification
      tags:
      - openapi
    servers:
    - url: /
  /openapi/v3:
    get:
      responses:
        "200":
          description: OpenAPI Specification
      summary: Retrieve OpenAPI Specification
      tags:
      - openapi
    servers:
    - url: /
components:
  schemas:
    v0.0.37_diag:
      example:
        errors:
        - errno: 0
          error: error
        - errno: 0
          error: error
        statistics:
          schedule_cycle_per_minute: 6
          req_time_start: 5
          jobs_running: 8
          bf_cycle_max: 6
          bf_last_backfilled_jobs: 3
          rpcs_user:
          - user_id: 3
            ave_time: 5
            count: 7
            total_time: 3
            user: user
          - user_id: 3
            ave_time: 5
            count: 7
            total_time: 3
            user: user
          bf_last_depth: 6
          rpcs_message_type:
          - type_id: 4
            ave_time: 7
            count: 8
            message_type: message_type
            total_time: 3
          - type_id: 4
            ave_time: 7
            count: 8
            message_type: message_type
            total_time: 3
          bf_backfilled_het_jobs: 6
          bf_backfilled_jobs: 6
          bf_table_size: 7
          bf_cycle_mean: 2
          job_states_ts: 9
          bf_queue_len: 7
          jobs_started: 4
          schedule_cycle_max: 4
          server_thread_count: 5
          dbd_agent_queue_size: 3
          bf_table_size_mean: 6
          jobs_pending: 6
          agent_count: 7
          bf_cycle_last: 3
          parts_packed: 6
          agent_thread_count: 9
          jobs_completed: 5
          bf_depth_mean: 6
          bf_active: true
          bf_depth_mean_try: 3
          schedule_cycle_mean: 1
          agent_queue_size: 2
          jobs_failed: 9
          gettimeofday_latency: 2
          bf_last_depth_try: 5
          req_time: 1
          bf_cycle_counter: 1
          schedule_queue_length: 7
          bf_queue_len_mean: 0
          schedule_cycle_total: 1
          bf_when_last_cycle: 0
          schedule_cycle_last: 7
          jobs_canceled: 9
          jobs_submitted: 1
          schedule_cycle_mean_depth: 1
      properties:
        errors:
          description: slurm errors
          items:
            $ref: '#/components/schemas/v0.0.37_error'
          type: array
        statistics:
          $ref: '#/components/schemas/v0_0_37_diag_statistics'
      type: object
    v0.0.37_licenses:
      example:
        licenses:
        - total: 0
          reserved: 5
          name: name
          available: 1
          in_use: 6
          remote: true
        - total: 0
          reserved: 5
          name: name
          available: 1
          in_use: 6
          remote: true
        errors:
        - errno: 0
          error: error
        - errno: 0
          error: error
      properties:
        errors:
          description: slurm errors
          items:
            $ref: '#/components/schemas/v0.0.37_error'
          type: array
        licenses:
          description: licenses info
          items:
            $ref: '#/components/schemas/v0.0.37_license'
          type: array
      type: object
    v0.0.37_license:
      example:
        total: 0
        reserved: 5
        name: name
        available: 1
        in_use: 6
        remote: true
      properties:
        name:
          description: name of license
          type: string
        total:
          description: total number of licenses
          type: integer
        in_use:
          description: number of licenses in use
          type: integer
        available:
          description: number of licenses available
          type: integer
        reserved:
          description: number of licenses reserved
          type: integer
        remote:
          description: license is remote
          type: boolean
      type: object
    v0.0.37_diag_rpcm:
      example:
        type_id: 4
        ave_time: 7
        count: 8
        message_type: message_type
        total_time: 3
      properties:
        message_type:
          description: message type
          type: string
        type_id:
          description: message type id
          type: integer
        count:
          description: rpc count
          type: integer
        ave_time:
          description: average time
          type: integer
        total_time:
          description: total time
          type: integer
      type: object
    v0.0.37_diag_rpcu:
      example:
        user_id: 3
        ave_time: 5
        count: 7
        total_time: 3
        user: user
      properties:
        user:
          description: user
          type: string
        user_id:
          description: user id
          type: integer
        count:
          description: rpc count
          type: integer
        ave_time:
          description: average time
          type: integer
        total_time:
          description: total time
          type: integer
      type: object
    v0.0.37_pings:
      example:
        pings:
        - mode: mode
          hostname: hostname
          ping: UP
          status: 0
        - mode: mode
          hostname: hostname
          ping: UP
          status: 0
        errors:
        - errno: 0
          error: error
        - errno: 0
          error: error
      properties:
        errors:
          description: slurm errors
          items:
            $ref: '#/components/schemas/v0.0.37_error'
          type: array
        pings:
          description: slurm controller pings
          items:
            $ref: '#/components/schemas/v0.0.37_ping'
          type: array
      type: object
    v0.0.37_ping:
      example:
        mode: mode
        hostname: hostname
        ping: UP
        status: 0
      properties:
        hostname:
          description: slurm controller hostname
          type: string
        ping:
          description: slurm controller host up
          enum:
          - UP
          - DOWN
          type: string
        mode:
          description: slurm controller mode
          type: string
        status:
          description: slurm controller status
          type: integer
      type: object
    v0.0.37_partition:
      example:
        max_time_limit: 7
        maximum_cpus_per_node: 5
        over_time_limit: 3
        denied_accounts: denied_accounts
        flags:
        - flags
        - flags
        maximum_memory_per_node: 5
        total_cpus: 7
        billing_weights: billing_weights
        default_memory_per_cpu: 0
        allowed_qos: allowed_qos
        min_nodes_per_job: 9
        qos: qos
        default_time_limit: 6
        denied_qos: denied_qos
        priority_job_factor: 2
        tres: tres
        allowed_allocation_nodes: allowed_allocation_nodes
        state: state
        preemption_grace_time: 1
        allowed_accounts: allowed_accounts
        alternative: alternative
        preemption_mode:
        - preemption_mode
        - preemption_mode
        nodes: nodes
        name: name
        allowed_groups: allowed_groups
        total_nodes: 1
        maximum_nodes_per_job: 2
        priority_tier: 4
      properties:
        flags:
          description: partition options
          items:
            type: string
          type: array
        preemption_mode:
          description: preemption type
          items:
            type: string
          type: array
        allowed_allocation_nodes:
          description: list names of allowed allocating nodes
          type: string
        allowed_accounts:
          description: comma delimited list of accounts
          type: string
        allowed_groups:
          description: comma delimited list of groups
          type: string
        allowed_qos:
          description: comma delimited list of qos
          type: string
        alternative:
          description: name of alternate partition
          type: string
        billing_weights:
          description: TRES billing weights
          type: string
        default_memory_per_cpu:
          description: default MB memory per allocated CPU
          format: int64
          type: integer
        default_time_limit:
          description: default time limit (minutes)
          format: int64
          type: integer
        denied_accounts:
          description: comma delimited list of denied accounts
          type: string
        denied_qos:
          description: comma delimited list of denied qos
          type: string
        preemption_grace_time:
          description: preemption grace time (seconds)
          format: int64
          type: integer
        maximum_cpus_per_node:
          description: maximum allocated CPUs per node
          type: integer
        maximum_memory_per_node:
          description: maximum memory per allocated CPU (MiB)
          format: int64
          type: integer
        maximum_nodes_per_job:
          description: Max nodes per job
          type: integer
        max_time_limit:
          description: Max time limit per job
          format: int64
          type: integer
        min_nodes_per_job:
          description: Min number of nodes per job
          type: integer
        name:
          description: Partition name
          type: string
        nodes:
          description: list names of nodes in partition
          type: string
        over_time_limit:
          description: job's time limit can be exceeded by this number of minutes
            before cancellation
          type: integer
        priority_job_factor:
          description: job priority weight factor
          type: integer
        priority_tier:
          description: tier for scheduling and preemption
          type: integer
        qos:
          description: partition QOS name
          type: string
        state:
          description: Partition state
          type: string
        total_cpus:
          description: Total cpus in partition
          type: integer
        total_nodes:
          description: Total number of nodes in partition
          type: integer
        tres:
          description: configured TRES in partition
          type: string
      type: object
    v0.0.37_partitions_response:
      example:
        partitions:
        - max_time_limit: 7
          maximum_cpus_per_node: 5
          over_time_limit: 3
          denied_accounts: denied_accounts
          flags:
          - flags
          - flags
          maximum_memory_per_node: 5
          total_cpus: 7
          billing_weights: billing_weights
          default_memory_per_cpu: 0
          allowed_qos: allowed_qos
          min_nodes_per_job: 9
          qos: qos
          default_time_limit: 6
          denied_qos: denied_qos
          priority_job_factor: 2
          tres: tres
          allowed_allocation_nodes: allowed_allocation_nodes
          state: state
          preemption_grace_time: 1
          allowed_accounts: allowed_accounts
          alternative: alternative
          preemption_mode:
          - preemption_mode
          - preemption_mode
          nodes: nodes
          name: name
          allowed_groups: allowed_groups
          total_nodes: 1
          maximum_nodes_per_job: 2
          priority_tier: 4
        - max_time_limit: 7
          maximum_cpus_per_node: 5
          over_time_limit: 3
          denied_accounts: denied_accounts
          flags:
          - flags
          - flags
          maximum_memory_per_node: 5
          total_cpus: 7
          billing_weights: billing_weights
          default_memory_per_cpu: 0
          allowed_qos: allowed_qos
          min_nodes_per_job: 9
          qos: qos
          default_time_limit: 6
          denied_qos: denied_qos
          priority_job_factor: 2
          tres: tres
          allowed_allocation_nodes: allowed_allocation_nodes
          state: state
          preemption_grace_time: 1
          allowed_accounts: allowed_accounts
          alternative: alternative
          preemption_mode:
          - preemption_mode
          - preemption_mode
          nodes: nodes
          name: name
          allowed_groups: allowed_groups
          total_nodes: 1
          maximum_nodes_per_job: 2
          priority_tier: 4
        errors:
        - errno: 0
          error: error
        - errno: 0
          error: error
      properties:
        errors:
          description: slurm errors
          items:
            $ref: '#/components/schemas/v0.0.37_error'
          type: array
        partitions:
          description: partition info
          items:
            $ref: '#/components/schemas/v0.0.37_partition'
          type: array
      type: object
    v0.0.37_reservation:
      example:
        core_spec_cnt: 6
        end_time: 1
        flags:
        - flags
        - flags
        groups: groups
        users: users
        max_start_delay: 5
        features: features
        start_time: 7
        burst_buffer: burst_buffer
        licenses: licenses
        partition: partition
        watts: 9
        name: name
        tres: tres
        accounts: accounts
        node_count: 5
        node_list: node_list
        purge_completed:
          time: 2
        core_count: 0
      properties:
        accounts:
          description: Allowed accounts
          type: string
        burst_buffer:
          description: Reserved burst buffer
          type: string
        core_count:
          description: Number of reserved cores
          type: integer
        core_spec_cnt:
          description: Number of reserved specialized cores
          type: integer
        end_time:
          description: End time of the reservation
          type: integer
        features:
          description: List of features
          type: string
        flags:
          description: Reservation options
          items:
            type: string
          type: array
        groups:
          description: List of groups permitted to use the reserved nodes
          type: string
        licenses:
          description: List of licenses
          type: string
        max_start_delay:
          description: Maximum delay in which jobs outside of the reservation will
            be permitted to overlap once any jobs are queued for the reservation
          type: integer
        name:
          description: Reservationn name
          type: string
        node_count:
          description: Count of nodes reserved
          type: integer
        node_list:
          description: List of reserved nodes
          type: string
        partition:
          description: Partition
          type: string
        purge_completed:
          $ref: '#/components/schemas/v0_0_37_reservation_purge_completed'
        start_time:
          description: Start time of reservation
          type: integer
        watts:
          description: amount of power to reserve in watts
          type: integer
        tres:
          description: List of TRES
          type: string
        users:
          description: List of users
          type: string
      type: object
    v0.0.37_reservations_response:
      example:
        reservations:
        - core_spec_cnt: 6
          end_time: 1
          flags:
          - flags
          - flags
          groups: groups
          users: users
          max_start_delay: 5
          features: features
          start_time: 7
          burst_buffer: burst_buffer
          licenses: licenses
          partition: partition
          watts: 9
          name: name
          tres: tres
          accounts: accounts
          node_count: 5
          node_list: node_list
          purge_completed:
            time: 2
          core_count: 0
        - core_spec_cnt: 6
          end_time: 1
          flags:
          - flags
          - flags
          groups: groups
          users: users
          max_start_delay: 5
          features: features
          start_time: 7
          burst_buffer: burst_buffer
          licenses: licenses
          partition: partition
          watts: 9
          name: name
          tres: tres
          accounts: accounts
          node_count: 5
          node_list: node_list
          purge_completed:
            time: 2
          core_count: 0
        errors:
        - errno: 0
          error: error
        - errno: 0
          error: error
      properties:
        errors:
          description: slurm errors
          items:
            $ref: '#/components/schemas/v0.0.37_error'
          type: array
        reservations:
          description: reservation info
          items:
            $ref: '#/components/schemas/v0.0.37_reservation'
          type: array
      type: object
    v0.0.37_error:
      example:
        errno: 0
        error: error
      properties:
        error:
          description: error message
          type: string
        errno:
          description: error number
          type: integer
      type: object
    v0.0.37_signal:
      description: POSIX signal name
      enum:
      - HUP
      - INT
      - QUIT
      - ABRT
      - KILL
      - ALRM
      - TERM
      - USR1
      - USR2
      - URG
      - CONT
      - STOP
      - TSTP
      - TTIN
      - TTOU
      format: int32
      type: string
    v0.0.37_job_submission_response:
      example:
        job_id: 0
        step_id: step_id
        errors:
        - errno: 0
          error: error
        - errno: 0
          error: error
        job_submit_user_msg: job_submit_user_msg
      properties:
        errors:
          description: slurm errors
          items:
            $ref: '#/components/schemas/v0.0.37_error'
          type: array
        job_id:
          description: new job ID
          type: integer
        step_id:
          description: new job step ID
          type: string
        job_submit_user_msg:
          description: Message to user from job_submit plugin
          type: string
      type: object
    v0.0.37_job_submission:
      properties:
        script:
          description: Executable script (full contents) to run in batch step
          type: string
        job:
          $ref: '#/components/schemas/v0.0.37_job_properties'
        jobs:
          description: Properties of an HetJob
          items:
            $ref: '#/components/schemas/v0.0.37_job_properties'
          type: array
      required:
      - script
    v0.0.37_jobs_response:
      example:
        jobs:
        - cluster: cluster
          time_minimum: 3
          memory_per_tres: memory_per_tres
          qos: qos
          resize_time: 0
          eligible_time: 2
          cpus_per_tres: cpus_per_tres
          tasks: 6
          system_comment: system_comment
          federation_siblings_active: federation_siblings_active
          tasks_per_core: 6
          accrue_time: 0
          dependency: dependency
          profile:
          - profile
          - profile
          priority: 7
          tres_per_job: tres_per_job
          derived_exit_code: 3
          core_spec: core_spec
          mcs_label: mcs_label
          required_nodes: required_nodes
          tres_bind: tres_bind
          user_id: 5
          exit_code: 7
          federation_origin: federation_origin
          shared: shared
          tasks_per_board: 9
          user_name: user_name
          flags:
          - flags
          - flags
          standard_input: standard_input
          admin_comment: admin_comment
          cores_per_socket: cores_per_socket
          job_state: job_state
          current_working_directory: current_working_directory
          standard_error: standard_error
          array_job_id: 6
          cluster_features: cluster_features
          partition: partition
          threads_per_core: 7
          tres_alloc_str: tres_alloc_str
          memory_per_cpu: 6
          cpu_frequency_minimum: cpu_frequency_minimum
          node_count: 3
          deadline: 7
          memory_per_node: 6
          state_reason: state_reason
          het_job_offset: 2
          end_time: 4
          sockets_per_board: 6
          nice: 9
          last_sched_evaluation: 4
          tres_per_node: tres_per_node
          burst_buffer: burst_buffer
          licenses: licenses
          excluded_nodes: excluded_nodes
          array_max_tasks: 5
          het_job_id: 1
          sockets_per_node: 0
          time_limit: 3
          minimum_cpus_per_node: 5
          tasks_per_socket: 8
          batch_host: batch_host
          max_cpus: 5
          cpu_frequency_maximum: cpu_frequency_maximum
          features: features
          het_job_id_set: het_job_id_set
          state_description: state_description
          show_flags:
          - show_flags
          - show_flags
          array_task_id: 1
          minimum_tmp_disk_per_node: 6
          tres_req_str: tres_req_str
          burst_buffer_state: burst_buffer_state
          tres_per_socket: tres_per_socket
          array_task_string: array_task_string
          submit_time: 8
          wckey: wckey
          max_nodes: 9
          batch_flag: true
          start_time: 4
          name: name
          preempt_time: 3
          contiguous: true
          job_resources:
            nodes: nodes
            allocated_nodes:
              key:
                memory: 7
                cores: '{}'
                cpus: 1
                sockets: '{}'
            allocated_cpus: 1
            allocated_hosts: 6
          billable_tres: 2.3021358869347655
          federation_siblings_viable: federation_siblings_viable
          cpus_per_task: cpus_per_task
          batch_features: batch_features
          thread_spec: thread_spec
          cpu_frequency_governor: cpu_frequency_governor
          gres_detail:
          - gres_detail
          - gres_detail
          restart_cnt: 7
          resv_name: resv_name
          delay_boot: 9
          reboot: true
          cpus: 6
          standard_output: standard_output
          pre_sus_time: 3
          suspend_time: 7
          association_id: 5
          command: command
          tres_freq: tres_freq
          requeue: true
          tres_per_task: tres_per_task
          nodes: nodes
          group_id: 1
          job_id: 1
          comment: comment
          account: account
        - cluster: cluster
          time_minimum: 3
          memory_per_tres: memory_per_tres
          qos: qos
          resize_time: 0
          eligible_time: 2
          cpus_per_tres: cpus_per_tres
          tasks: 6
          system_comment: system_comment
          federation_siblings_active: federation_siblings_active
          tasks_per_core: 6
          accrue_time: 0
          dependency: dependency
          profile:
          - profile
          - profile
          priority: 7
          tres_per_job: tres_per_job
          derived_exit_code: 3
          core_spec: core_spec
          mcs_label: mcs_label
          required_nodes: required_nodes
          tres_bind: tres_bind
          user_id: 5
          exit_code: 7
          federation_origin: federation_origin
          shared: shared
          tasks_per_board: 9
          user_name: user_name
          flags:
          - flags
          - flags
          standard_input: standard_input
          admin_comment: admin_comment
          cores_per_socket: cores_per_socket
          job_state: job_state
          current_working_directory: current_working_directory
          standard_error: standard_error
          array_job_id: 6
          cluster_features: cluster_features
          partition: partition
          threads_per_core: 7
          tres_alloc_str: tres_alloc_str
          memory_per_cpu: 6
          cpu_frequency_minimum: cpu_frequency_minimum
          node_count: 3
          deadline: 7
          memory_per_node: 6
          state_reason: state_reason
          het_job_offset: 2
          end_time: 4
          sockets_per_board: 6
          nice: 9
          last_sched_evaluation: 4
          tres_per_node: tres_per_node
          burst_buffer: burst_buffer
          licenses: licenses
          excluded_nodes: excluded_nodes
          array_max_tasks: 5
          het_job_id: 1
          sockets_per_node: 0
          time_limit: 3
          minimum_cpus_per_node: 5
          tasks_per_socket: 8
          batch_host: batch_host
          max_cpus: 5
          cpu_frequency_maximum: cpu_frequency_maximum
          features: features
          het_job_id_set: het_job_id_set
          state_description: state_description
          show_flags:
          - show_flags
          - show_flags
          array_task_id: 1
          minimum_tmp_disk_per_node: 6
          tres_req_str: tres_req_str
          burst_buffer_state: burst_buffer_state
          tres_per_socket: tres_per_socket
          array_task_string: array_task_string
          submit_time: 8
          wckey: wckey
          max_nodes: 9
          batch_flag: true
          start_time: 4
          name: name
          preempt_time: 3
          contiguous: true
          job_resources:
            nodes: nodes
            allocated_nodes:
              key:
                memory: 7
                cores: '{}'
                cpus: 1
                sockets: '{}'
            allocated_cpus: 1
            allocated_hosts: 6
          billable_tres: 2.3021358869347655
          federation_siblings_viable: federation_siblings_viable
          cpus_per_task: cpus_per_task
          batch_features: batch_features
          thread_spec: thread_spec
          cpu_frequency_governor: cpu_frequency_governor
          gres_detail:
          - gres_detail
          - gres_detail
          restart_cnt: 7
          resv_name: resv_name
          delay_boot: 9
          reboot: true
          cpus: 6
          standard_output: standard_output
          pre_sus_time: 3
          suspend_time: 7
          association_id: 5
          command: command
          tres_freq: tres_freq
          requeue: true
          tres_per_task: tres_per_task
          nodes: nodes
          group_id: 1
          job_id: 1
          comment: comment
          account: account
        errors:
        - errno: 0
          error: error
        - errno: 0
          error: error
      properties:
        errors:
          description: slurm errors
          items:
            $ref: '#/components/schemas/v0.0.37_error'
          type: array
        jobs:
          description: job descriptions
          items:
            $ref: '#/components/schemas/v0.0.37_job_response_properties'
          type: array
      type: object
    v0.0.37_job_response_properties:
      example:
        cluster: cluster
        time_minimum: 3
        memory_per_tres: memory_per_tres
        qos: qos
        resize_time: 0
        eligible_time: 2
        cpus_per_tres: cpus_per_tres
        tasks: 6
        system_comment: system_comment
        federation_siblings_active: federation_siblings_active
        tasks_per_core: 6
        accrue_time: 0
        dependency: dependency
        profile:
        - profile
        - profile
        priority: 7
        tres_per_job: tres_per_job
        derived_exit_code: 3
        core_spec: core_spec
        mcs_label: mcs_label
        required_nodes: required_nodes
        tres_bind: tres_bind
        user_id: 5
        exit_code: 7
        federation_origin: federation_origin
        shared: shared
        tasks_per_board: 9
        user_name: user_name
        flags:
        - flags
        - flags
        standard_input: standard_input
        admin_comment: admin_comment
        cores_per_socket: cores_per_socket
        job_state: job_state
        current_working_directory: current_working_directory
        standard_error: standard_error
        array_job_id: 6
        cluster_features: cluster_features
        partition: partition
        threads_per_core: 7
        tres_alloc_str: tres_alloc_str
        memory_per_cpu: 6
        cpu_frequency_minimum: cpu_frequency_minimum
        node_count: 3
        deadline: 7
        memory_per_node: 6
        state_reason: state_reason
        het_job_offset: 2
        end_time: 4
        sockets_per_board: 6
        nice: 9
        last_sched_evaluation: 4
        tres_per_node: tres_per_node
        burst_buffer: burst_buffer
        licenses: licenses
        excluded_nodes: excluded_nodes
        array_max_tasks: 5
        het_job_id: 1
        sockets_per_node: 0
        time_limit: 3
        minimum_cpus_per_node: 5
        tasks_per_socket: 8
        batch_host: batch_host
        max_cpus: 5
        cpu_frequency_maximum: cpu_frequency_maximum
        features: features
        het_job_id_set: het_job_id_set
        state_description: state_description
        show_flags:
        - show_flags
        - show_flags
        array_task_id: 1
        minimum_tmp_disk_per_node: 6
        tres_req_str: tres_req_str
        burst_buffer_state: burst_buffer_state
        tres_per_socket: tres_per_socket
        array_task_string: array_task_string
        submit_time: 8
        wckey: wckey
        max_nodes: 9
        batch_flag: true
        start_time: 4
        name: name
        preempt_time: 3
        contiguous: true
        job_resources:
          nodes: nodes
          allocated_nodes:
            key:
              memory: 7
              cores: '{}'
              cpus: 1
              sockets: '{}'
          allocated_cpus: 1
          allocated_hosts: 6
        billable_tres: 2.3021358869347655
        federation_siblings_viable: federation_siblings_viable
        cpus_per_task: cpus_per_task
        batch_features: batch_features
        thread_spec: thread_spec
        cpu_frequency_governor: cpu_frequency_governor
        gres_detail:
        - gres_detail
        - gres_detail
        restart_cnt: 7
        resv_name: resv_name
        delay_boot: 9
        reboot: true
        cpus: 6
        standard_output: standard_output
        pre_sus_time: 3
        suspend_time: 7
        association_id: 5
        command: command
        tres_freq: tres_freq
        requeue: true
        tres_per_task: tres_per_task
        nodes: nodes
        group_id: 1
        job_id: 1
        comment: comment
        account: account
      properties:
        account:
          description: Charge resources used by this job to specified account
          type: string
        accrue_time:
          description: time job is eligible for running
          format: int64
          type: integer
        admin_comment:
          description: administrator's arbitrary comment
          type: string
        array_job_id:
          description: job_id of a job array or 0 if N/A
          type: integer
        array_task_id:
          description: task_id of a job array
          type: integer
        array_max_tasks:
          description: Maximum number of running array tasks
          type: integer
        array_task_string:
          description: string expression of task IDs in this record
          type: string
        association_id:
          description: association id for job
          type: integer
        batch_features:
          description: features required for batch script's node
          type: string
        batch_flag:
          description: 'if batch: queued job with script'
          type: boolean
        batch_host:
          description: name of host running batch script
          type: string
        flags:
          description: Job flags
          items:
            type: string
          type: array
        burst_buffer:
          description: burst buffer specifications
          type: string
        burst_buffer_state:
          description: burst buffer state info
          type: string
        cluster:
          description: name of cluster that the job is on
          type: string
        cluster_features:
          description: comma separated list of required cluster features
          type: string
        command:
          description: command to be executed
          type: string
        comment:
          description: arbitrary comment
          type: string
        contiguous:
          description: job requires contiguous nodes
          type: boolean
        core_spec:
          description: specialized core count
          type: string
        thread_spec:
          description: specialized thread count
          type: string
        cores_per_socket:
          description: cores per socket required by job
          type: string
        billable_tres:
          description: billable TRES
          type: number
        cpus_per_task:
          description: number of processors required for each task
          type: string
        cpu_frequency_minimum:
          description: Minimum cpu frequency
          type: string
        cpu_frequency_maximum:
          description: Maximum cpu frequency
          type: string
        cpu_frequency_governor:
          description: cpu frequency governor
          type: string
        cpus_per_tres:
          description: semicolon delimited list of TRES=# values
          type: string
        deadline:
          description: 'job start deadline '
          type: integer
        delay_boot:
          description: command to be executed
          type: integer
        dependency:
          description: synchronize job execution with other jobs
          type: string
        derived_exit_code:
          description: highest exit code of all job steps
          type: integer
        eligible_time:
          description: time job is eligible for running
          format: int64
          type: integer
        end_time:
          description: time of termination, actual or expected
          format: int64
          type: integer
        excluded_nodes:
          description: comma separated list of excluded nodes
          type: string
        exit_code:
          description: exit code for job
          type: integer
        features:
          description: comma separated list of required features
          type: string
        federation_origin:
          description: Origin cluster's name
          type: string
        federation_siblings_active:
          description: string of active sibling names
          type: string
        federation_siblings_viable:
          description: string of viable sibling names
          type: string
        gres_detail:
          description: Job flags
          items:
            type: string
          type: array
        group_id:
          description: group job submitted as
          type: integer
        job_id:
          description: job ID
          type: integer
        job_resources:
          $ref: '#/components/schemas/v0.0.37_job_resources'
        job_state:
          description: state of the job
          type: string
        last_sched_evaluation:
          description: last time job was evaluated for scheduling
          type: integer
        licenses:
          description: licenses required by the job
          type: string
        max_cpus:
          description: maximum number of cpus usable by job
          type: integer
        max_nodes:
          description: maximum number of nodes usable by job
          type: integer
        mcs_label:
          description: mcs_label if mcs plugin in use
          type: string
        memory_per_tres:
          description: semicolon delimited list of TRES=# values
          type: string
        name:
          description: name of the job
          type: string
        nodes:
          description: list of nodes allocated to job
          type: string
        nice:
          description: requested priority change
          type: integer
        tasks_per_core:
          description: number of tasks to invoke on each core
          type: integer
        tasks_per_socket:
          description: number of tasks to invoke on each socket
          type: integer
        tasks_per_board:
          description: number of tasks to invoke on each board
          type: integer
        cpus:
          description: minimum number of cpus required by job
          type: integer
        node_count:
          description: minimum number of nodes required by job
          type: integer
        tasks:
          description: requested task count
          type: integer
        het_job_id:
          description: job ID of hetjob leader
          type: integer
        het_job_id_set:
          description: job IDs for all components
          type: string
        het_job_offset:
          description: HetJob component offset from leader
          type: integer
        partition:
          description: name of assigned partition
          type: string
        memory_per_node:
          description: minimum real memory per node
          type: integer
        memory_per_cpu:
          description: minimum real memory per cpu
          type: integer
        minimum_cpus_per_node:
          description: 'minimum # CPUs per node'
          type: integer
        minimum_tmp_disk_per_node:
          description: minimum tmp disk per node
          type: integer
        preempt_time:
          description: preemption signal time
          format: int64
          type: integer
        pre_sus_time:
          description: time job ran prior to last suspend
          format: int64
          type: integer
        priority:
          description: relative priority of the job
          type: integer
        profile:
          description: Job profiling requested
          items:
            type: string
          type: array
        qos:
          description: Quality of Service
          type: string
        reboot:
          description: node reboot requested before start
          type: boolean
        required_nodes:
          description: comma separated list of required nodes
          type: string
        requeue:
          description: enable or disable job requeue option
          type: boolean
        resize_time:
          description: time of latest size change
          format: int64
          type: integer
        restart_cnt:
          description: count of job restarts
          type: integer
        resv_name:
          description: reservation name
          type: string
        shared:
          description: type and if job can share nodes with other jobs
          type: string
        show_flags:
          description: details requested
          items:
            type: string
          type: array
        sockets_per_board:
          description: sockets per board required by job
          type: integer
        sockets_per_node:
          description: sockets per node required by job
          type: integer
        start_time:
          description: time execution begins, actual or expected
          format: int64
          type: integer
        state_description:
          description: optional details for state_reason
          type: string
        state_reason:
          description: reason job still pending or failed
          type: string
        standard_error:
          description: pathname of job's stderr file
          type: string
        standard_input:
          description: pathname of job's stdin file
          type: string
        standard_output:
          description: pathname of job's stdout file
          type: string
        submit_time:
          description: time of job submission
          format: int64
          type: integer
        suspend_time:
          description: time job last suspended or resumed
          format: int64
          type: integer
        system_comment:
          description: slurmctld's arbitrary comment
          type: string
        time_limit:
          description: maximum run time in minutes
          format: int64
          type: integer
        time_minimum:
          description: minimum run time in minutes
          format: int64
          type: integer
        threads_per_core:
          description: threads per core required by job
          type: integer
        tres_bind:
          description: Task to TRES binding directives
          type: string
        tres_freq:
          description: TRES frequency directives
          type: string
        tres_per_job:
          description: semicolon delimited list of TRES=# values
          type: string
        tres_per_node:
          description: semicolon delimited list of TRES=# values
          type: string
        tres_per_socket:
          description: semicolon delimited list of TRES=# values
          type: string
        tres_per_task:
          description: semicolon delimited list of TRES=# values
          type: string
        tres_req_str:
          description: tres reqeusted in the job
          type: string
        tres_alloc_str:
          description: tres used in the job
          type: string
        user_id:
          description: user id the job runs as
          format: int64
          type: integer
        user_name:
          description: user the job runs as
          type: string
        wckey:
          description: wckey for job
          type: string
        current_working_directory:
          description: pathname of working directory
          type: string
      type: object
    v0.0.37_job_resources:
      example:
        nodes: nodes
        allocated_nodes:
          key:
            memory: 7
            cores: '{}'
            cpus: 1
            sockets: '{}'
        allocated_cpus: 1
        allocated_hosts: 6
      properties:
        nodes:
          description: list of assigned job nodes
          type: string
        allocated_cpus:
          description: number of assigned job cpus
          type: integer
        allocated_hosts:
          description: number of assigned job hosts
          type: integer
        allocated_nodes:
          additionalProperties:
            $ref: '#/components/schemas/v0.0.37_node_allocation'
          description: node allocations
          type: object
      type: object
    v0.0.37_node_allocation:
      example:
        memory: 7
        cores: '{}'
        cpus: 1
        sockets: '{}'
      properties:
        memory:
          description: amount of assigned job memory
          type: integer
        cpus:
          description: amount of assigned job CPUs
          type: integer
        sockets:
          description: assignment status of each socket by socket id
          type: object
        cores:
          description: assignment status of each core by core id
          type: object
      type: object
    v0.0.37_job_properties:
      properties:
        account:
          description: Charge resources used by this job to specified account.
          type: string
        account_gather_freqency:
          description: Define the job accounting and profiling sampling intervals.
          type: string
        argv:
          description: Arguments to the script.
          items:
            type: string
          type: array
        array:
          description: Submit a job array, multiple jobs to be executed with identical
            parameters. The indexes specification identifies what array index values
            should be used.
          type: string
        batch_features:
          description: features required for batch script's node
          type: string
        begin_time:
          description: Submit the batch script to the Slurm controller immediately,
            like normal, but tell the controller to defer the allocation of the job
            until the specified time.
          format: int64
          type: integer
        burst_buffer:
          description: Burst buffer specification.
          type: string
        cluster_constraints:
          description: Specifies features that a federated cluster must have to have
            a sibling job submitted to it.
          type: string
        comment:
          description: An arbitrary comment.
          type: string
        constraints:
          description: node features required by job.
          type: string
        core_specification:
          description: Count of specialized threads per node reserved by the job for
            system operations and not used by the application.
          type: integer
        cores_per_socket:
          description: Restrict node selection to nodes with at least the specified
            number of cores per socket.
          type: integer
        cpu_binding:
          description: Cpu binding
          type: string
        cpu_binding_hint:
          description: Cpu binding hint
          type: string
        cpu_frequency:
          description: Request that job steps initiated by srun commands inside this
            sbatch script be run at some requested frequency if possible, on the CPUs
            selected for the step on the compute node(s).
          type: string
        cpus_per_gpu:
          description: Number of CPUs requested per allocated GPU.
          type: string
        cpus_per_task:
          description: Advise the Slurm controller that ensuing job steps will require
            ncpus number of processors per task.
          type: integer
        current_working_directory:
          description: Instruct Slurm to connect the batch script's standard output
            directly to the file name.
          type: string
        deadline:
          description: Remove the job if no ending is possible before this deadline
            (start > (deadline - time[-min])).
          type: string
        delay_boot:
          description: Do not reboot nodes in order to satisfied this job's feature
            specification if the job has been eligible to run for less than this time
            period.
          type: integer
        dependency:
          description: Defer the start of this job until the specified dependencies
            have been satisfied completed.
          type: string
        distribution:
          description: Specify alternate distribution methods for remote processes.
          type: string
        environment:
          description: Dictionary of environment entries.
          type: object
        exclusive:
          description: The job allocation can share nodes just other users with the
            "user" option or with the "mcs" option).
          enum:
          - user
          - mcs
          - "true"
          - "false"
          type: string
        get_user_environment:
          description: Load new login environment for user on job node.
          type: boolean
        gres:
          description: Specifies a comma delimited list of generic consumable resources.
          type: string
        gres_flags:
          description: Specify generic resource task binding options.
          enum:
          - disable-binding
          - enforce-binding
          type: string
        gpu_binding:
          description: Requested binding of tasks to GPU.
          type: string
        gpu_frequency:
          description: Requested GPU frequency.
          type: string
        gpus:
          description: GPUs per job.
          type: string
        gpus_per_node:
          description: GPUs per node.
          type: string
        gpus_per_socket:
          description: GPUs per socket.
          type: string
        gpus_per_task:
          description: GPUs per task.
          type: string
        hold:
          description: Specify the job is to be submitted in a held state (priority
            of zero).
          type: boolean
        kill_on_invalid_dependency:
          description: If a job has an invalid dependency, then Slurm is to terminate
            it.
          type: boolean
        licenses:
          description: Specification of licenses (or other resources available on
            all nodes of the cluster) which must be allocated to this job.
          type: string
        mail_type:
          description: Notify user by email when certain event types occur.
          type: string
        mail_user:
          description: User to receive email notification of state changes as defined
            by mail_type.
          type: string
        mcs_label:
          description: This parameter is a group among the groups of the user.
          type: string
        memory_binding:
          description: Bind tasks to memory.
          type: string
        memory_per_cpu:
          description: Minimum real memory per cpu (MB).
          type: integer
        memory_per_gpu:
          description: Minimum memory required per allocated GPU.
          type: integer
        memory_per_node:
          description: Minimum real memory per node (MB).
          type: integer
        minimum_cpus_per_node:
          description: Minimum number of CPUs per node.
          type: integer
        minimum_nodes:
          description: If a range of node counts is given, prefer the smaller count.
          type: boolean
        name:
          description: Specify a name for the job allocation.
          type: string
        nice:
          description: Run the job with an adjusted scheduling priority within Slurm.
          type: string
        no_kill:
          description: Do not automatically terminate a job if one of the nodes it
            has been allocated fails.
          type: boolean
        nodes:
          description: Request that a minimum of minnodes nodes and a maximum node
            count.
          items:
            type: integer
          maxItems: 2
          minItems: 1
          type: array
        open_mode:
          default: append
          description: Open the output and error files using append or truncate mode
            as specified.
          enum:
          - append
          - truncate
          type: string
        partition:
          description: Request a specific partition for the resource allocation.
          type: string
        priority:
          description: Request a specific job priority.
          type: string
        qos:
          description: Request a quality of service for the job.
          type: string
        requeue:
          description: Specifies that the batch job should eligible to being requeue.
          type: boolean
        reservation:
          description: Allocate resources for the job from the named reservation.
          type: string
        signal:
          description: When a job is within sig_time seconds of its end time, send
            it the signal sig_num.
          pattern: (B:|)sig_num(@sig_time|)
          type: string
        sockets_per_node:
          description: Restrict node selection to nodes with at least the specified
            number of sockets.
          type: integer
        spread_job:
          description: Spread the job allocation over as many nodes as possible and
            attempt to evenly distribute tasks across the allocated nodes.
          type: boolean
        standard_error:
          description: Instruct Slurm to connect the batch script's standard error
            directly to the file name.
          type: string
        standard_input:
          description: Instruct Slurm to connect the batch script's standard input
            directly to the file name specified.
          type: string
        standard_output:
          description: Instruct Slurm to connect the batch script's standard output
            directly to the file name.
          type: string
        tasks:
          description: Advises the Slurm controller that job steps run within the
            allocation will launch a maximum of number tasks and to provide for sufficient
            resources.
          type: integer
        tasks_per_core:
          description: Request the maximum ntasks be invoked on each core.
          type: integer
        tasks_per_node:
          description: Request the maximum ntasks be invoked on each node.
          type: integer
        tasks_per_socket:
          description: Request the maximum ntasks be invoked on each socket.
          type: integer
        thread_specification:
          description: Count of specialized threads per node reserved by the job for
            system operations and not used by the application.
          type: integer
        threads_per_core:
          description: Restrict node selection to nodes with at least the specified
            number of threads per core.
          type: integer
        time_limit:
          description: Step time limit.
          type: integer
        time_minimum:
          description: Minimum run time in minutes.
          type: integer
        wait_all_nodes:
          description: Do not begin execution until all nodes are ready for use.
          type: boolean
        wckey:
          description: Specify wckey to be used with job.
          type: string
      required:
      - environment
      type: object
    v0.0.37_node:
      example:
        reason: reason
        boards: 0
        alloc_cpus: 7
        active_features: active_features
        reason_set_by_user: reason_set_by_user
        slurmd_start_time: 4
        features: features
        hostname: hostname
        cores: 1
        slurmd_version: slurmd_version
        reason_changed_at: 2
        operating_system: operating_system
        next_state_after_reboot_flags:
        - next_state_after_reboot_flags
        - next_state_after_reboot_flags
        tres: tres
        cpu_binding: 5
        state: state
        sockets: 7
        architecture: architecture
        owner: owner
        partitions:
        - partitions
        - partitions
        state_flags:
        - state_flags
        - state_flags
        address: address
        cpus: 7
        free_memory: 2
        tres_weighted: 6.84685269835264
        gres: gres
        gres_drained: gres_drained
        threads: 1
        weight: 1
        boot_time: 6
        gres_used: gres_used
        alloc_memory: 4
        mcs_label: mcs_label
        real_memory: 3
        burstbuffer_network_address: burstbuffer_network_address
        port: 9
        name: name
        next_state_after_reboot: next_state_after_reboot
        temporary_disk: 1
        tres_used: tres_used
        idle_cpus: 1
        cpu_load: 5
      properties:
        architecture:
          description: computer architecture
          type: string
        burstbuffer_network_address:
          description: BcastAddr
          type: string
        boards:
          description: total number of boards per node
          type: integer
        boot_time:
          description: timestamp of node boot
          format: int64
          type: integer
        cores:
          description: number of cores per socket
          type: integer
        cpu_binding:
          description: Default task binding
          type: integer
        cpu_load:
          description: CPU load * 100
          format: int64
          type: integer
        free_memory:
          description: free memory in MiB
          type: integer
        cpus:
          description: configured count of cpus running on the node
          type: integer
        features:
          type: string
        active_features:
          description: list of a node's available features
          type: string
        gres:
          description: list of a node's generic resources
          type: string
        gres_drained:
          description: list of drained GRES
          type: string
        gres_used:
          description: list of GRES in current use
          type: string
        mcs_label:
          description: mcs label if mcs plugin in use
          type: string
        name:
          description: node name to slurm
          type: string
        next_state_after_reboot:
          description: state after reboot
          type: string
        next_state_after_reboot_flags:
          description: node state flags
          items:
            type: string
          type: array
        address:
          description: state after reboot
          type: string
        hostname:
          description: node's hostname
          type: string
        state:
          description: current node state
          type: string
        state_flags:
          description: node state flags
          items:
            type: string
          type: array
        operating_system:
          description: operating system
          type: string
        owner:
          description: User allowed to use this node
          type: string
        partitions:
          description: assigned partitions
          items:
            type: string
          type: array
        port:
          description: TCP port number of the slurmd
          type: integer
        real_memory:
          description: configured MB of real memory on the node
          type: integer
        reason:
          description: reason for node being DOWN or DRAINING
          type: string
        reason_changed_at:
          description: Time stamp when reason was set
          type: integer
        reason_set_by_user:
          description: User that set the reason
          type: string
        slurmd_start_time:
          description: timestamp of slurmd startup
          format: int64
          type: integer
        sockets:
          description: total number of sockets per node
          type: integer
        threads:
          description: number of threads per core
          type: integer
        temporary_disk:
          description: configured MB of total disk in TMP_FS
          type: integer
        weight:
          description: arbitrary priority of node for scheduling
          type: integer
        tres:
          description: TRES on node
          type: string
        tres_used:
          description: TRES used on node
          type: string
        tres_weighted:
          description: TRES weight used on node
          format: double
          type: number
        slurmd_version:
          description: Slurmd version
          type: string
        alloc_cpus:
          description: Allocated CPUs
          format: int64
          type: integer
        idle_cpus:
          description: Idle CPUs
          format: int64
          type: integer
        alloc_memory:
          description: Allocated memory (MB)
          format: int64
          type: integer
      type: object
    v0.0.37_nodes_response:
      example:
        nodes:
        - reason: reason
          boards: 0
          alloc_cpus: 7
          active_features: active_features
          reason_set_by_user: reason_set_by_user
          slurmd_start_time: 4
          features: features
          hostname: hostname
          cores: 1
          slurmd_version: slurmd_version
          reason_changed_at: 2
          operating_system: operating_system
          next_state_after_reboot_flags:
          - next_state_after_reboot_flags
          - next_state_after_reboot_flags
          tres: tres
          cpu_binding: 5
          state: state
          sockets: 7
          architecture: architecture
          owner: owner
          partitions:
          - partitions
          - partitions
          state_flags:
          - state_flags
          - state_flags
          address: address
          cpus: 7
          free_memory: 2
          tres_weighted: 6.84685269835264
          gres: gres
          gres_drained: gres_drained
          threads: 1
          weight: 1
          boot_time: 6
          gres_used: gres_used
          alloc_memory: 4
          mcs_label: mcs_label
          real_memory: 3
          burstbuffer_network_address: burstbuffer_network_address
          port: 9
          name: name
          next_state_after_reboot: next_state_after_reboot
          temporary_disk: 1
          tres_used: tres_used
          idle_cpus: 1
          cpu_load: 5
        - reason: reason
          boards: 0
          alloc_cpus: 7
          active_features: active_features
          reason_set_by_user: reason_set_by_user
          slurmd_start_time: 4
          features: features
          hostname: hostname
          cores: 1
          slurmd_version: slurmd_version
          reason_changed_at: 2
          operating_system: operating_system
          next_state_after_reboot_flags:
          - next_state_after_reboot_flags
          - next_state_after_reboot_flags
          tres: tres
          cpu_binding: 5
          state: state
          sockets: 7
          architecture: architecture
          owner: owner
          partitions:
          - partitions
          - partitions
          state_flags:
          - state_flags
          - state_flags
          address: address
          cpus: 7
          free_memory: 2
          tres_weighted: 6.84685269835264
          gres: gres
          gres_drained: gres_drained
          threads: 1
          weight: 1
          boot_time: 6
          gres_used: gres_used
          alloc_memory: 4
          mcs_label: mcs_label
          real_memory: 3
          burstbuffer_network_address: burstbuffer_network_address
          port: 9
          name: name
          next_state_after_reboot: next_state_after_reboot
          temporary_disk: 1
          tres_used: tres_used
          idle_cpus: 1
          cpu_load: 5
        errors:
        - errno: 0
          error: error
        - errno: 0
          error: error
      properties:
        errors:
          description: slurm errors
          items:
            $ref: '#/components/schemas/v0.0.37_error'
          type: array
        nodes:
          description: nodes info
          items:
            $ref: '#/components/schemas/v0.0.37_node'
          type: array
      type: object
    v0_0_37_diag_statistics:
      description: Slurm statistics
      example:
        schedule_cycle_per_minute: 6
        req_time_start: 5
        jobs_running: 8
        bf_cycle_max: 6
        bf_last_backfilled_jobs: 3
        rpcs_user:
        - user_id: 3
          ave_time: 5
          count: 7
          total_time: 3
          user: user
        - user_id: 3
          ave_time: 5
          count: 7
          total_time: 3
          user: user
        bf_last_depth: 6
        rpcs_message_type:
        - type_id: 4
          ave_time: 7
          count: 8
          message_type: message_type
          total_time: 3
        - type_id: 4
          ave_time: 7
          count: 8
          message_type: message_type
          total_time: 3
        bf_backfilled_het_jobs: 6
        bf_backfilled_jobs: 6
        bf_table_size: 7
        bf_cycle_mean: 2
        job_states_ts: 9
        bf_queue_len: 7
        jobs_started: 4
        schedule_cycle_max: 4
        server_thread_count: 5
        dbd_agent_queue_size: 3
        bf_table_size_mean: 6
        jobs_pending: 6
        agent_count: 7
        bf_cycle_last: 3
        parts_packed: 6
        agent_thread_count: 9
        jobs_completed: 5
        bf_depth_mean: 6
        bf_active: true
        bf_depth_mean_try: 3
        schedule_cycle_mean: 1
        agent_queue_size: 2
        jobs_failed: 9
        gettimeofday_latency: 2
        bf_last_depth_try: 5
        req_time: 1
        bf_cycle_counter: 1
        schedule_queue_length: 7
        bf_queue_len_mean: 0
        schedule_cycle_total: 1
        bf_when_last_cycle: 0
        schedule_cycle_last: 7
        jobs_canceled: 9
        jobs_submitted: 1
        schedule_cycle_mean_depth: 1
      properties:
        parts_packed:
          description: partition records packed
          type: integer
        req_time:
          description: generation time
          type: integer
        req_time_start:
          description: data since
          type: integer
        server_thread_count:
          description: Server thread count
          type: integer
        agent_queue_size:
          description: Agent queue size
          type: integer
        agent_count:
          description: Agent count
          type: integer
        agent_thread_count:
          description: Agent thread count
          type: integer
        dbd_agent_queue_size:
          description: DBD Agent queue size
          type: integer
        gettimeofday_latency:
          description: Latency for 1000 calls to gettimeofday()
          type: integer
        schedule_cycle_max:
          description: Main Schedule max cycle
          type: integer
        schedule_cycle_last:
          description: Main Schedule last cycle
          type: integer
        schedule_cycle_total:
          description: Main Schedule cycle iterations
          type: integer
        schedule_cycle_mean:
          description: Average time for Schedule Max cycle
          type: integer
        schedule_cycle_mean_depth:
          description: Average depth for Schedule Max cycle
          type: integer
        schedule_cycle_per_minute:
          description: Main Schedule Cycles per minute
          type: integer
        schedule_queue_length:
          description: Main Schedule Last queue length
          type: integer
        jobs_submitted:
          description: Job submitted
          type: integer
        jobs_started:
          description: Job started
          type: integer
        jobs_completed:
          description: Job completed
          type: integer
        jobs_canceled:
          description: Job cancelled
          type: integer
        jobs_failed:
          description: Job failed
          type: integer
        jobs_pending:
          description: Job pending
          type: integer
        jobs_running:
          description: Job running
          type: integer
        job_states_ts:
          description: Job states timestamp
          type: integer
        bf_backfilled_jobs:
          description: Total backfilled jobs (since last slurm start)
          type: integer
        bf_last_backfilled_jobs:
          description: Total backfilled jobs (since last stats cycle start)
          type: integer
        bf_backfilled_het_jobs:
          description: Total backfilled heterogeneous job components
          type: integer
        bf_cycle_counter:
          description: Backfill Schedule Total cycles
          type: integer
        bf_cycle_mean:
          description: Backfill Schedule Mean cycle
          type: integer
        bf_cycle_max:
          description: Backfill Schedule Max cycle time
          type: integer
        bf_last_depth:
          description: Backfill Schedule Last depth cycle
          type: integer
        bf_last_depth_try:
          description: Backfill Schedule Mean cycle (try sched)
          type: integer
        bf_depth_mean:
          description: Backfill Schedule Depth Mean
          type: integer
        bf_depth_mean_try:
          description: Backfill Schedule Depth Mean (try sched)
          type: integer
        bf_cycle_last:
          description: Backfill Schedule Last cycle time
          type: integer
        bf_queue_len:
          description: Backfill Schedule Last queue length
          type: integer
        bf_queue_len_mean:
          description: Backfill Schedule Mean queue length
          type: integer
        bf_table_size:
          description: Backfill table size
          type: integer
        bf_table_size_mean:
          description: Backfill table mean
          type: integer
        bf_when_last_cycle:
          description: Last cycle timestamp
          type: integer
        bf_active:
          description: Backfill Schedule currently active
          type: boolean
        rpcs_message_type:
          description: Remote Procedure Call statistics by message type
          items:
            $ref: '#/components/schemas/v0.0.37_diag_rpcm'
          type: array
        rpcs_user:
          description: Remote Procedure Call statistics by user
          items:
            $ref: '#/components/schemas/v0.0.37_diag_rpcu'
          type: array
      type: object
    v0_0_37_reservation_purge_completed:
      description: If PURGE_COMP flag is set the amount of seconds this reservation
        will sit idle until it is revoked
      example:
        time: 2
      properties:
        time:
          description: amount of seconds this reservation will sit idle until it is
            revoked
          type: integer
      type: object
  securitySchemes:
    user:
      description: User name
      in: header
      name: X-SLURM-USER-NAME
      type: apiKey
    token:
      description: User access token
      in: header
      name: X-SLURM-USER-TOKEN
      type: apiKey
