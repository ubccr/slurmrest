/*
 * Slurm Rest API
 *
 * API to access and control Slurm.
 *
 * API version: 0.0.36
 * Contact: sales@schedmd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrest

import (
	"encoding/json"
)

// V0036DiagStatistics Slurm statistics
type V0036DiagStatistics struct {
	// partition records packed
	PartsPacked *int32 `json:"parts_packed,omitempty"`
	// generation time
	ReqTime *int32 `json:"req_time,omitempty"`
	// data since
	ReqTimeStart *int32 `json:"req_time_start,omitempty"`
	// Server thread count
	ServerThreadCount *int32 `json:"server_thread_count,omitempty"`
	// Agent queue size
	AgentQueueSize *int32 `json:"agent_queue_size,omitempty"`
	// Agent count
	AgentCount *int32 `json:"agent_count,omitempty"`
	// Agent thread count
	AgentThreadCount *int32 `json:"agent_thread_count,omitempty"`
	// DBD Agent queue size
	DbdAgentQueueSize *int32 `json:"dbd_agent_queue_size,omitempty"`
	// Latency for 1000 calls to gettimeofday()
	GettimeofdayLatency *int32 `json:"gettimeofday_latency,omitempty"`
	// Main Schedule max cycle
	ScheduleCycleMax *int32 `json:"schedule_cycle_max,omitempty"`
	// Main Schedule last cycle
	ScheduleCycleLast *int32 `json:"schedule_cycle_last,omitempty"`
	// Main Schedule cycle iterations
	ScheduleCycleTotal *int32 `json:"schedule_cycle_total,omitempty"`
	// Average time for Schedule Max cycle
	ScheduleCycleMean *int32 `json:"schedule_cycle_mean,omitempty"`
	// Average depth for Schedule Max cycle
	ScheduleCycleMeanDepth *int32 `json:"schedule_cycle_mean_depth,omitempty"`
	// Main Schedule Cycles per minute
	ScheduleCyclePerMinute *int32 `json:"schedule_cycle_per_minute,omitempty"`
	// Main Schedule Last queue length
	ScheduleQueueLength *int32 `json:"schedule_queue_length,omitempty"`
	// Job submitted
	JobsSubmitted *int32 `json:"jobs_submitted,omitempty"`
	// Job started
	JobsStarted *int32 `json:"jobs_started,omitempty"`
	// Job completed
	JobsCompleted *int32 `json:"jobs_completed,omitempty"`
	// Job cancelled
	JobsCanceled *int32 `json:"jobs_canceled,omitempty"`
	// Job failed
	JobsFailed *int32 `json:"jobs_failed,omitempty"`
	// Job pending
	JobsPending *int32 `json:"jobs_pending,omitempty"`
	// Job running
	JobsRunning *int32 `json:"jobs_running,omitempty"`
	// Job states timestamp
	JobStatesTs *int32 `json:"job_states_ts,omitempty"`
	// Total backfilled jobs (since last slurm start)
	BfBackfilledJobs *int32 `json:"bf_backfilled_jobs,omitempty"`
	// Total backfilled jobs (since last stats cycle start)
	BfLastBackfilledJobs *int32 `json:"bf_last_backfilled_jobs,omitempty"`
	// Total backfilled heterogeneous job components
	BfBackfilledHetJobs *int32 `json:"bf_backfilled_het_jobs,omitempty"`
	// Backfill Schedule Total cycles
	BfCycleCounter *int32 `json:"bf_cycle_counter,omitempty"`
	// Backfill Schedule Mean cycle
	BfCycleMean *int32 `json:"bf_cycle_mean,omitempty"`
	// Backfill Schedule Max cycle time
	BfCycleMax *int32 `json:"bf_cycle_max,omitempty"`
	// Backfill Schedule Last depth cycle
	BfLastDepth *int32 `json:"bf_last_depth,omitempty"`
	// Backfill Schedule Mean cycle (try sched)
	BfLastDepthTry *int32 `json:"bf_last_depth_try,omitempty"`
	// Backfill Schedule Depth Mean
	BfDepthMean *int32 `json:"bf_depth_mean,omitempty"`
	// Backfill Schedule Depth Mean (try sched)
	BfDepthMeanTry *int32 `json:"bf_depth_mean_try,omitempty"`
	// Backfill Schedule Last cycle time
	BfCycleLast *int32 `json:"bf_cycle_last,omitempty"`
	// Backfill Schedule Last queue length
	BfQueueLen *int32 `json:"bf_queue_len,omitempty"`
	// Backfill Schedule Mean queue length
	BfQueueLenMean *int32 `json:"bf_queue_len_mean,omitempty"`
	// Last cycle timestamp
	BfWhenLastCycle *int32 `json:"bf_when_last_cycle,omitempty"`
	// Backfill Schedule currently active
	BfActive *bool `json:"bf_active,omitempty"`
}

// NewV0036DiagStatistics instantiates a new V0036DiagStatistics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0036DiagStatistics() *V0036DiagStatistics {
	this := V0036DiagStatistics{}
	return &this
}

// NewV0036DiagStatisticsWithDefaults instantiates a new V0036DiagStatistics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0036DiagStatisticsWithDefaults() *V0036DiagStatistics {
	this := V0036DiagStatistics{}
	return &this
}

// GetPartsPacked returns the PartsPacked field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetPartsPacked() int32 {
	if o == nil || o.PartsPacked == nil {
		var ret int32
		return ret
	}
	return *o.PartsPacked
}

// GetPartsPackedOk returns a tuple with the PartsPacked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetPartsPackedOk() (*int32, bool) {
	if o == nil || o.PartsPacked == nil {
		return nil, false
	}
	return o.PartsPacked, true
}

// HasPartsPacked returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasPartsPacked() bool {
	if o != nil && o.PartsPacked != nil {
		return true
	}

	return false
}

// SetPartsPacked gets a reference to the given int32 and assigns it to the PartsPacked field.
func (o *V0036DiagStatistics) SetPartsPacked(v int32) {
	o.PartsPacked = &v
}

// GetReqTime returns the ReqTime field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetReqTime() int32 {
	if o == nil || o.ReqTime == nil {
		var ret int32
		return ret
	}
	return *o.ReqTime
}

// GetReqTimeOk returns a tuple with the ReqTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetReqTimeOk() (*int32, bool) {
	if o == nil || o.ReqTime == nil {
		return nil, false
	}
	return o.ReqTime, true
}

// HasReqTime returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasReqTime() bool {
	if o != nil && o.ReqTime != nil {
		return true
	}

	return false
}

// SetReqTime gets a reference to the given int32 and assigns it to the ReqTime field.
func (o *V0036DiagStatistics) SetReqTime(v int32) {
	o.ReqTime = &v
}

// GetReqTimeStart returns the ReqTimeStart field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetReqTimeStart() int32 {
	if o == nil || o.ReqTimeStart == nil {
		var ret int32
		return ret
	}
	return *o.ReqTimeStart
}

// GetReqTimeStartOk returns a tuple with the ReqTimeStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetReqTimeStartOk() (*int32, bool) {
	if o == nil || o.ReqTimeStart == nil {
		return nil, false
	}
	return o.ReqTimeStart, true
}

// HasReqTimeStart returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasReqTimeStart() bool {
	if o != nil && o.ReqTimeStart != nil {
		return true
	}

	return false
}

// SetReqTimeStart gets a reference to the given int32 and assigns it to the ReqTimeStart field.
func (o *V0036DiagStatistics) SetReqTimeStart(v int32) {
	o.ReqTimeStart = &v
}

// GetServerThreadCount returns the ServerThreadCount field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetServerThreadCount() int32 {
	if o == nil || o.ServerThreadCount == nil {
		var ret int32
		return ret
	}
	return *o.ServerThreadCount
}

// GetServerThreadCountOk returns a tuple with the ServerThreadCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetServerThreadCountOk() (*int32, bool) {
	if o == nil || o.ServerThreadCount == nil {
		return nil, false
	}
	return o.ServerThreadCount, true
}

// HasServerThreadCount returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasServerThreadCount() bool {
	if o != nil && o.ServerThreadCount != nil {
		return true
	}

	return false
}

// SetServerThreadCount gets a reference to the given int32 and assigns it to the ServerThreadCount field.
func (o *V0036DiagStatistics) SetServerThreadCount(v int32) {
	o.ServerThreadCount = &v
}

// GetAgentQueueSize returns the AgentQueueSize field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetAgentQueueSize() int32 {
	if o == nil || o.AgentQueueSize == nil {
		var ret int32
		return ret
	}
	return *o.AgentQueueSize
}

// GetAgentQueueSizeOk returns a tuple with the AgentQueueSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetAgentQueueSizeOk() (*int32, bool) {
	if o == nil || o.AgentQueueSize == nil {
		return nil, false
	}
	return o.AgentQueueSize, true
}

// HasAgentQueueSize returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasAgentQueueSize() bool {
	if o != nil && o.AgentQueueSize != nil {
		return true
	}

	return false
}

// SetAgentQueueSize gets a reference to the given int32 and assigns it to the AgentQueueSize field.
func (o *V0036DiagStatistics) SetAgentQueueSize(v int32) {
	o.AgentQueueSize = &v
}

// GetAgentCount returns the AgentCount field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetAgentCount() int32 {
	if o == nil || o.AgentCount == nil {
		var ret int32
		return ret
	}
	return *o.AgentCount
}

// GetAgentCountOk returns a tuple with the AgentCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetAgentCountOk() (*int32, bool) {
	if o == nil || o.AgentCount == nil {
		return nil, false
	}
	return o.AgentCount, true
}

// HasAgentCount returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasAgentCount() bool {
	if o != nil && o.AgentCount != nil {
		return true
	}

	return false
}

// SetAgentCount gets a reference to the given int32 and assigns it to the AgentCount field.
func (o *V0036DiagStatistics) SetAgentCount(v int32) {
	o.AgentCount = &v
}

// GetAgentThreadCount returns the AgentThreadCount field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetAgentThreadCount() int32 {
	if o == nil || o.AgentThreadCount == nil {
		var ret int32
		return ret
	}
	return *o.AgentThreadCount
}

// GetAgentThreadCountOk returns a tuple with the AgentThreadCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetAgentThreadCountOk() (*int32, bool) {
	if o == nil || o.AgentThreadCount == nil {
		return nil, false
	}
	return o.AgentThreadCount, true
}

// HasAgentThreadCount returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasAgentThreadCount() bool {
	if o != nil && o.AgentThreadCount != nil {
		return true
	}

	return false
}

// SetAgentThreadCount gets a reference to the given int32 and assigns it to the AgentThreadCount field.
func (o *V0036DiagStatistics) SetAgentThreadCount(v int32) {
	o.AgentThreadCount = &v
}

// GetDbdAgentQueueSize returns the DbdAgentQueueSize field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetDbdAgentQueueSize() int32 {
	if o == nil || o.DbdAgentQueueSize == nil {
		var ret int32
		return ret
	}
	return *o.DbdAgentQueueSize
}

// GetDbdAgentQueueSizeOk returns a tuple with the DbdAgentQueueSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetDbdAgentQueueSizeOk() (*int32, bool) {
	if o == nil || o.DbdAgentQueueSize == nil {
		return nil, false
	}
	return o.DbdAgentQueueSize, true
}

// HasDbdAgentQueueSize returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasDbdAgentQueueSize() bool {
	if o != nil && o.DbdAgentQueueSize != nil {
		return true
	}

	return false
}

// SetDbdAgentQueueSize gets a reference to the given int32 and assigns it to the DbdAgentQueueSize field.
func (o *V0036DiagStatistics) SetDbdAgentQueueSize(v int32) {
	o.DbdAgentQueueSize = &v
}

// GetGettimeofdayLatency returns the GettimeofdayLatency field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetGettimeofdayLatency() int32 {
	if o == nil || o.GettimeofdayLatency == nil {
		var ret int32
		return ret
	}
	return *o.GettimeofdayLatency
}

// GetGettimeofdayLatencyOk returns a tuple with the GettimeofdayLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetGettimeofdayLatencyOk() (*int32, bool) {
	if o == nil || o.GettimeofdayLatency == nil {
		return nil, false
	}
	return o.GettimeofdayLatency, true
}

// HasGettimeofdayLatency returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasGettimeofdayLatency() bool {
	if o != nil && o.GettimeofdayLatency != nil {
		return true
	}

	return false
}

// SetGettimeofdayLatency gets a reference to the given int32 and assigns it to the GettimeofdayLatency field.
func (o *V0036DiagStatistics) SetGettimeofdayLatency(v int32) {
	o.GettimeofdayLatency = &v
}

// GetScheduleCycleMax returns the ScheduleCycleMax field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetScheduleCycleMax() int32 {
	if o == nil || o.ScheduleCycleMax == nil {
		var ret int32
		return ret
	}
	return *o.ScheduleCycleMax
}

// GetScheduleCycleMaxOk returns a tuple with the ScheduleCycleMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetScheduleCycleMaxOk() (*int32, bool) {
	if o == nil || o.ScheduleCycleMax == nil {
		return nil, false
	}
	return o.ScheduleCycleMax, true
}

// HasScheduleCycleMax returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasScheduleCycleMax() bool {
	if o != nil && o.ScheduleCycleMax != nil {
		return true
	}

	return false
}

// SetScheduleCycleMax gets a reference to the given int32 and assigns it to the ScheduleCycleMax field.
func (o *V0036DiagStatistics) SetScheduleCycleMax(v int32) {
	o.ScheduleCycleMax = &v
}

// GetScheduleCycleLast returns the ScheduleCycleLast field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetScheduleCycleLast() int32 {
	if o == nil || o.ScheduleCycleLast == nil {
		var ret int32
		return ret
	}
	return *o.ScheduleCycleLast
}

// GetScheduleCycleLastOk returns a tuple with the ScheduleCycleLast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetScheduleCycleLastOk() (*int32, bool) {
	if o == nil || o.ScheduleCycleLast == nil {
		return nil, false
	}
	return o.ScheduleCycleLast, true
}

// HasScheduleCycleLast returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasScheduleCycleLast() bool {
	if o != nil && o.ScheduleCycleLast != nil {
		return true
	}

	return false
}

// SetScheduleCycleLast gets a reference to the given int32 and assigns it to the ScheduleCycleLast field.
func (o *V0036DiagStatistics) SetScheduleCycleLast(v int32) {
	o.ScheduleCycleLast = &v
}

// GetScheduleCycleTotal returns the ScheduleCycleTotal field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetScheduleCycleTotal() int32 {
	if o == nil || o.ScheduleCycleTotal == nil {
		var ret int32
		return ret
	}
	return *o.ScheduleCycleTotal
}

// GetScheduleCycleTotalOk returns a tuple with the ScheduleCycleTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetScheduleCycleTotalOk() (*int32, bool) {
	if o == nil || o.ScheduleCycleTotal == nil {
		return nil, false
	}
	return o.ScheduleCycleTotal, true
}

// HasScheduleCycleTotal returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasScheduleCycleTotal() bool {
	if o != nil && o.ScheduleCycleTotal != nil {
		return true
	}

	return false
}

// SetScheduleCycleTotal gets a reference to the given int32 and assigns it to the ScheduleCycleTotal field.
func (o *V0036DiagStatistics) SetScheduleCycleTotal(v int32) {
	o.ScheduleCycleTotal = &v
}

// GetScheduleCycleMean returns the ScheduleCycleMean field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetScheduleCycleMean() int32 {
	if o == nil || o.ScheduleCycleMean == nil {
		var ret int32
		return ret
	}
	return *o.ScheduleCycleMean
}

// GetScheduleCycleMeanOk returns a tuple with the ScheduleCycleMean field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetScheduleCycleMeanOk() (*int32, bool) {
	if o == nil || o.ScheduleCycleMean == nil {
		return nil, false
	}
	return o.ScheduleCycleMean, true
}

// HasScheduleCycleMean returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasScheduleCycleMean() bool {
	if o != nil && o.ScheduleCycleMean != nil {
		return true
	}

	return false
}

// SetScheduleCycleMean gets a reference to the given int32 and assigns it to the ScheduleCycleMean field.
func (o *V0036DiagStatistics) SetScheduleCycleMean(v int32) {
	o.ScheduleCycleMean = &v
}

// GetScheduleCycleMeanDepth returns the ScheduleCycleMeanDepth field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetScheduleCycleMeanDepth() int32 {
	if o == nil || o.ScheduleCycleMeanDepth == nil {
		var ret int32
		return ret
	}
	return *o.ScheduleCycleMeanDepth
}

// GetScheduleCycleMeanDepthOk returns a tuple with the ScheduleCycleMeanDepth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetScheduleCycleMeanDepthOk() (*int32, bool) {
	if o == nil || o.ScheduleCycleMeanDepth == nil {
		return nil, false
	}
	return o.ScheduleCycleMeanDepth, true
}

// HasScheduleCycleMeanDepth returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasScheduleCycleMeanDepth() bool {
	if o != nil && o.ScheduleCycleMeanDepth != nil {
		return true
	}

	return false
}

// SetScheduleCycleMeanDepth gets a reference to the given int32 and assigns it to the ScheduleCycleMeanDepth field.
func (o *V0036DiagStatistics) SetScheduleCycleMeanDepth(v int32) {
	o.ScheduleCycleMeanDepth = &v
}

// GetScheduleCyclePerMinute returns the ScheduleCyclePerMinute field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetScheduleCyclePerMinute() int32 {
	if o == nil || o.ScheduleCyclePerMinute == nil {
		var ret int32
		return ret
	}
	return *o.ScheduleCyclePerMinute
}

// GetScheduleCyclePerMinuteOk returns a tuple with the ScheduleCyclePerMinute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetScheduleCyclePerMinuteOk() (*int32, bool) {
	if o == nil || o.ScheduleCyclePerMinute == nil {
		return nil, false
	}
	return o.ScheduleCyclePerMinute, true
}

// HasScheduleCyclePerMinute returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasScheduleCyclePerMinute() bool {
	if o != nil && o.ScheduleCyclePerMinute != nil {
		return true
	}

	return false
}

// SetScheduleCyclePerMinute gets a reference to the given int32 and assigns it to the ScheduleCyclePerMinute field.
func (o *V0036DiagStatistics) SetScheduleCyclePerMinute(v int32) {
	o.ScheduleCyclePerMinute = &v
}

// GetScheduleQueueLength returns the ScheduleQueueLength field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetScheduleQueueLength() int32 {
	if o == nil || o.ScheduleQueueLength == nil {
		var ret int32
		return ret
	}
	return *o.ScheduleQueueLength
}

// GetScheduleQueueLengthOk returns a tuple with the ScheduleQueueLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetScheduleQueueLengthOk() (*int32, bool) {
	if o == nil || o.ScheduleQueueLength == nil {
		return nil, false
	}
	return o.ScheduleQueueLength, true
}

// HasScheduleQueueLength returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasScheduleQueueLength() bool {
	if o != nil && o.ScheduleQueueLength != nil {
		return true
	}

	return false
}

// SetScheduleQueueLength gets a reference to the given int32 and assigns it to the ScheduleQueueLength field.
func (o *V0036DiagStatistics) SetScheduleQueueLength(v int32) {
	o.ScheduleQueueLength = &v
}

// GetJobsSubmitted returns the JobsSubmitted field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetJobsSubmitted() int32 {
	if o == nil || o.JobsSubmitted == nil {
		var ret int32
		return ret
	}
	return *o.JobsSubmitted
}

// GetJobsSubmittedOk returns a tuple with the JobsSubmitted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetJobsSubmittedOk() (*int32, bool) {
	if o == nil || o.JobsSubmitted == nil {
		return nil, false
	}
	return o.JobsSubmitted, true
}

// HasJobsSubmitted returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasJobsSubmitted() bool {
	if o != nil && o.JobsSubmitted != nil {
		return true
	}

	return false
}

// SetJobsSubmitted gets a reference to the given int32 and assigns it to the JobsSubmitted field.
func (o *V0036DiagStatistics) SetJobsSubmitted(v int32) {
	o.JobsSubmitted = &v
}

// GetJobsStarted returns the JobsStarted field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetJobsStarted() int32 {
	if o == nil || o.JobsStarted == nil {
		var ret int32
		return ret
	}
	return *o.JobsStarted
}

// GetJobsStartedOk returns a tuple with the JobsStarted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetJobsStartedOk() (*int32, bool) {
	if o == nil || o.JobsStarted == nil {
		return nil, false
	}
	return o.JobsStarted, true
}

// HasJobsStarted returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasJobsStarted() bool {
	if o != nil && o.JobsStarted != nil {
		return true
	}

	return false
}

// SetJobsStarted gets a reference to the given int32 and assigns it to the JobsStarted field.
func (o *V0036DiagStatistics) SetJobsStarted(v int32) {
	o.JobsStarted = &v
}

// GetJobsCompleted returns the JobsCompleted field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetJobsCompleted() int32 {
	if o == nil || o.JobsCompleted == nil {
		var ret int32
		return ret
	}
	return *o.JobsCompleted
}

// GetJobsCompletedOk returns a tuple with the JobsCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetJobsCompletedOk() (*int32, bool) {
	if o == nil || o.JobsCompleted == nil {
		return nil, false
	}
	return o.JobsCompleted, true
}

// HasJobsCompleted returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasJobsCompleted() bool {
	if o != nil && o.JobsCompleted != nil {
		return true
	}

	return false
}

// SetJobsCompleted gets a reference to the given int32 and assigns it to the JobsCompleted field.
func (o *V0036DiagStatistics) SetJobsCompleted(v int32) {
	o.JobsCompleted = &v
}

// GetJobsCanceled returns the JobsCanceled field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetJobsCanceled() int32 {
	if o == nil || o.JobsCanceled == nil {
		var ret int32
		return ret
	}
	return *o.JobsCanceled
}

// GetJobsCanceledOk returns a tuple with the JobsCanceled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetJobsCanceledOk() (*int32, bool) {
	if o == nil || o.JobsCanceled == nil {
		return nil, false
	}
	return o.JobsCanceled, true
}

// HasJobsCanceled returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasJobsCanceled() bool {
	if o != nil && o.JobsCanceled != nil {
		return true
	}

	return false
}

// SetJobsCanceled gets a reference to the given int32 and assigns it to the JobsCanceled field.
func (o *V0036DiagStatistics) SetJobsCanceled(v int32) {
	o.JobsCanceled = &v
}

// GetJobsFailed returns the JobsFailed field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetJobsFailed() int32 {
	if o == nil || o.JobsFailed == nil {
		var ret int32
		return ret
	}
	return *o.JobsFailed
}

// GetJobsFailedOk returns a tuple with the JobsFailed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetJobsFailedOk() (*int32, bool) {
	if o == nil || o.JobsFailed == nil {
		return nil, false
	}
	return o.JobsFailed, true
}

// HasJobsFailed returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasJobsFailed() bool {
	if o != nil && o.JobsFailed != nil {
		return true
	}

	return false
}

// SetJobsFailed gets a reference to the given int32 and assigns it to the JobsFailed field.
func (o *V0036DiagStatistics) SetJobsFailed(v int32) {
	o.JobsFailed = &v
}

// GetJobsPending returns the JobsPending field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetJobsPending() int32 {
	if o == nil || o.JobsPending == nil {
		var ret int32
		return ret
	}
	return *o.JobsPending
}

// GetJobsPendingOk returns a tuple with the JobsPending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetJobsPendingOk() (*int32, bool) {
	if o == nil || o.JobsPending == nil {
		return nil, false
	}
	return o.JobsPending, true
}

// HasJobsPending returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasJobsPending() bool {
	if o != nil && o.JobsPending != nil {
		return true
	}

	return false
}

// SetJobsPending gets a reference to the given int32 and assigns it to the JobsPending field.
func (o *V0036DiagStatistics) SetJobsPending(v int32) {
	o.JobsPending = &v
}

// GetJobsRunning returns the JobsRunning field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetJobsRunning() int32 {
	if o == nil || o.JobsRunning == nil {
		var ret int32
		return ret
	}
	return *o.JobsRunning
}

// GetJobsRunningOk returns a tuple with the JobsRunning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetJobsRunningOk() (*int32, bool) {
	if o == nil || o.JobsRunning == nil {
		return nil, false
	}
	return o.JobsRunning, true
}

// HasJobsRunning returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasJobsRunning() bool {
	if o != nil && o.JobsRunning != nil {
		return true
	}

	return false
}

// SetJobsRunning gets a reference to the given int32 and assigns it to the JobsRunning field.
func (o *V0036DiagStatistics) SetJobsRunning(v int32) {
	o.JobsRunning = &v
}

// GetJobStatesTs returns the JobStatesTs field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetJobStatesTs() int32 {
	if o == nil || o.JobStatesTs == nil {
		var ret int32
		return ret
	}
	return *o.JobStatesTs
}

// GetJobStatesTsOk returns a tuple with the JobStatesTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetJobStatesTsOk() (*int32, bool) {
	if o == nil || o.JobStatesTs == nil {
		return nil, false
	}
	return o.JobStatesTs, true
}

// HasJobStatesTs returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasJobStatesTs() bool {
	if o != nil && o.JobStatesTs != nil {
		return true
	}

	return false
}

// SetJobStatesTs gets a reference to the given int32 and assigns it to the JobStatesTs field.
func (o *V0036DiagStatistics) SetJobStatesTs(v int32) {
	o.JobStatesTs = &v
}

// GetBfBackfilledJobs returns the BfBackfilledJobs field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetBfBackfilledJobs() int32 {
	if o == nil || o.BfBackfilledJobs == nil {
		var ret int32
		return ret
	}
	return *o.BfBackfilledJobs
}

// GetBfBackfilledJobsOk returns a tuple with the BfBackfilledJobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetBfBackfilledJobsOk() (*int32, bool) {
	if o == nil || o.BfBackfilledJobs == nil {
		return nil, false
	}
	return o.BfBackfilledJobs, true
}

// HasBfBackfilledJobs returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasBfBackfilledJobs() bool {
	if o != nil && o.BfBackfilledJobs != nil {
		return true
	}

	return false
}

// SetBfBackfilledJobs gets a reference to the given int32 and assigns it to the BfBackfilledJobs field.
func (o *V0036DiagStatistics) SetBfBackfilledJobs(v int32) {
	o.BfBackfilledJobs = &v
}

// GetBfLastBackfilledJobs returns the BfLastBackfilledJobs field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetBfLastBackfilledJobs() int32 {
	if o == nil || o.BfLastBackfilledJobs == nil {
		var ret int32
		return ret
	}
	return *o.BfLastBackfilledJobs
}

// GetBfLastBackfilledJobsOk returns a tuple with the BfLastBackfilledJobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetBfLastBackfilledJobsOk() (*int32, bool) {
	if o == nil || o.BfLastBackfilledJobs == nil {
		return nil, false
	}
	return o.BfLastBackfilledJobs, true
}

// HasBfLastBackfilledJobs returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasBfLastBackfilledJobs() bool {
	if o != nil && o.BfLastBackfilledJobs != nil {
		return true
	}

	return false
}

// SetBfLastBackfilledJobs gets a reference to the given int32 and assigns it to the BfLastBackfilledJobs field.
func (o *V0036DiagStatistics) SetBfLastBackfilledJobs(v int32) {
	o.BfLastBackfilledJobs = &v
}

// GetBfBackfilledHetJobs returns the BfBackfilledHetJobs field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetBfBackfilledHetJobs() int32 {
	if o == nil || o.BfBackfilledHetJobs == nil {
		var ret int32
		return ret
	}
	return *o.BfBackfilledHetJobs
}

// GetBfBackfilledHetJobsOk returns a tuple with the BfBackfilledHetJobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetBfBackfilledHetJobsOk() (*int32, bool) {
	if o == nil || o.BfBackfilledHetJobs == nil {
		return nil, false
	}
	return o.BfBackfilledHetJobs, true
}

// HasBfBackfilledHetJobs returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasBfBackfilledHetJobs() bool {
	if o != nil && o.BfBackfilledHetJobs != nil {
		return true
	}

	return false
}

// SetBfBackfilledHetJobs gets a reference to the given int32 and assigns it to the BfBackfilledHetJobs field.
func (o *V0036DiagStatistics) SetBfBackfilledHetJobs(v int32) {
	o.BfBackfilledHetJobs = &v
}

// GetBfCycleCounter returns the BfCycleCounter field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetBfCycleCounter() int32 {
	if o == nil || o.BfCycleCounter == nil {
		var ret int32
		return ret
	}
	return *o.BfCycleCounter
}

// GetBfCycleCounterOk returns a tuple with the BfCycleCounter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetBfCycleCounterOk() (*int32, bool) {
	if o == nil || o.BfCycleCounter == nil {
		return nil, false
	}
	return o.BfCycleCounter, true
}

// HasBfCycleCounter returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasBfCycleCounter() bool {
	if o != nil && o.BfCycleCounter != nil {
		return true
	}

	return false
}

// SetBfCycleCounter gets a reference to the given int32 and assigns it to the BfCycleCounter field.
func (o *V0036DiagStatistics) SetBfCycleCounter(v int32) {
	o.BfCycleCounter = &v
}

// GetBfCycleMean returns the BfCycleMean field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetBfCycleMean() int32 {
	if o == nil || o.BfCycleMean == nil {
		var ret int32
		return ret
	}
	return *o.BfCycleMean
}

// GetBfCycleMeanOk returns a tuple with the BfCycleMean field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetBfCycleMeanOk() (*int32, bool) {
	if o == nil || o.BfCycleMean == nil {
		return nil, false
	}
	return o.BfCycleMean, true
}

// HasBfCycleMean returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasBfCycleMean() bool {
	if o != nil && o.BfCycleMean != nil {
		return true
	}

	return false
}

// SetBfCycleMean gets a reference to the given int32 and assigns it to the BfCycleMean field.
func (o *V0036DiagStatistics) SetBfCycleMean(v int32) {
	o.BfCycleMean = &v
}

// GetBfCycleMax returns the BfCycleMax field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetBfCycleMax() int32 {
	if o == nil || o.BfCycleMax == nil {
		var ret int32
		return ret
	}
	return *o.BfCycleMax
}

// GetBfCycleMaxOk returns a tuple with the BfCycleMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetBfCycleMaxOk() (*int32, bool) {
	if o == nil || o.BfCycleMax == nil {
		return nil, false
	}
	return o.BfCycleMax, true
}

// HasBfCycleMax returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasBfCycleMax() bool {
	if o != nil && o.BfCycleMax != nil {
		return true
	}

	return false
}

// SetBfCycleMax gets a reference to the given int32 and assigns it to the BfCycleMax field.
func (o *V0036DiagStatistics) SetBfCycleMax(v int32) {
	o.BfCycleMax = &v
}

// GetBfLastDepth returns the BfLastDepth field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetBfLastDepth() int32 {
	if o == nil || o.BfLastDepth == nil {
		var ret int32
		return ret
	}
	return *o.BfLastDepth
}

// GetBfLastDepthOk returns a tuple with the BfLastDepth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetBfLastDepthOk() (*int32, bool) {
	if o == nil || o.BfLastDepth == nil {
		return nil, false
	}
	return o.BfLastDepth, true
}

// HasBfLastDepth returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasBfLastDepth() bool {
	if o != nil && o.BfLastDepth != nil {
		return true
	}

	return false
}

// SetBfLastDepth gets a reference to the given int32 and assigns it to the BfLastDepth field.
func (o *V0036DiagStatistics) SetBfLastDepth(v int32) {
	o.BfLastDepth = &v
}

// GetBfLastDepthTry returns the BfLastDepthTry field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetBfLastDepthTry() int32 {
	if o == nil || o.BfLastDepthTry == nil {
		var ret int32
		return ret
	}
	return *o.BfLastDepthTry
}

// GetBfLastDepthTryOk returns a tuple with the BfLastDepthTry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetBfLastDepthTryOk() (*int32, bool) {
	if o == nil || o.BfLastDepthTry == nil {
		return nil, false
	}
	return o.BfLastDepthTry, true
}

// HasBfLastDepthTry returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasBfLastDepthTry() bool {
	if o != nil && o.BfLastDepthTry != nil {
		return true
	}

	return false
}

// SetBfLastDepthTry gets a reference to the given int32 and assigns it to the BfLastDepthTry field.
func (o *V0036DiagStatistics) SetBfLastDepthTry(v int32) {
	o.BfLastDepthTry = &v
}

// GetBfDepthMean returns the BfDepthMean field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetBfDepthMean() int32 {
	if o == nil || o.BfDepthMean == nil {
		var ret int32
		return ret
	}
	return *o.BfDepthMean
}

// GetBfDepthMeanOk returns a tuple with the BfDepthMean field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetBfDepthMeanOk() (*int32, bool) {
	if o == nil || o.BfDepthMean == nil {
		return nil, false
	}
	return o.BfDepthMean, true
}

// HasBfDepthMean returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasBfDepthMean() bool {
	if o != nil && o.BfDepthMean != nil {
		return true
	}

	return false
}

// SetBfDepthMean gets a reference to the given int32 and assigns it to the BfDepthMean field.
func (o *V0036DiagStatistics) SetBfDepthMean(v int32) {
	o.BfDepthMean = &v
}

// GetBfDepthMeanTry returns the BfDepthMeanTry field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetBfDepthMeanTry() int32 {
	if o == nil || o.BfDepthMeanTry == nil {
		var ret int32
		return ret
	}
	return *o.BfDepthMeanTry
}

// GetBfDepthMeanTryOk returns a tuple with the BfDepthMeanTry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetBfDepthMeanTryOk() (*int32, bool) {
	if o == nil || o.BfDepthMeanTry == nil {
		return nil, false
	}
	return o.BfDepthMeanTry, true
}

// HasBfDepthMeanTry returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasBfDepthMeanTry() bool {
	if o != nil && o.BfDepthMeanTry != nil {
		return true
	}

	return false
}

// SetBfDepthMeanTry gets a reference to the given int32 and assigns it to the BfDepthMeanTry field.
func (o *V0036DiagStatistics) SetBfDepthMeanTry(v int32) {
	o.BfDepthMeanTry = &v
}

// GetBfCycleLast returns the BfCycleLast field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetBfCycleLast() int32 {
	if o == nil || o.BfCycleLast == nil {
		var ret int32
		return ret
	}
	return *o.BfCycleLast
}

// GetBfCycleLastOk returns a tuple with the BfCycleLast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetBfCycleLastOk() (*int32, bool) {
	if o == nil || o.BfCycleLast == nil {
		return nil, false
	}
	return o.BfCycleLast, true
}

// HasBfCycleLast returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasBfCycleLast() bool {
	if o != nil && o.BfCycleLast != nil {
		return true
	}

	return false
}

// SetBfCycleLast gets a reference to the given int32 and assigns it to the BfCycleLast field.
func (o *V0036DiagStatistics) SetBfCycleLast(v int32) {
	o.BfCycleLast = &v
}

// GetBfQueueLen returns the BfQueueLen field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetBfQueueLen() int32 {
	if o == nil || o.BfQueueLen == nil {
		var ret int32
		return ret
	}
	return *o.BfQueueLen
}

// GetBfQueueLenOk returns a tuple with the BfQueueLen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetBfQueueLenOk() (*int32, bool) {
	if o == nil || o.BfQueueLen == nil {
		return nil, false
	}
	return o.BfQueueLen, true
}

// HasBfQueueLen returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasBfQueueLen() bool {
	if o != nil && o.BfQueueLen != nil {
		return true
	}

	return false
}

// SetBfQueueLen gets a reference to the given int32 and assigns it to the BfQueueLen field.
func (o *V0036DiagStatistics) SetBfQueueLen(v int32) {
	o.BfQueueLen = &v
}

// GetBfQueueLenMean returns the BfQueueLenMean field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetBfQueueLenMean() int32 {
	if o == nil || o.BfQueueLenMean == nil {
		var ret int32
		return ret
	}
	return *o.BfQueueLenMean
}

// GetBfQueueLenMeanOk returns a tuple with the BfQueueLenMean field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetBfQueueLenMeanOk() (*int32, bool) {
	if o == nil || o.BfQueueLenMean == nil {
		return nil, false
	}
	return o.BfQueueLenMean, true
}

// HasBfQueueLenMean returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasBfQueueLenMean() bool {
	if o != nil && o.BfQueueLenMean != nil {
		return true
	}

	return false
}

// SetBfQueueLenMean gets a reference to the given int32 and assigns it to the BfQueueLenMean field.
func (o *V0036DiagStatistics) SetBfQueueLenMean(v int32) {
	o.BfQueueLenMean = &v
}

// GetBfWhenLastCycle returns the BfWhenLastCycle field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetBfWhenLastCycle() int32 {
	if o == nil || o.BfWhenLastCycle == nil {
		var ret int32
		return ret
	}
	return *o.BfWhenLastCycle
}

// GetBfWhenLastCycleOk returns a tuple with the BfWhenLastCycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetBfWhenLastCycleOk() (*int32, bool) {
	if o == nil || o.BfWhenLastCycle == nil {
		return nil, false
	}
	return o.BfWhenLastCycle, true
}

// HasBfWhenLastCycle returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasBfWhenLastCycle() bool {
	if o != nil && o.BfWhenLastCycle != nil {
		return true
	}

	return false
}

// SetBfWhenLastCycle gets a reference to the given int32 and assigns it to the BfWhenLastCycle field.
func (o *V0036DiagStatistics) SetBfWhenLastCycle(v int32) {
	o.BfWhenLastCycle = &v
}

// GetBfActive returns the BfActive field value if set, zero value otherwise.
func (o *V0036DiagStatistics) GetBfActive() bool {
	if o == nil || o.BfActive == nil {
		var ret bool
		return ret
	}
	return *o.BfActive
}

// GetBfActiveOk returns a tuple with the BfActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036DiagStatistics) GetBfActiveOk() (*bool, bool) {
	if o == nil || o.BfActive == nil {
		return nil, false
	}
	return o.BfActive, true
}

// HasBfActive returns a boolean if a field has been set.
func (o *V0036DiagStatistics) HasBfActive() bool {
	if o != nil && o.BfActive != nil {
		return true
	}

	return false
}

// SetBfActive gets a reference to the given bool and assigns it to the BfActive field.
func (o *V0036DiagStatistics) SetBfActive(v bool) {
	o.BfActive = &v
}

func (o V0036DiagStatistics) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PartsPacked != nil {
		toSerialize["parts_packed"] = o.PartsPacked
	}
	if o.ReqTime != nil {
		toSerialize["req_time"] = o.ReqTime
	}
	if o.ReqTimeStart != nil {
		toSerialize["req_time_start"] = o.ReqTimeStart
	}
	if o.ServerThreadCount != nil {
		toSerialize["server_thread_count"] = o.ServerThreadCount
	}
	if o.AgentQueueSize != nil {
		toSerialize["agent_queue_size"] = o.AgentQueueSize
	}
	if o.AgentCount != nil {
		toSerialize["agent_count"] = o.AgentCount
	}
	if o.AgentThreadCount != nil {
		toSerialize["agent_thread_count"] = o.AgentThreadCount
	}
	if o.DbdAgentQueueSize != nil {
		toSerialize["dbd_agent_queue_size"] = o.DbdAgentQueueSize
	}
	if o.GettimeofdayLatency != nil {
		toSerialize["gettimeofday_latency"] = o.GettimeofdayLatency
	}
	if o.ScheduleCycleMax != nil {
		toSerialize["schedule_cycle_max"] = o.ScheduleCycleMax
	}
	if o.ScheduleCycleLast != nil {
		toSerialize["schedule_cycle_last"] = o.ScheduleCycleLast
	}
	if o.ScheduleCycleTotal != nil {
		toSerialize["schedule_cycle_total"] = o.ScheduleCycleTotal
	}
	if o.ScheduleCycleMean != nil {
		toSerialize["schedule_cycle_mean"] = o.ScheduleCycleMean
	}
	if o.ScheduleCycleMeanDepth != nil {
		toSerialize["schedule_cycle_mean_depth"] = o.ScheduleCycleMeanDepth
	}
	if o.ScheduleCyclePerMinute != nil {
		toSerialize["schedule_cycle_per_minute"] = o.ScheduleCyclePerMinute
	}
	if o.ScheduleQueueLength != nil {
		toSerialize["schedule_queue_length"] = o.ScheduleQueueLength
	}
	if o.JobsSubmitted != nil {
		toSerialize["jobs_submitted"] = o.JobsSubmitted
	}
	if o.JobsStarted != nil {
		toSerialize["jobs_started"] = o.JobsStarted
	}
	if o.JobsCompleted != nil {
		toSerialize["jobs_completed"] = o.JobsCompleted
	}
	if o.JobsCanceled != nil {
		toSerialize["jobs_canceled"] = o.JobsCanceled
	}
	if o.JobsFailed != nil {
		toSerialize["jobs_failed"] = o.JobsFailed
	}
	if o.JobsPending != nil {
		toSerialize["jobs_pending"] = o.JobsPending
	}
	if o.JobsRunning != nil {
		toSerialize["jobs_running"] = o.JobsRunning
	}
	if o.JobStatesTs != nil {
		toSerialize["job_states_ts"] = o.JobStatesTs
	}
	if o.BfBackfilledJobs != nil {
		toSerialize["bf_backfilled_jobs"] = o.BfBackfilledJobs
	}
	if o.BfLastBackfilledJobs != nil {
		toSerialize["bf_last_backfilled_jobs"] = o.BfLastBackfilledJobs
	}
	if o.BfBackfilledHetJobs != nil {
		toSerialize["bf_backfilled_het_jobs"] = o.BfBackfilledHetJobs
	}
	if o.BfCycleCounter != nil {
		toSerialize["bf_cycle_counter"] = o.BfCycleCounter
	}
	if o.BfCycleMean != nil {
		toSerialize["bf_cycle_mean"] = o.BfCycleMean
	}
	if o.BfCycleMax != nil {
		toSerialize["bf_cycle_max"] = o.BfCycleMax
	}
	if o.BfLastDepth != nil {
		toSerialize["bf_last_depth"] = o.BfLastDepth
	}
	if o.BfLastDepthTry != nil {
		toSerialize["bf_last_depth_try"] = o.BfLastDepthTry
	}
	if o.BfDepthMean != nil {
		toSerialize["bf_depth_mean"] = o.BfDepthMean
	}
	if o.BfDepthMeanTry != nil {
		toSerialize["bf_depth_mean_try"] = o.BfDepthMeanTry
	}
	if o.BfCycleLast != nil {
		toSerialize["bf_cycle_last"] = o.BfCycleLast
	}
	if o.BfQueueLen != nil {
		toSerialize["bf_queue_len"] = o.BfQueueLen
	}
	if o.BfQueueLenMean != nil {
		toSerialize["bf_queue_len_mean"] = o.BfQueueLenMean
	}
	if o.BfWhenLastCycle != nil {
		toSerialize["bf_when_last_cycle"] = o.BfWhenLastCycle
	}
	if o.BfActive != nil {
		toSerialize["bf_active"] = o.BfActive
	}
	return json.Marshal(toSerialize)
}

type NullableV0036DiagStatistics struct {
	value *V0036DiagStatistics
	isSet bool
}

func (v NullableV0036DiagStatistics) Get() *V0036DiagStatistics {
	return v.value
}

func (v *NullableV0036DiagStatistics) Set(val *V0036DiagStatistics) {
	v.value = val
	v.isSet = true
}

func (v NullableV0036DiagStatistics) IsSet() bool {
	return v.isSet
}

func (v *NullableV0036DiagStatistics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0036DiagStatistics(val *V0036DiagStatistics) *NullableV0036DiagStatistics {
	return &NullableV0036DiagStatistics{value: val, isSet: true}
}

func (v NullableV0036DiagStatistics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0036DiagStatistics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


