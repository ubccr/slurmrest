/*
 * Slurm Rest API
 *
 * API to access and control Slurm.
 *
 * API version: 0.0.36
 * Contact: sales@schedmd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrest

import (
	"encoding/json"
)

// V0036JobProperties struct for V0036JobProperties
type V0036JobProperties struct {
	// Charge resources used by this job to specified account.
	Account *string `json:"account,omitempty"`
	// Define the job accounting and profiling sampling intervals.
	AccountGatherFreqency *string `json:"account_gather_freqency,omitempty"`
	// Arguments to the script.
	Argv *[]string `json:"argv,omitempty"`
	// Submit a job array, multiple jobs to be executed with identical parameters. The indexes specification identifies what array index values should be used.
	Array *string `json:"array,omitempty"`
	// features required for batch script's node
	BatchFeatures *string `json:"batch_features,omitempty"`
	// Submit the batch script to the Slurm controller immediately, like normal, but tell the controller to defer the allocation of the job until the specified time.
	BeginTime *int64 `json:"begin_time,omitempty"`
	// Burst buffer specification.
	BurstBuffer *string `json:"burst_buffer,omitempty"`
	// Specifies features that a federated cluster must have to have a sibling job submitted to it.
	ClusterConstraints *string `json:"cluster_constraints,omitempty"`
	// An arbitrary comment.
	Comment *string `json:"comment,omitempty"`
	// node features required by job.
	Constraints *string `json:"constraints,omitempty"`
	// Count of specialized threads per node reserved by the job for system operations and not used by the application.
	CoreSpecification *int32 `json:"core_specification,omitempty"`
	// Restrict node selection to nodes with at least the specified number of cores per socket.
	CoresPerSocket *int32 `json:"cores_per_socket,omitempty"`
	// Cpu binding
	CpuBinding *string `json:"cpu_binding,omitempty"`
	// Cpu binding hint
	CpuBindingHint *string `json:"cpu_binding_hint,omitempty"`
	// Request that job steps initiated by srun commands inside this sbatch script be run at some requested frequency if possible, on the CPUs selected for the step on the compute node(s).
	CpuFrequency *string `json:"cpu_frequency,omitempty"`
	// Number of CPUs requested per allocated GPU.
	CpusPerGpu *string `json:"cpus_per_gpu,omitempty"`
	// Advise the Slurm controller that ensuing job steps will require ncpus number of processors per task.
	CpusPerTask *int32 `json:"cpus_per_task,omitempty"`
	// Instruct Slurm to connect the batch script's standard output directly to the file name.
	CurrentWorkingDirectory *string `json:"current_working_directory,omitempty"`
	// Remove the job if no ending is possible before this deadline (start > (deadline - time[-min])).
	Deadline *string `json:"deadline,omitempty"`
	// Do not reboot nodes in order to satisfied this job's feature specification if the job has been eligible to run for less than this time period.
	DelayBoot *int32 `json:"delay_boot,omitempty"`
	// Defer the start of this job until the specified dependencies have been satisfied completed.
	Dependency *string `json:"dependency,omitempty"`
	// Specify alternate distribution methods for remote processes.
	Distribution *string `json:"distribution,omitempty"`
	// Dictionary of environment entries.
	Environment map[string]interface{} `json:"environment"`
	// The job allocation can share nodes just other users with the \"user\" option or with the \"mcs\" option).
	Exclusive *string `json:"exclusive,omitempty"`
	// Load new login environment for user on job node.
	GetUserEnvironment *bool `json:"get_user_environment,omitempty"`
	// Specifies a comma delimited list of generic consumable resources.
	Gres *string `json:"gres,omitempty"`
	// Specify generic resource task binding options.
	GresFlags *string `json:"gres_flags,omitempty"`
	// Requested binding of tasks to GPU.
	GpuBinding *string `json:"gpu_binding,omitempty"`
	// Requested GPU frequency.
	GpuFrequency *string `json:"gpu_frequency,omitempty"`
	// GPUs per job.
	Gpus *string `json:"gpus,omitempty"`
	// GPUs per node.
	GpusPerNode *string `json:"gpus_per_node,omitempty"`
	// GPUs per socket.
	GpusPerSocket *string `json:"gpus_per_socket,omitempty"`
	// GPUs per task.
	GpusPerTask *string `json:"gpus_per_task,omitempty"`
	// Specify the job is to be submitted in a held state (priority of zero).
	Hold *bool `json:"hold,omitempty"`
	// If a job has an invalid dependency, then Slurm is to terminate it.
	KillOnInvalidDependency *bool `json:"kill_on_invalid_dependency,omitempty"`
	// Specification of licenses (or other resources available on all nodes of the cluster) which must be allocated to this job.
	Licenses *string `json:"licenses,omitempty"`
	// Notify user by email when certain event types occur.
	MailType *string `json:"mail_type,omitempty"`
	// User to receive email notification of state changes as defined by mail_type.
	MailUser *string `json:"mail_user,omitempty"`
	// This parameter is a group among the groups of the user.
	McsLabel *string `json:"mcs_label,omitempty"`
	// Bind tasks to memory.
	MemoryBinding *string `json:"memory_binding,omitempty"`
	// Minimum real memory per cpu (MB).
	MemoryPerCpu *int32 `json:"memory_per_cpu,omitempty"`
	// Minimum memory required per allocated GPU.
	MemoryPerGpu *int32 `json:"memory_per_gpu,omitempty"`
	// Minimum real memory per node (MB).
	MemoryPerNode *int32 `json:"memory_per_node,omitempty"`
	// Minimum number of CPUs per node.
	MinimumCpusPerNode *int32 `json:"minimum_cpus_per_node,omitempty"`
	// If a range of node counts is given, prefer the smaller count.
	MinimumNodes *bool `json:"minimum_nodes,omitempty"`
	// Specify a name for the job allocation.
	Name *string `json:"name,omitempty"`
	// Run the job with an adjusted scheduling priority within Slurm.
	Nice *string `json:"nice,omitempty"`
	// Do not automatically terminate a job if one of the nodes it has been allocated fails.
	NoKill *bool `json:"no_kill,omitempty"`
	// Request that a minimum of minnodes nodes and a maximum node count.
	Nodes *[]int32 `json:"nodes,omitempty"`
	// Open the output and error files using append or truncate mode as specified.
	OpenMode *string `json:"open_mode,omitempty"`
	// Request a specific partition for the resource allocation.
	Partition *string `json:"partition,omitempty"`
	// Request a specific job priority.
	Priority *string `json:"priority,omitempty"`
	// Request a quality of service for the job.
	Qos *string `json:"qos,omitempty"`
	// Specifies that the batch job should eligible to being requeue.
	Requeue *bool `json:"requeue,omitempty"`
	// Allocate resources for the job from the named reservation.
	Reservation *string `json:"reservation,omitempty"`
	// When a job is within sig_time seconds of its end time, send it the signal sig_num.
	Signal *string `json:"signal,omitempty"`
	// Restrict node selection to nodes with at least the specified number of sockets.
	SocketsPerNode *int32 `json:"sockets_per_node,omitempty"`
	// Spread the job allocation over as many nodes as possible and attempt to evenly distribute tasks across the allocated nodes.
	SpreadJob *bool `json:"spread_job,omitempty"`
	// Instruct Slurm to connect the batch script's standard error directly to the file name.
	StandardError *string `json:"standard_error,omitempty"`
	// Instruct Slurm to connect the batch script's standard input directly to the file name specified.
	StandardIn *string `json:"standard_in,omitempty"`
	// Instruct Slurm to connect the batch script's standard output directly to the file name.
	StandardOut *string `json:"standard_out,omitempty"`
	// Advises the Slurm controller that job steps run within the allocation will launch a maximum of number tasks and to provide for sufficient resources.
	Tasks *int32 `json:"tasks,omitempty"`
	// Request the maximum ntasks be invoked on each core.
	TasksPerCore *int32 `json:"tasks_per_core,omitempty"`
	// Request the maximum ntasks be invoked on each node.
	TasksPerNode *int32 `json:"tasks_per_node,omitempty"`
	// Request the maximum ntasks be invoked on each socket.
	TasksPerSocket *int32 `json:"tasks_per_socket,omitempty"`
	// Count of specialized threads per node reserved by the job for system operations and not used by the application.
	ThreadSpecification *int32 `json:"thread_specification,omitempty"`
	// Restrict node selection to nodes with at least the specified number of threads per core.
	ThreadsPerCore *int32 `json:"threads_per_core,omitempty"`
	// Step time limit.
	TimeLimit *int32 `json:"time_limit,omitempty"`
	// Minimum run time in minutes.
	TimeMinimum *int64 `json:"time_minimum,omitempty"`
	// Do not begin execution until all nodes are ready for use.
	WaitAllNodes *bool `json:"wait_all_nodes,omitempty"`
	// Specify wckey to be used with job.
	Wckey *string `json:"wckey,omitempty"`
}

// NewV0036JobProperties instantiates a new V0036JobProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0036JobProperties(environment map[string]interface{}) *V0036JobProperties {
	this := V0036JobProperties{}
	this.Environment = environment
	var openMode string = "append"
	this.OpenMode = &openMode
	return &this
}

// NewV0036JobPropertiesWithDefaults instantiates a new V0036JobProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0036JobPropertiesWithDefaults() *V0036JobProperties {
	this := V0036JobProperties{}
	var openMode string = "append"
	this.OpenMode = &openMode
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *V0036JobProperties) GetAccount() string {
	if o == nil || o.Account == nil {
		var ret string
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetAccountOk() (*string, bool) {
	if o == nil || o.Account == nil {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *V0036JobProperties) HasAccount() bool {
	if o != nil && o.Account != nil {
		return true
	}

	return false
}

// SetAccount gets a reference to the given string and assigns it to the Account field.
func (o *V0036JobProperties) SetAccount(v string) {
	o.Account = &v
}

// GetAccountGatherFreqency returns the AccountGatherFreqency field value if set, zero value otherwise.
func (o *V0036JobProperties) GetAccountGatherFreqency() string {
	if o == nil || o.AccountGatherFreqency == nil {
		var ret string
		return ret
	}
	return *o.AccountGatherFreqency
}

// GetAccountGatherFreqencyOk returns a tuple with the AccountGatherFreqency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetAccountGatherFreqencyOk() (*string, bool) {
	if o == nil || o.AccountGatherFreqency == nil {
		return nil, false
	}
	return o.AccountGatherFreqency, true
}

// HasAccountGatherFreqency returns a boolean if a field has been set.
func (o *V0036JobProperties) HasAccountGatherFreqency() bool {
	if o != nil && o.AccountGatherFreqency != nil {
		return true
	}

	return false
}

// SetAccountGatherFreqency gets a reference to the given string and assigns it to the AccountGatherFreqency field.
func (o *V0036JobProperties) SetAccountGatherFreqency(v string) {
	o.AccountGatherFreqency = &v
}

// GetArgv returns the Argv field value if set, zero value otherwise.
func (o *V0036JobProperties) GetArgv() []string {
	if o == nil || o.Argv == nil {
		var ret []string
		return ret
	}
	return *o.Argv
}

// GetArgvOk returns a tuple with the Argv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetArgvOk() (*[]string, bool) {
	if o == nil || o.Argv == nil {
		return nil, false
	}
	return o.Argv, true
}

// HasArgv returns a boolean if a field has been set.
func (o *V0036JobProperties) HasArgv() bool {
	if o != nil && o.Argv != nil {
		return true
	}

	return false
}

// SetArgv gets a reference to the given []string and assigns it to the Argv field.
func (o *V0036JobProperties) SetArgv(v []string) {
	o.Argv = &v
}

// GetArray returns the Array field value if set, zero value otherwise.
func (o *V0036JobProperties) GetArray() string {
	if o == nil || o.Array == nil {
		var ret string
		return ret
	}
	return *o.Array
}

// GetArrayOk returns a tuple with the Array field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetArrayOk() (*string, bool) {
	if o == nil || o.Array == nil {
		return nil, false
	}
	return o.Array, true
}

// HasArray returns a boolean if a field has been set.
func (o *V0036JobProperties) HasArray() bool {
	if o != nil && o.Array != nil {
		return true
	}

	return false
}

// SetArray gets a reference to the given string and assigns it to the Array field.
func (o *V0036JobProperties) SetArray(v string) {
	o.Array = &v
}

// GetBatchFeatures returns the BatchFeatures field value if set, zero value otherwise.
func (o *V0036JobProperties) GetBatchFeatures() string {
	if o == nil || o.BatchFeatures == nil {
		var ret string
		return ret
	}
	return *o.BatchFeatures
}

// GetBatchFeaturesOk returns a tuple with the BatchFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetBatchFeaturesOk() (*string, bool) {
	if o == nil || o.BatchFeatures == nil {
		return nil, false
	}
	return o.BatchFeatures, true
}

// HasBatchFeatures returns a boolean if a field has been set.
func (o *V0036JobProperties) HasBatchFeatures() bool {
	if o != nil && o.BatchFeatures != nil {
		return true
	}

	return false
}

// SetBatchFeatures gets a reference to the given string and assigns it to the BatchFeatures field.
func (o *V0036JobProperties) SetBatchFeatures(v string) {
	o.BatchFeatures = &v
}

// GetBeginTime returns the BeginTime field value if set, zero value otherwise.
func (o *V0036JobProperties) GetBeginTime() int64 {
	if o == nil || o.BeginTime == nil {
		var ret int64
		return ret
	}
	return *o.BeginTime
}

// GetBeginTimeOk returns a tuple with the BeginTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetBeginTimeOk() (*int64, bool) {
	if o == nil || o.BeginTime == nil {
		return nil, false
	}
	return o.BeginTime, true
}

// HasBeginTime returns a boolean if a field has been set.
func (o *V0036JobProperties) HasBeginTime() bool {
	if o != nil && o.BeginTime != nil {
		return true
	}

	return false
}

// SetBeginTime gets a reference to the given int64 and assigns it to the BeginTime field.
func (o *V0036JobProperties) SetBeginTime(v int64) {
	o.BeginTime = &v
}

// GetBurstBuffer returns the BurstBuffer field value if set, zero value otherwise.
func (o *V0036JobProperties) GetBurstBuffer() string {
	if o == nil || o.BurstBuffer == nil {
		var ret string
		return ret
	}
	return *o.BurstBuffer
}

// GetBurstBufferOk returns a tuple with the BurstBuffer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetBurstBufferOk() (*string, bool) {
	if o == nil || o.BurstBuffer == nil {
		return nil, false
	}
	return o.BurstBuffer, true
}

// HasBurstBuffer returns a boolean if a field has been set.
func (o *V0036JobProperties) HasBurstBuffer() bool {
	if o != nil && o.BurstBuffer != nil {
		return true
	}

	return false
}

// SetBurstBuffer gets a reference to the given string and assigns it to the BurstBuffer field.
func (o *V0036JobProperties) SetBurstBuffer(v string) {
	o.BurstBuffer = &v
}

// GetClusterConstraints returns the ClusterConstraints field value if set, zero value otherwise.
func (o *V0036JobProperties) GetClusterConstraints() string {
	if o == nil || o.ClusterConstraints == nil {
		var ret string
		return ret
	}
	return *o.ClusterConstraints
}

// GetClusterConstraintsOk returns a tuple with the ClusterConstraints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetClusterConstraintsOk() (*string, bool) {
	if o == nil || o.ClusterConstraints == nil {
		return nil, false
	}
	return o.ClusterConstraints, true
}

// HasClusterConstraints returns a boolean if a field has been set.
func (o *V0036JobProperties) HasClusterConstraints() bool {
	if o != nil && o.ClusterConstraints != nil {
		return true
	}

	return false
}

// SetClusterConstraints gets a reference to the given string and assigns it to the ClusterConstraints field.
func (o *V0036JobProperties) SetClusterConstraints(v string) {
	o.ClusterConstraints = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *V0036JobProperties) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *V0036JobProperties) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *V0036JobProperties) SetComment(v string) {
	o.Comment = &v
}

// GetConstraints returns the Constraints field value if set, zero value otherwise.
func (o *V0036JobProperties) GetConstraints() string {
	if o == nil || o.Constraints == nil {
		var ret string
		return ret
	}
	return *o.Constraints
}

// GetConstraintsOk returns a tuple with the Constraints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetConstraintsOk() (*string, bool) {
	if o == nil || o.Constraints == nil {
		return nil, false
	}
	return o.Constraints, true
}

// HasConstraints returns a boolean if a field has been set.
func (o *V0036JobProperties) HasConstraints() bool {
	if o != nil && o.Constraints != nil {
		return true
	}

	return false
}

// SetConstraints gets a reference to the given string and assigns it to the Constraints field.
func (o *V0036JobProperties) SetConstraints(v string) {
	o.Constraints = &v
}

// GetCoreSpecification returns the CoreSpecification field value if set, zero value otherwise.
func (o *V0036JobProperties) GetCoreSpecification() int32 {
	if o == nil || o.CoreSpecification == nil {
		var ret int32
		return ret
	}
	return *o.CoreSpecification
}

// GetCoreSpecificationOk returns a tuple with the CoreSpecification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetCoreSpecificationOk() (*int32, bool) {
	if o == nil || o.CoreSpecification == nil {
		return nil, false
	}
	return o.CoreSpecification, true
}

// HasCoreSpecification returns a boolean if a field has been set.
func (o *V0036JobProperties) HasCoreSpecification() bool {
	if o != nil && o.CoreSpecification != nil {
		return true
	}

	return false
}

// SetCoreSpecification gets a reference to the given int32 and assigns it to the CoreSpecification field.
func (o *V0036JobProperties) SetCoreSpecification(v int32) {
	o.CoreSpecification = &v
}

// GetCoresPerSocket returns the CoresPerSocket field value if set, zero value otherwise.
func (o *V0036JobProperties) GetCoresPerSocket() int32 {
	if o == nil || o.CoresPerSocket == nil {
		var ret int32
		return ret
	}
	return *o.CoresPerSocket
}

// GetCoresPerSocketOk returns a tuple with the CoresPerSocket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetCoresPerSocketOk() (*int32, bool) {
	if o == nil || o.CoresPerSocket == nil {
		return nil, false
	}
	return o.CoresPerSocket, true
}

// HasCoresPerSocket returns a boolean if a field has been set.
func (o *V0036JobProperties) HasCoresPerSocket() bool {
	if o != nil && o.CoresPerSocket != nil {
		return true
	}

	return false
}

// SetCoresPerSocket gets a reference to the given int32 and assigns it to the CoresPerSocket field.
func (o *V0036JobProperties) SetCoresPerSocket(v int32) {
	o.CoresPerSocket = &v
}

// GetCpuBinding returns the CpuBinding field value if set, zero value otherwise.
func (o *V0036JobProperties) GetCpuBinding() string {
	if o == nil || o.CpuBinding == nil {
		var ret string
		return ret
	}
	return *o.CpuBinding
}

// GetCpuBindingOk returns a tuple with the CpuBinding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetCpuBindingOk() (*string, bool) {
	if o == nil || o.CpuBinding == nil {
		return nil, false
	}
	return o.CpuBinding, true
}

// HasCpuBinding returns a boolean if a field has been set.
func (o *V0036JobProperties) HasCpuBinding() bool {
	if o != nil && o.CpuBinding != nil {
		return true
	}

	return false
}

// SetCpuBinding gets a reference to the given string and assigns it to the CpuBinding field.
func (o *V0036JobProperties) SetCpuBinding(v string) {
	o.CpuBinding = &v
}

// GetCpuBindingHint returns the CpuBindingHint field value if set, zero value otherwise.
func (o *V0036JobProperties) GetCpuBindingHint() string {
	if o == nil || o.CpuBindingHint == nil {
		var ret string
		return ret
	}
	return *o.CpuBindingHint
}

// GetCpuBindingHintOk returns a tuple with the CpuBindingHint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetCpuBindingHintOk() (*string, bool) {
	if o == nil || o.CpuBindingHint == nil {
		return nil, false
	}
	return o.CpuBindingHint, true
}

// HasCpuBindingHint returns a boolean if a field has been set.
func (o *V0036JobProperties) HasCpuBindingHint() bool {
	if o != nil && o.CpuBindingHint != nil {
		return true
	}

	return false
}

// SetCpuBindingHint gets a reference to the given string and assigns it to the CpuBindingHint field.
func (o *V0036JobProperties) SetCpuBindingHint(v string) {
	o.CpuBindingHint = &v
}

// GetCpuFrequency returns the CpuFrequency field value if set, zero value otherwise.
func (o *V0036JobProperties) GetCpuFrequency() string {
	if o == nil || o.CpuFrequency == nil {
		var ret string
		return ret
	}
	return *o.CpuFrequency
}

// GetCpuFrequencyOk returns a tuple with the CpuFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetCpuFrequencyOk() (*string, bool) {
	if o == nil || o.CpuFrequency == nil {
		return nil, false
	}
	return o.CpuFrequency, true
}

// HasCpuFrequency returns a boolean if a field has been set.
func (o *V0036JobProperties) HasCpuFrequency() bool {
	if o != nil && o.CpuFrequency != nil {
		return true
	}

	return false
}

// SetCpuFrequency gets a reference to the given string and assigns it to the CpuFrequency field.
func (o *V0036JobProperties) SetCpuFrequency(v string) {
	o.CpuFrequency = &v
}

// GetCpusPerGpu returns the CpusPerGpu field value if set, zero value otherwise.
func (o *V0036JobProperties) GetCpusPerGpu() string {
	if o == nil || o.CpusPerGpu == nil {
		var ret string
		return ret
	}
	return *o.CpusPerGpu
}

// GetCpusPerGpuOk returns a tuple with the CpusPerGpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetCpusPerGpuOk() (*string, bool) {
	if o == nil || o.CpusPerGpu == nil {
		return nil, false
	}
	return o.CpusPerGpu, true
}

// HasCpusPerGpu returns a boolean if a field has been set.
func (o *V0036JobProperties) HasCpusPerGpu() bool {
	if o != nil && o.CpusPerGpu != nil {
		return true
	}

	return false
}

// SetCpusPerGpu gets a reference to the given string and assigns it to the CpusPerGpu field.
func (o *V0036JobProperties) SetCpusPerGpu(v string) {
	o.CpusPerGpu = &v
}

// GetCpusPerTask returns the CpusPerTask field value if set, zero value otherwise.
func (o *V0036JobProperties) GetCpusPerTask() int32 {
	if o == nil || o.CpusPerTask == nil {
		var ret int32
		return ret
	}
	return *o.CpusPerTask
}

// GetCpusPerTaskOk returns a tuple with the CpusPerTask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetCpusPerTaskOk() (*int32, bool) {
	if o == nil || o.CpusPerTask == nil {
		return nil, false
	}
	return o.CpusPerTask, true
}

// HasCpusPerTask returns a boolean if a field has been set.
func (o *V0036JobProperties) HasCpusPerTask() bool {
	if o != nil && o.CpusPerTask != nil {
		return true
	}

	return false
}

// SetCpusPerTask gets a reference to the given int32 and assigns it to the CpusPerTask field.
func (o *V0036JobProperties) SetCpusPerTask(v int32) {
	o.CpusPerTask = &v
}

// GetCurrentWorkingDirectory returns the CurrentWorkingDirectory field value if set, zero value otherwise.
func (o *V0036JobProperties) GetCurrentWorkingDirectory() string {
	if o == nil || o.CurrentWorkingDirectory == nil {
		var ret string
		return ret
	}
	return *o.CurrentWorkingDirectory
}

// GetCurrentWorkingDirectoryOk returns a tuple with the CurrentWorkingDirectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetCurrentWorkingDirectoryOk() (*string, bool) {
	if o == nil || o.CurrentWorkingDirectory == nil {
		return nil, false
	}
	return o.CurrentWorkingDirectory, true
}

// HasCurrentWorkingDirectory returns a boolean if a field has been set.
func (o *V0036JobProperties) HasCurrentWorkingDirectory() bool {
	if o != nil && o.CurrentWorkingDirectory != nil {
		return true
	}

	return false
}

// SetCurrentWorkingDirectory gets a reference to the given string and assigns it to the CurrentWorkingDirectory field.
func (o *V0036JobProperties) SetCurrentWorkingDirectory(v string) {
	o.CurrentWorkingDirectory = &v
}

// GetDeadline returns the Deadline field value if set, zero value otherwise.
func (o *V0036JobProperties) GetDeadline() string {
	if o == nil || o.Deadline == nil {
		var ret string
		return ret
	}
	return *o.Deadline
}

// GetDeadlineOk returns a tuple with the Deadline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetDeadlineOk() (*string, bool) {
	if o == nil || o.Deadline == nil {
		return nil, false
	}
	return o.Deadline, true
}

// HasDeadline returns a boolean if a field has been set.
func (o *V0036JobProperties) HasDeadline() bool {
	if o != nil && o.Deadline != nil {
		return true
	}

	return false
}

// SetDeadline gets a reference to the given string and assigns it to the Deadline field.
func (o *V0036JobProperties) SetDeadline(v string) {
	o.Deadline = &v
}

// GetDelayBoot returns the DelayBoot field value if set, zero value otherwise.
func (o *V0036JobProperties) GetDelayBoot() int32 {
	if o == nil || o.DelayBoot == nil {
		var ret int32
		return ret
	}
	return *o.DelayBoot
}

// GetDelayBootOk returns a tuple with the DelayBoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetDelayBootOk() (*int32, bool) {
	if o == nil || o.DelayBoot == nil {
		return nil, false
	}
	return o.DelayBoot, true
}

// HasDelayBoot returns a boolean if a field has been set.
func (o *V0036JobProperties) HasDelayBoot() bool {
	if o != nil && o.DelayBoot != nil {
		return true
	}

	return false
}

// SetDelayBoot gets a reference to the given int32 and assigns it to the DelayBoot field.
func (o *V0036JobProperties) SetDelayBoot(v int32) {
	o.DelayBoot = &v
}

// GetDependency returns the Dependency field value if set, zero value otherwise.
func (o *V0036JobProperties) GetDependency() string {
	if o == nil || o.Dependency == nil {
		var ret string
		return ret
	}
	return *o.Dependency
}

// GetDependencyOk returns a tuple with the Dependency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetDependencyOk() (*string, bool) {
	if o == nil || o.Dependency == nil {
		return nil, false
	}
	return o.Dependency, true
}

// HasDependency returns a boolean if a field has been set.
func (o *V0036JobProperties) HasDependency() bool {
	if o != nil && o.Dependency != nil {
		return true
	}

	return false
}

// SetDependency gets a reference to the given string and assigns it to the Dependency field.
func (o *V0036JobProperties) SetDependency(v string) {
	o.Dependency = &v
}

// GetDistribution returns the Distribution field value if set, zero value otherwise.
func (o *V0036JobProperties) GetDistribution() string {
	if o == nil || o.Distribution == nil {
		var ret string
		return ret
	}
	return *o.Distribution
}

// GetDistributionOk returns a tuple with the Distribution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetDistributionOk() (*string, bool) {
	if o == nil || o.Distribution == nil {
		return nil, false
	}
	return o.Distribution, true
}

// HasDistribution returns a boolean if a field has been set.
func (o *V0036JobProperties) HasDistribution() bool {
	if o != nil && o.Distribution != nil {
		return true
	}

	return false
}

// SetDistribution gets a reference to the given string and assigns it to the Distribution field.
func (o *V0036JobProperties) SetDistribution(v string) {
	o.Distribution = &v
}

// GetEnvironment returns the Environment field value
func (o *V0036JobProperties) GetEnvironment() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetEnvironmentOk() (*map[string]interface{}, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *V0036JobProperties) SetEnvironment(v map[string]interface{}) {
	o.Environment = v
}

// GetExclusive returns the Exclusive field value if set, zero value otherwise.
func (o *V0036JobProperties) GetExclusive() string {
	if o == nil || o.Exclusive == nil {
		var ret string
		return ret
	}
	return *o.Exclusive
}

// GetExclusiveOk returns a tuple with the Exclusive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetExclusiveOk() (*string, bool) {
	if o == nil || o.Exclusive == nil {
		return nil, false
	}
	return o.Exclusive, true
}

// HasExclusive returns a boolean if a field has been set.
func (o *V0036JobProperties) HasExclusive() bool {
	if o != nil && o.Exclusive != nil {
		return true
	}

	return false
}

// SetExclusive gets a reference to the given string and assigns it to the Exclusive field.
func (o *V0036JobProperties) SetExclusive(v string) {
	o.Exclusive = &v
}

// GetGetUserEnvironment returns the GetUserEnvironment field value if set, zero value otherwise.
func (o *V0036JobProperties) GetGetUserEnvironment() bool {
	if o == nil || o.GetUserEnvironment == nil {
		var ret bool
		return ret
	}
	return *o.GetUserEnvironment
}

// GetGetUserEnvironmentOk returns a tuple with the GetUserEnvironment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetGetUserEnvironmentOk() (*bool, bool) {
	if o == nil || o.GetUserEnvironment == nil {
		return nil, false
	}
	return o.GetUserEnvironment, true
}

// HasGetUserEnvironment returns a boolean if a field has been set.
func (o *V0036JobProperties) HasGetUserEnvironment() bool {
	if o != nil && o.GetUserEnvironment != nil {
		return true
	}

	return false
}

// SetGetUserEnvironment gets a reference to the given bool and assigns it to the GetUserEnvironment field.
func (o *V0036JobProperties) SetGetUserEnvironment(v bool) {
	o.GetUserEnvironment = &v
}

// GetGres returns the Gres field value if set, zero value otherwise.
func (o *V0036JobProperties) GetGres() string {
	if o == nil || o.Gres == nil {
		var ret string
		return ret
	}
	return *o.Gres
}

// GetGresOk returns a tuple with the Gres field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetGresOk() (*string, bool) {
	if o == nil || o.Gres == nil {
		return nil, false
	}
	return o.Gres, true
}

// HasGres returns a boolean if a field has been set.
func (o *V0036JobProperties) HasGres() bool {
	if o != nil && o.Gres != nil {
		return true
	}

	return false
}

// SetGres gets a reference to the given string and assigns it to the Gres field.
func (o *V0036JobProperties) SetGres(v string) {
	o.Gres = &v
}

// GetGresFlags returns the GresFlags field value if set, zero value otherwise.
func (o *V0036JobProperties) GetGresFlags() string {
	if o == nil || o.GresFlags == nil {
		var ret string
		return ret
	}
	return *o.GresFlags
}

// GetGresFlagsOk returns a tuple with the GresFlags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetGresFlagsOk() (*string, bool) {
	if o == nil || o.GresFlags == nil {
		return nil, false
	}
	return o.GresFlags, true
}

// HasGresFlags returns a boolean if a field has been set.
func (o *V0036JobProperties) HasGresFlags() bool {
	if o != nil && o.GresFlags != nil {
		return true
	}

	return false
}

// SetGresFlags gets a reference to the given string and assigns it to the GresFlags field.
func (o *V0036JobProperties) SetGresFlags(v string) {
	o.GresFlags = &v
}

// GetGpuBinding returns the GpuBinding field value if set, zero value otherwise.
func (o *V0036JobProperties) GetGpuBinding() string {
	if o == nil || o.GpuBinding == nil {
		var ret string
		return ret
	}
	return *o.GpuBinding
}

// GetGpuBindingOk returns a tuple with the GpuBinding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetGpuBindingOk() (*string, bool) {
	if o == nil || o.GpuBinding == nil {
		return nil, false
	}
	return o.GpuBinding, true
}

// HasGpuBinding returns a boolean if a field has been set.
func (o *V0036JobProperties) HasGpuBinding() bool {
	if o != nil && o.GpuBinding != nil {
		return true
	}

	return false
}

// SetGpuBinding gets a reference to the given string and assigns it to the GpuBinding field.
func (o *V0036JobProperties) SetGpuBinding(v string) {
	o.GpuBinding = &v
}

// GetGpuFrequency returns the GpuFrequency field value if set, zero value otherwise.
func (o *V0036JobProperties) GetGpuFrequency() string {
	if o == nil || o.GpuFrequency == nil {
		var ret string
		return ret
	}
	return *o.GpuFrequency
}

// GetGpuFrequencyOk returns a tuple with the GpuFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetGpuFrequencyOk() (*string, bool) {
	if o == nil || o.GpuFrequency == nil {
		return nil, false
	}
	return o.GpuFrequency, true
}

// HasGpuFrequency returns a boolean if a field has been set.
func (o *V0036JobProperties) HasGpuFrequency() bool {
	if o != nil && o.GpuFrequency != nil {
		return true
	}

	return false
}

// SetGpuFrequency gets a reference to the given string and assigns it to the GpuFrequency field.
func (o *V0036JobProperties) SetGpuFrequency(v string) {
	o.GpuFrequency = &v
}

// GetGpus returns the Gpus field value if set, zero value otherwise.
func (o *V0036JobProperties) GetGpus() string {
	if o == nil || o.Gpus == nil {
		var ret string
		return ret
	}
	return *o.Gpus
}

// GetGpusOk returns a tuple with the Gpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetGpusOk() (*string, bool) {
	if o == nil || o.Gpus == nil {
		return nil, false
	}
	return o.Gpus, true
}

// HasGpus returns a boolean if a field has been set.
func (o *V0036JobProperties) HasGpus() bool {
	if o != nil && o.Gpus != nil {
		return true
	}

	return false
}

// SetGpus gets a reference to the given string and assigns it to the Gpus field.
func (o *V0036JobProperties) SetGpus(v string) {
	o.Gpus = &v
}

// GetGpusPerNode returns the GpusPerNode field value if set, zero value otherwise.
func (o *V0036JobProperties) GetGpusPerNode() string {
	if o == nil || o.GpusPerNode == nil {
		var ret string
		return ret
	}
	return *o.GpusPerNode
}

// GetGpusPerNodeOk returns a tuple with the GpusPerNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetGpusPerNodeOk() (*string, bool) {
	if o == nil || o.GpusPerNode == nil {
		return nil, false
	}
	return o.GpusPerNode, true
}

// HasGpusPerNode returns a boolean if a field has been set.
func (o *V0036JobProperties) HasGpusPerNode() bool {
	if o != nil && o.GpusPerNode != nil {
		return true
	}

	return false
}

// SetGpusPerNode gets a reference to the given string and assigns it to the GpusPerNode field.
func (o *V0036JobProperties) SetGpusPerNode(v string) {
	o.GpusPerNode = &v
}

// GetGpusPerSocket returns the GpusPerSocket field value if set, zero value otherwise.
func (o *V0036JobProperties) GetGpusPerSocket() string {
	if o == nil || o.GpusPerSocket == nil {
		var ret string
		return ret
	}
	return *o.GpusPerSocket
}

// GetGpusPerSocketOk returns a tuple with the GpusPerSocket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetGpusPerSocketOk() (*string, bool) {
	if o == nil || o.GpusPerSocket == nil {
		return nil, false
	}
	return o.GpusPerSocket, true
}

// HasGpusPerSocket returns a boolean if a field has been set.
func (o *V0036JobProperties) HasGpusPerSocket() bool {
	if o != nil && o.GpusPerSocket != nil {
		return true
	}

	return false
}

// SetGpusPerSocket gets a reference to the given string and assigns it to the GpusPerSocket field.
func (o *V0036JobProperties) SetGpusPerSocket(v string) {
	o.GpusPerSocket = &v
}

// GetGpusPerTask returns the GpusPerTask field value if set, zero value otherwise.
func (o *V0036JobProperties) GetGpusPerTask() string {
	if o == nil || o.GpusPerTask == nil {
		var ret string
		return ret
	}
	return *o.GpusPerTask
}

// GetGpusPerTaskOk returns a tuple with the GpusPerTask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetGpusPerTaskOk() (*string, bool) {
	if o == nil || o.GpusPerTask == nil {
		return nil, false
	}
	return o.GpusPerTask, true
}

// HasGpusPerTask returns a boolean if a field has been set.
func (o *V0036JobProperties) HasGpusPerTask() bool {
	if o != nil && o.GpusPerTask != nil {
		return true
	}

	return false
}

// SetGpusPerTask gets a reference to the given string and assigns it to the GpusPerTask field.
func (o *V0036JobProperties) SetGpusPerTask(v string) {
	o.GpusPerTask = &v
}

// GetHold returns the Hold field value if set, zero value otherwise.
func (o *V0036JobProperties) GetHold() bool {
	if o == nil || o.Hold == nil {
		var ret bool
		return ret
	}
	return *o.Hold
}

// GetHoldOk returns a tuple with the Hold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetHoldOk() (*bool, bool) {
	if o == nil || o.Hold == nil {
		return nil, false
	}
	return o.Hold, true
}

// HasHold returns a boolean if a field has been set.
func (o *V0036JobProperties) HasHold() bool {
	if o != nil && o.Hold != nil {
		return true
	}

	return false
}

// SetHold gets a reference to the given bool and assigns it to the Hold field.
func (o *V0036JobProperties) SetHold(v bool) {
	o.Hold = &v
}

// GetKillOnInvalidDependency returns the KillOnInvalidDependency field value if set, zero value otherwise.
func (o *V0036JobProperties) GetKillOnInvalidDependency() bool {
	if o == nil || o.KillOnInvalidDependency == nil {
		var ret bool
		return ret
	}
	return *o.KillOnInvalidDependency
}

// GetKillOnInvalidDependencyOk returns a tuple with the KillOnInvalidDependency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetKillOnInvalidDependencyOk() (*bool, bool) {
	if o == nil || o.KillOnInvalidDependency == nil {
		return nil, false
	}
	return o.KillOnInvalidDependency, true
}

// HasKillOnInvalidDependency returns a boolean if a field has been set.
func (o *V0036JobProperties) HasKillOnInvalidDependency() bool {
	if o != nil && o.KillOnInvalidDependency != nil {
		return true
	}

	return false
}

// SetKillOnInvalidDependency gets a reference to the given bool and assigns it to the KillOnInvalidDependency field.
func (o *V0036JobProperties) SetKillOnInvalidDependency(v bool) {
	o.KillOnInvalidDependency = &v
}

// GetLicenses returns the Licenses field value if set, zero value otherwise.
func (o *V0036JobProperties) GetLicenses() string {
	if o == nil || o.Licenses == nil {
		var ret string
		return ret
	}
	return *o.Licenses
}

// GetLicensesOk returns a tuple with the Licenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetLicensesOk() (*string, bool) {
	if o == nil || o.Licenses == nil {
		return nil, false
	}
	return o.Licenses, true
}

// HasLicenses returns a boolean if a field has been set.
func (o *V0036JobProperties) HasLicenses() bool {
	if o != nil && o.Licenses != nil {
		return true
	}

	return false
}

// SetLicenses gets a reference to the given string and assigns it to the Licenses field.
func (o *V0036JobProperties) SetLicenses(v string) {
	o.Licenses = &v
}

// GetMailType returns the MailType field value if set, zero value otherwise.
func (o *V0036JobProperties) GetMailType() string {
	if o == nil || o.MailType == nil {
		var ret string
		return ret
	}
	return *o.MailType
}

// GetMailTypeOk returns a tuple with the MailType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetMailTypeOk() (*string, bool) {
	if o == nil || o.MailType == nil {
		return nil, false
	}
	return o.MailType, true
}

// HasMailType returns a boolean if a field has been set.
func (o *V0036JobProperties) HasMailType() bool {
	if o != nil && o.MailType != nil {
		return true
	}

	return false
}

// SetMailType gets a reference to the given string and assigns it to the MailType field.
func (o *V0036JobProperties) SetMailType(v string) {
	o.MailType = &v
}

// GetMailUser returns the MailUser field value if set, zero value otherwise.
func (o *V0036JobProperties) GetMailUser() string {
	if o == nil || o.MailUser == nil {
		var ret string
		return ret
	}
	return *o.MailUser
}

// GetMailUserOk returns a tuple with the MailUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetMailUserOk() (*string, bool) {
	if o == nil || o.MailUser == nil {
		return nil, false
	}
	return o.MailUser, true
}

// HasMailUser returns a boolean if a field has been set.
func (o *V0036JobProperties) HasMailUser() bool {
	if o != nil && o.MailUser != nil {
		return true
	}

	return false
}

// SetMailUser gets a reference to the given string and assigns it to the MailUser field.
func (o *V0036JobProperties) SetMailUser(v string) {
	o.MailUser = &v
}

// GetMcsLabel returns the McsLabel field value if set, zero value otherwise.
func (o *V0036JobProperties) GetMcsLabel() string {
	if o == nil || o.McsLabel == nil {
		var ret string
		return ret
	}
	return *o.McsLabel
}

// GetMcsLabelOk returns a tuple with the McsLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetMcsLabelOk() (*string, bool) {
	if o == nil || o.McsLabel == nil {
		return nil, false
	}
	return o.McsLabel, true
}

// HasMcsLabel returns a boolean if a field has been set.
func (o *V0036JobProperties) HasMcsLabel() bool {
	if o != nil && o.McsLabel != nil {
		return true
	}

	return false
}

// SetMcsLabel gets a reference to the given string and assigns it to the McsLabel field.
func (o *V0036JobProperties) SetMcsLabel(v string) {
	o.McsLabel = &v
}

// GetMemoryBinding returns the MemoryBinding field value if set, zero value otherwise.
func (o *V0036JobProperties) GetMemoryBinding() string {
	if o == nil || o.MemoryBinding == nil {
		var ret string
		return ret
	}
	return *o.MemoryBinding
}

// GetMemoryBindingOk returns a tuple with the MemoryBinding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetMemoryBindingOk() (*string, bool) {
	if o == nil || o.MemoryBinding == nil {
		return nil, false
	}
	return o.MemoryBinding, true
}

// HasMemoryBinding returns a boolean if a field has been set.
func (o *V0036JobProperties) HasMemoryBinding() bool {
	if o != nil && o.MemoryBinding != nil {
		return true
	}

	return false
}

// SetMemoryBinding gets a reference to the given string and assigns it to the MemoryBinding field.
func (o *V0036JobProperties) SetMemoryBinding(v string) {
	o.MemoryBinding = &v
}

// GetMemoryPerCpu returns the MemoryPerCpu field value if set, zero value otherwise.
func (o *V0036JobProperties) GetMemoryPerCpu() int32 {
	if o == nil || o.MemoryPerCpu == nil {
		var ret int32
		return ret
	}
	return *o.MemoryPerCpu
}

// GetMemoryPerCpuOk returns a tuple with the MemoryPerCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetMemoryPerCpuOk() (*int32, bool) {
	if o == nil || o.MemoryPerCpu == nil {
		return nil, false
	}
	return o.MemoryPerCpu, true
}

// HasMemoryPerCpu returns a boolean if a field has been set.
func (o *V0036JobProperties) HasMemoryPerCpu() bool {
	if o != nil && o.MemoryPerCpu != nil {
		return true
	}

	return false
}

// SetMemoryPerCpu gets a reference to the given int32 and assigns it to the MemoryPerCpu field.
func (o *V0036JobProperties) SetMemoryPerCpu(v int32) {
	o.MemoryPerCpu = &v
}

// GetMemoryPerGpu returns the MemoryPerGpu field value if set, zero value otherwise.
func (o *V0036JobProperties) GetMemoryPerGpu() int32 {
	if o == nil || o.MemoryPerGpu == nil {
		var ret int32
		return ret
	}
	return *o.MemoryPerGpu
}

// GetMemoryPerGpuOk returns a tuple with the MemoryPerGpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetMemoryPerGpuOk() (*int32, bool) {
	if o == nil || o.MemoryPerGpu == nil {
		return nil, false
	}
	return o.MemoryPerGpu, true
}

// HasMemoryPerGpu returns a boolean if a field has been set.
func (o *V0036JobProperties) HasMemoryPerGpu() bool {
	if o != nil && o.MemoryPerGpu != nil {
		return true
	}

	return false
}

// SetMemoryPerGpu gets a reference to the given int32 and assigns it to the MemoryPerGpu field.
func (o *V0036JobProperties) SetMemoryPerGpu(v int32) {
	o.MemoryPerGpu = &v
}

// GetMemoryPerNode returns the MemoryPerNode field value if set, zero value otherwise.
func (o *V0036JobProperties) GetMemoryPerNode() int32 {
	if o == nil || o.MemoryPerNode == nil {
		var ret int32
		return ret
	}
	return *o.MemoryPerNode
}

// GetMemoryPerNodeOk returns a tuple with the MemoryPerNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetMemoryPerNodeOk() (*int32, bool) {
	if o == nil || o.MemoryPerNode == nil {
		return nil, false
	}
	return o.MemoryPerNode, true
}

// HasMemoryPerNode returns a boolean if a field has been set.
func (o *V0036JobProperties) HasMemoryPerNode() bool {
	if o != nil && o.MemoryPerNode != nil {
		return true
	}

	return false
}

// SetMemoryPerNode gets a reference to the given int32 and assigns it to the MemoryPerNode field.
func (o *V0036JobProperties) SetMemoryPerNode(v int32) {
	o.MemoryPerNode = &v
}

// GetMinimumCpusPerNode returns the MinimumCpusPerNode field value if set, zero value otherwise.
func (o *V0036JobProperties) GetMinimumCpusPerNode() int32 {
	if o == nil || o.MinimumCpusPerNode == nil {
		var ret int32
		return ret
	}
	return *o.MinimumCpusPerNode
}

// GetMinimumCpusPerNodeOk returns a tuple with the MinimumCpusPerNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetMinimumCpusPerNodeOk() (*int32, bool) {
	if o == nil || o.MinimumCpusPerNode == nil {
		return nil, false
	}
	return o.MinimumCpusPerNode, true
}

// HasMinimumCpusPerNode returns a boolean if a field has been set.
func (o *V0036JobProperties) HasMinimumCpusPerNode() bool {
	if o != nil && o.MinimumCpusPerNode != nil {
		return true
	}

	return false
}

// SetMinimumCpusPerNode gets a reference to the given int32 and assigns it to the MinimumCpusPerNode field.
func (o *V0036JobProperties) SetMinimumCpusPerNode(v int32) {
	o.MinimumCpusPerNode = &v
}

// GetMinimumNodes returns the MinimumNodes field value if set, zero value otherwise.
func (o *V0036JobProperties) GetMinimumNodes() bool {
	if o == nil || o.MinimumNodes == nil {
		var ret bool
		return ret
	}
	return *o.MinimumNodes
}

// GetMinimumNodesOk returns a tuple with the MinimumNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetMinimumNodesOk() (*bool, bool) {
	if o == nil || o.MinimumNodes == nil {
		return nil, false
	}
	return o.MinimumNodes, true
}

// HasMinimumNodes returns a boolean if a field has been set.
func (o *V0036JobProperties) HasMinimumNodes() bool {
	if o != nil && o.MinimumNodes != nil {
		return true
	}

	return false
}

// SetMinimumNodes gets a reference to the given bool and assigns it to the MinimumNodes field.
func (o *V0036JobProperties) SetMinimumNodes(v bool) {
	o.MinimumNodes = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V0036JobProperties) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V0036JobProperties) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V0036JobProperties) SetName(v string) {
	o.Name = &v
}

// GetNice returns the Nice field value if set, zero value otherwise.
func (o *V0036JobProperties) GetNice() string {
	if o == nil || o.Nice == nil {
		var ret string
		return ret
	}
	return *o.Nice
}

// GetNiceOk returns a tuple with the Nice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetNiceOk() (*string, bool) {
	if o == nil || o.Nice == nil {
		return nil, false
	}
	return o.Nice, true
}

// HasNice returns a boolean if a field has been set.
func (o *V0036JobProperties) HasNice() bool {
	if o != nil && o.Nice != nil {
		return true
	}

	return false
}

// SetNice gets a reference to the given string and assigns it to the Nice field.
func (o *V0036JobProperties) SetNice(v string) {
	o.Nice = &v
}

// GetNoKill returns the NoKill field value if set, zero value otherwise.
func (o *V0036JobProperties) GetNoKill() bool {
	if o == nil || o.NoKill == nil {
		var ret bool
		return ret
	}
	return *o.NoKill
}

// GetNoKillOk returns a tuple with the NoKill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetNoKillOk() (*bool, bool) {
	if o == nil || o.NoKill == nil {
		return nil, false
	}
	return o.NoKill, true
}

// HasNoKill returns a boolean if a field has been set.
func (o *V0036JobProperties) HasNoKill() bool {
	if o != nil && o.NoKill != nil {
		return true
	}

	return false
}

// SetNoKill gets a reference to the given bool and assigns it to the NoKill field.
func (o *V0036JobProperties) SetNoKill(v bool) {
	o.NoKill = &v
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *V0036JobProperties) GetNodes() []int32 {
	if o == nil || o.Nodes == nil {
		var ret []int32
		return ret
	}
	return *o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetNodesOk() (*[]int32, bool) {
	if o == nil || o.Nodes == nil {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *V0036JobProperties) HasNodes() bool {
	if o != nil && o.Nodes != nil {
		return true
	}

	return false
}

// SetNodes gets a reference to the given []int32 and assigns it to the Nodes field.
func (o *V0036JobProperties) SetNodes(v []int32) {
	o.Nodes = &v
}

// GetOpenMode returns the OpenMode field value if set, zero value otherwise.
func (o *V0036JobProperties) GetOpenMode() string {
	if o == nil || o.OpenMode == nil {
		var ret string
		return ret
	}
	return *o.OpenMode
}

// GetOpenModeOk returns a tuple with the OpenMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetOpenModeOk() (*string, bool) {
	if o == nil || o.OpenMode == nil {
		return nil, false
	}
	return o.OpenMode, true
}

// HasOpenMode returns a boolean if a field has been set.
func (o *V0036JobProperties) HasOpenMode() bool {
	if o != nil && o.OpenMode != nil {
		return true
	}

	return false
}

// SetOpenMode gets a reference to the given string and assigns it to the OpenMode field.
func (o *V0036JobProperties) SetOpenMode(v string) {
	o.OpenMode = &v
}

// GetPartition returns the Partition field value if set, zero value otherwise.
func (o *V0036JobProperties) GetPartition() string {
	if o == nil || o.Partition == nil {
		var ret string
		return ret
	}
	return *o.Partition
}

// GetPartitionOk returns a tuple with the Partition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetPartitionOk() (*string, bool) {
	if o == nil || o.Partition == nil {
		return nil, false
	}
	return o.Partition, true
}

// HasPartition returns a boolean if a field has been set.
func (o *V0036JobProperties) HasPartition() bool {
	if o != nil && o.Partition != nil {
		return true
	}

	return false
}

// SetPartition gets a reference to the given string and assigns it to the Partition field.
func (o *V0036JobProperties) SetPartition(v string) {
	o.Partition = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *V0036JobProperties) GetPriority() string {
	if o == nil || o.Priority == nil {
		var ret string
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetPriorityOk() (*string, bool) {
	if o == nil || o.Priority == nil {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *V0036JobProperties) HasPriority() bool {
	if o != nil && o.Priority != nil {
		return true
	}

	return false
}

// SetPriority gets a reference to the given string and assigns it to the Priority field.
func (o *V0036JobProperties) SetPriority(v string) {
	o.Priority = &v
}

// GetQos returns the Qos field value if set, zero value otherwise.
func (o *V0036JobProperties) GetQos() string {
	if o == nil || o.Qos == nil {
		var ret string
		return ret
	}
	return *o.Qos
}

// GetQosOk returns a tuple with the Qos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetQosOk() (*string, bool) {
	if o == nil || o.Qos == nil {
		return nil, false
	}
	return o.Qos, true
}

// HasQos returns a boolean if a field has been set.
func (o *V0036JobProperties) HasQos() bool {
	if o != nil && o.Qos != nil {
		return true
	}

	return false
}

// SetQos gets a reference to the given string and assigns it to the Qos field.
func (o *V0036JobProperties) SetQos(v string) {
	o.Qos = &v
}

// GetRequeue returns the Requeue field value if set, zero value otherwise.
func (o *V0036JobProperties) GetRequeue() bool {
	if o == nil || o.Requeue == nil {
		var ret bool
		return ret
	}
	return *o.Requeue
}

// GetRequeueOk returns a tuple with the Requeue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetRequeueOk() (*bool, bool) {
	if o == nil || o.Requeue == nil {
		return nil, false
	}
	return o.Requeue, true
}

// HasRequeue returns a boolean if a field has been set.
func (o *V0036JobProperties) HasRequeue() bool {
	if o != nil && o.Requeue != nil {
		return true
	}

	return false
}

// SetRequeue gets a reference to the given bool and assigns it to the Requeue field.
func (o *V0036JobProperties) SetRequeue(v bool) {
	o.Requeue = &v
}

// GetReservation returns the Reservation field value if set, zero value otherwise.
func (o *V0036JobProperties) GetReservation() string {
	if o == nil || o.Reservation == nil {
		var ret string
		return ret
	}
	return *o.Reservation
}

// GetReservationOk returns a tuple with the Reservation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetReservationOk() (*string, bool) {
	if o == nil || o.Reservation == nil {
		return nil, false
	}
	return o.Reservation, true
}

// HasReservation returns a boolean if a field has been set.
func (o *V0036JobProperties) HasReservation() bool {
	if o != nil && o.Reservation != nil {
		return true
	}

	return false
}

// SetReservation gets a reference to the given string and assigns it to the Reservation field.
func (o *V0036JobProperties) SetReservation(v string) {
	o.Reservation = &v
}

// GetSignal returns the Signal field value if set, zero value otherwise.
func (o *V0036JobProperties) GetSignal() string {
	if o == nil || o.Signal == nil {
		var ret string
		return ret
	}
	return *o.Signal
}

// GetSignalOk returns a tuple with the Signal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetSignalOk() (*string, bool) {
	if o == nil || o.Signal == nil {
		return nil, false
	}
	return o.Signal, true
}

// HasSignal returns a boolean if a field has been set.
func (o *V0036JobProperties) HasSignal() bool {
	if o != nil && o.Signal != nil {
		return true
	}

	return false
}

// SetSignal gets a reference to the given string and assigns it to the Signal field.
func (o *V0036JobProperties) SetSignal(v string) {
	o.Signal = &v
}

// GetSocketsPerNode returns the SocketsPerNode field value if set, zero value otherwise.
func (o *V0036JobProperties) GetSocketsPerNode() int32 {
	if o == nil || o.SocketsPerNode == nil {
		var ret int32
		return ret
	}
	return *o.SocketsPerNode
}

// GetSocketsPerNodeOk returns a tuple with the SocketsPerNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetSocketsPerNodeOk() (*int32, bool) {
	if o == nil || o.SocketsPerNode == nil {
		return nil, false
	}
	return o.SocketsPerNode, true
}

// HasSocketsPerNode returns a boolean if a field has been set.
func (o *V0036JobProperties) HasSocketsPerNode() bool {
	if o != nil && o.SocketsPerNode != nil {
		return true
	}

	return false
}

// SetSocketsPerNode gets a reference to the given int32 and assigns it to the SocketsPerNode field.
func (o *V0036JobProperties) SetSocketsPerNode(v int32) {
	o.SocketsPerNode = &v
}

// GetSpreadJob returns the SpreadJob field value if set, zero value otherwise.
func (o *V0036JobProperties) GetSpreadJob() bool {
	if o == nil || o.SpreadJob == nil {
		var ret bool
		return ret
	}
	return *o.SpreadJob
}

// GetSpreadJobOk returns a tuple with the SpreadJob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetSpreadJobOk() (*bool, bool) {
	if o == nil || o.SpreadJob == nil {
		return nil, false
	}
	return o.SpreadJob, true
}

// HasSpreadJob returns a boolean if a field has been set.
func (o *V0036JobProperties) HasSpreadJob() bool {
	if o != nil && o.SpreadJob != nil {
		return true
	}

	return false
}

// SetSpreadJob gets a reference to the given bool and assigns it to the SpreadJob field.
func (o *V0036JobProperties) SetSpreadJob(v bool) {
	o.SpreadJob = &v
}

// GetStandardError returns the StandardError field value if set, zero value otherwise.
func (o *V0036JobProperties) GetStandardError() string {
	if o == nil || o.StandardError == nil {
		var ret string
		return ret
	}
	return *o.StandardError
}

// GetStandardErrorOk returns a tuple with the StandardError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetStandardErrorOk() (*string, bool) {
	if o == nil || o.StandardError == nil {
		return nil, false
	}
	return o.StandardError, true
}

// HasStandardError returns a boolean if a field has been set.
func (o *V0036JobProperties) HasStandardError() bool {
	if o != nil && o.StandardError != nil {
		return true
	}

	return false
}

// SetStandardError gets a reference to the given string and assigns it to the StandardError field.
func (o *V0036JobProperties) SetStandardError(v string) {
	o.StandardError = &v
}

// GetStandardIn returns the StandardIn field value if set, zero value otherwise.
func (o *V0036JobProperties) GetStandardIn() string {
	if o == nil || o.StandardIn == nil {
		var ret string
		return ret
	}
	return *o.StandardIn
}

// GetStandardInOk returns a tuple with the StandardIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetStandardInOk() (*string, bool) {
	if o == nil || o.StandardIn == nil {
		return nil, false
	}
	return o.StandardIn, true
}

// HasStandardIn returns a boolean if a field has been set.
func (o *V0036JobProperties) HasStandardIn() bool {
	if o != nil && o.StandardIn != nil {
		return true
	}

	return false
}

// SetStandardIn gets a reference to the given string and assigns it to the StandardIn field.
func (o *V0036JobProperties) SetStandardIn(v string) {
	o.StandardIn = &v
}

// GetStandardOut returns the StandardOut field value if set, zero value otherwise.
func (o *V0036JobProperties) GetStandardOut() string {
	if o == nil || o.StandardOut == nil {
		var ret string
		return ret
	}
	return *o.StandardOut
}

// GetStandardOutOk returns a tuple with the StandardOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetStandardOutOk() (*string, bool) {
	if o == nil || o.StandardOut == nil {
		return nil, false
	}
	return o.StandardOut, true
}

// HasStandardOut returns a boolean if a field has been set.
func (o *V0036JobProperties) HasStandardOut() bool {
	if o != nil && o.StandardOut != nil {
		return true
	}

	return false
}

// SetStandardOut gets a reference to the given string and assigns it to the StandardOut field.
func (o *V0036JobProperties) SetStandardOut(v string) {
	o.StandardOut = &v
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *V0036JobProperties) GetTasks() int32 {
	if o == nil || o.Tasks == nil {
		var ret int32
		return ret
	}
	return *o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetTasksOk() (*int32, bool) {
	if o == nil || o.Tasks == nil {
		return nil, false
	}
	return o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *V0036JobProperties) HasTasks() bool {
	if o != nil && o.Tasks != nil {
		return true
	}

	return false
}

// SetTasks gets a reference to the given int32 and assigns it to the Tasks field.
func (o *V0036JobProperties) SetTasks(v int32) {
	o.Tasks = &v
}

// GetTasksPerCore returns the TasksPerCore field value if set, zero value otherwise.
func (o *V0036JobProperties) GetTasksPerCore() int32 {
	if o == nil || o.TasksPerCore == nil {
		var ret int32
		return ret
	}
	return *o.TasksPerCore
}

// GetTasksPerCoreOk returns a tuple with the TasksPerCore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetTasksPerCoreOk() (*int32, bool) {
	if o == nil || o.TasksPerCore == nil {
		return nil, false
	}
	return o.TasksPerCore, true
}

// HasTasksPerCore returns a boolean if a field has been set.
func (o *V0036JobProperties) HasTasksPerCore() bool {
	if o != nil && o.TasksPerCore != nil {
		return true
	}

	return false
}

// SetTasksPerCore gets a reference to the given int32 and assigns it to the TasksPerCore field.
func (o *V0036JobProperties) SetTasksPerCore(v int32) {
	o.TasksPerCore = &v
}

// GetTasksPerNode returns the TasksPerNode field value if set, zero value otherwise.
func (o *V0036JobProperties) GetTasksPerNode() int32 {
	if o == nil || o.TasksPerNode == nil {
		var ret int32
		return ret
	}
	return *o.TasksPerNode
}

// GetTasksPerNodeOk returns a tuple with the TasksPerNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetTasksPerNodeOk() (*int32, bool) {
	if o == nil || o.TasksPerNode == nil {
		return nil, false
	}
	return o.TasksPerNode, true
}

// HasTasksPerNode returns a boolean if a field has been set.
func (o *V0036JobProperties) HasTasksPerNode() bool {
	if o != nil && o.TasksPerNode != nil {
		return true
	}

	return false
}

// SetTasksPerNode gets a reference to the given int32 and assigns it to the TasksPerNode field.
func (o *V0036JobProperties) SetTasksPerNode(v int32) {
	o.TasksPerNode = &v
}

// GetTasksPerSocket returns the TasksPerSocket field value if set, zero value otherwise.
func (o *V0036JobProperties) GetTasksPerSocket() int32 {
	if o == nil || o.TasksPerSocket == nil {
		var ret int32
		return ret
	}
	return *o.TasksPerSocket
}

// GetTasksPerSocketOk returns a tuple with the TasksPerSocket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetTasksPerSocketOk() (*int32, bool) {
	if o == nil || o.TasksPerSocket == nil {
		return nil, false
	}
	return o.TasksPerSocket, true
}

// HasTasksPerSocket returns a boolean if a field has been set.
func (o *V0036JobProperties) HasTasksPerSocket() bool {
	if o != nil && o.TasksPerSocket != nil {
		return true
	}

	return false
}

// SetTasksPerSocket gets a reference to the given int32 and assigns it to the TasksPerSocket field.
func (o *V0036JobProperties) SetTasksPerSocket(v int32) {
	o.TasksPerSocket = &v
}

// GetThreadSpecification returns the ThreadSpecification field value if set, zero value otherwise.
func (o *V0036JobProperties) GetThreadSpecification() int32 {
	if o == nil || o.ThreadSpecification == nil {
		var ret int32
		return ret
	}
	return *o.ThreadSpecification
}

// GetThreadSpecificationOk returns a tuple with the ThreadSpecification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetThreadSpecificationOk() (*int32, bool) {
	if o == nil || o.ThreadSpecification == nil {
		return nil, false
	}
	return o.ThreadSpecification, true
}

// HasThreadSpecification returns a boolean if a field has been set.
func (o *V0036JobProperties) HasThreadSpecification() bool {
	if o != nil && o.ThreadSpecification != nil {
		return true
	}

	return false
}

// SetThreadSpecification gets a reference to the given int32 and assigns it to the ThreadSpecification field.
func (o *V0036JobProperties) SetThreadSpecification(v int32) {
	o.ThreadSpecification = &v
}

// GetThreadsPerCore returns the ThreadsPerCore field value if set, zero value otherwise.
func (o *V0036JobProperties) GetThreadsPerCore() int32 {
	if o == nil || o.ThreadsPerCore == nil {
		var ret int32
		return ret
	}
	return *o.ThreadsPerCore
}

// GetThreadsPerCoreOk returns a tuple with the ThreadsPerCore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetThreadsPerCoreOk() (*int32, bool) {
	if o == nil || o.ThreadsPerCore == nil {
		return nil, false
	}
	return o.ThreadsPerCore, true
}

// HasThreadsPerCore returns a boolean if a field has been set.
func (o *V0036JobProperties) HasThreadsPerCore() bool {
	if o != nil && o.ThreadsPerCore != nil {
		return true
	}

	return false
}

// SetThreadsPerCore gets a reference to the given int32 and assigns it to the ThreadsPerCore field.
func (o *V0036JobProperties) SetThreadsPerCore(v int32) {
	o.ThreadsPerCore = &v
}

// GetTimeLimit returns the TimeLimit field value if set, zero value otherwise.
func (o *V0036JobProperties) GetTimeLimit() int32 {
	if o == nil || o.TimeLimit == nil {
		var ret int32
		return ret
	}
	return *o.TimeLimit
}

// GetTimeLimitOk returns a tuple with the TimeLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetTimeLimitOk() (*int32, bool) {
	if o == nil || o.TimeLimit == nil {
		return nil, false
	}
	return o.TimeLimit, true
}

// HasTimeLimit returns a boolean if a field has been set.
func (o *V0036JobProperties) HasTimeLimit() bool {
	if o != nil && o.TimeLimit != nil {
		return true
	}

	return false
}

// SetTimeLimit gets a reference to the given int32 and assigns it to the TimeLimit field.
func (o *V0036JobProperties) SetTimeLimit(v int32) {
	o.TimeLimit = &v
}

// GetTimeMinimum returns the TimeMinimum field value if set, zero value otherwise.
func (o *V0036JobProperties) GetTimeMinimum() int64 {
	if o == nil || o.TimeMinimum == nil {
		var ret int64
		return ret
	}
	return *o.TimeMinimum
}

// GetTimeMinimumOk returns a tuple with the TimeMinimum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetTimeMinimumOk() (*int64, bool) {
	if o == nil || o.TimeMinimum == nil {
		return nil, false
	}
	return o.TimeMinimum, true
}

// HasTimeMinimum returns a boolean if a field has been set.
func (o *V0036JobProperties) HasTimeMinimum() bool {
	if o != nil && o.TimeMinimum != nil {
		return true
	}

	return false
}

// SetTimeMinimum gets a reference to the given int64 and assigns it to the TimeMinimum field.
func (o *V0036JobProperties) SetTimeMinimum(v int64) {
	o.TimeMinimum = &v
}

// GetWaitAllNodes returns the WaitAllNodes field value if set, zero value otherwise.
func (o *V0036JobProperties) GetWaitAllNodes() bool {
	if o == nil || o.WaitAllNodes == nil {
		var ret bool
		return ret
	}
	return *o.WaitAllNodes
}

// GetWaitAllNodesOk returns a tuple with the WaitAllNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetWaitAllNodesOk() (*bool, bool) {
	if o == nil || o.WaitAllNodes == nil {
		return nil, false
	}
	return o.WaitAllNodes, true
}

// HasWaitAllNodes returns a boolean if a field has been set.
func (o *V0036JobProperties) HasWaitAllNodes() bool {
	if o != nil && o.WaitAllNodes != nil {
		return true
	}

	return false
}

// SetWaitAllNodes gets a reference to the given bool and assigns it to the WaitAllNodes field.
func (o *V0036JobProperties) SetWaitAllNodes(v bool) {
	o.WaitAllNodes = &v
}

// GetWckey returns the Wckey field value if set, zero value otherwise.
func (o *V0036JobProperties) GetWckey() string {
	if o == nil || o.Wckey == nil {
		var ret string
		return ret
	}
	return *o.Wckey
}

// GetWckeyOk returns a tuple with the Wckey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobProperties) GetWckeyOk() (*string, bool) {
	if o == nil || o.Wckey == nil {
		return nil, false
	}
	return o.Wckey, true
}

// HasWckey returns a boolean if a field has been set.
func (o *V0036JobProperties) HasWckey() bool {
	if o != nil && o.Wckey != nil {
		return true
	}

	return false
}

// SetWckey gets a reference to the given string and assigns it to the Wckey field.
func (o *V0036JobProperties) SetWckey(v string) {
	o.Wckey = &v
}

func (o V0036JobProperties) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Account != nil {
		toSerialize["account"] = o.Account
	}
	if o.AccountGatherFreqency != nil {
		toSerialize["account_gather_freqency"] = o.AccountGatherFreqency
	}
	if o.Argv != nil {
		toSerialize["argv"] = o.Argv
	}
	if o.Array != nil {
		toSerialize["array"] = o.Array
	}
	if o.BatchFeatures != nil {
		toSerialize["batch_features"] = o.BatchFeatures
	}
	if o.BeginTime != nil {
		toSerialize["begin_time"] = o.BeginTime
	}
	if o.BurstBuffer != nil {
		toSerialize["burst_buffer"] = o.BurstBuffer
	}
	if o.ClusterConstraints != nil {
		toSerialize["cluster_constraints"] = o.ClusterConstraints
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.Constraints != nil {
		toSerialize["constraints"] = o.Constraints
	}
	if o.CoreSpecification != nil {
		toSerialize["core_specification"] = o.CoreSpecification
	}
	if o.CoresPerSocket != nil {
		toSerialize["cores_per_socket"] = o.CoresPerSocket
	}
	if o.CpuBinding != nil {
		toSerialize["cpu_binding"] = o.CpuBinding
	}
	if o.CpuBindingHint != nil {
		toSerialize["cpu_binding_hint"] = o.CpuBindingHint
	}
	if o.CpuFrequency != nil {
		toSerialize["cpu_frequency"] = o.CpuFrequency
	}
	if o.CpusPerGpu != nil {
		toSerialize["cpus_per_gpu"] = o.CpusPerGpu
	}
	if o.CpusPerTask != nil {
		toSerialize["cpus_per_task"] = o.CpusPerTask
	}
	if o.CurrentWorkingDirectory != nil {
		toSerialize["current_working_directory"] = o.CurrentWorkingDirectory
	}
	if o.Deadline != nil {
		toSerialize["deadline"] = o.Deadline
	}
	if o.DelayBoot != nil {
		toSerialize["delay_boot"] = o.DelayBoot
	}
	if o.Dependency != nil {
		toSerialize["dependency"] = o.Dependency
	}
	if o.Distribution != nil {
		toSerialize["distribution"] = o.Distribution
	}
	if true {
		toSerialize["environment"] = o.Environment
	}
	if o.Exclusive != nil {
		toSerialize["exclusive"] = o.Exclusive
	}
	if o.GetUserEnvironment != nil {
		toSerialize["get_user_environment"] = o.GetUserEnvironment
	}
	if o.Gres != nil {
		toSerialize["gres"] = o.Gres
	}
	if o.GresFlags != nil {
		toSerialize["gres_flags"] = o.GresFlags
	}
	if o.GpuBinding != nil {
		toSerialize["gpu_binding"] = o.GpuBinding
	}
	if o.GpuFrequency != nil {
		toSerialize["gpu_frequency"] = o.GpuFrequency
	}
	if o.Gpus != nil {
		toSerialize["gpus"] = o.Gpus
	}
	if o.GpusPerNode != nil {
		toSerialize["gpus_per_node"] = o.GpusPerNode
	}
	if o.GpusPerSocket != nil {
		toSerialize["gpus_per_socket"] = o.GpusPerSocket
	}
	if o.GpusPerTask != nil {
		toSerialize["gpus_per_task"] = o.GpusPerTask
	}
	if o.Hold != nil {
		toSerialize["hold"] = o.Hold
	}
	if o.KillOnInvalidDependency != nil {
		toSerialize["kill_on_invalid_dependency"] = o.KillOnInvalidDependency
	}
	if o.Licenses != nil {
		toSerialize["licenses"] = o.Licenses
	}
	if o.MailType != nil {
		toSerialize["mail_type"] = o.MailType
	}
	if o.MailUser != nil {
		toSerialize["mail_user"] = o.MailUser
	}
	if o.McsLabel != nil {
		toSerialize["mcs_label"] = o.McsLabel
	}
	if o.MemoryBinding != nil {
		toSerialize["memory_binding"] = o.MemoryBinding
	}
	if o.MemoryPerCpu != nil {
		toSerialize["memory_per_cpu"] = o.MemoryPerCpu
	}
	if o.MemoryPerGpu != nil {
		toSerialize["memory_per_gpu"] = o.MemoryPerGpu
	}
	if o.MemoryPerNode != nil {
		toSerialize["memory_per_node"] = o.MemoryPerNode
	}
	if o.MinimumCpusPerNode != nil {
		toSerialize["minimum_cpus_per_node"] = o.MinimumCpusPerNode
	}
	if o.MinimumNodes != nil {
		toSerialize["minimum_nodes"] = o.MinimumNodes
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Nice != nil {
		toSerialize["nice"] = o.Nice
	}
	if o.NoKill != nil {
		toSerialize["no_kill"] = o.NoKill
	}
	if o.Nodes != nil {
		toSerialize["nodes"] = o.Nodes
	}
	if o.OpenMode != nil {
		toSerialize["open_mode"] = o.OpenMode
	}
	if o.Partition != nil {
		toSerialize["partition"] = o.Partition
	}
	if o.Priority != nil {
		toSerialize["priority"] = o.Priority
	}
	if o.Qos != nil {
		toSerialize["qos"] = o.Qos
	}
	if o.Requeue != nil {
		toSerialize["requeue"] = o.Requeue
	}
	if o.Reservation != nil {
		toSerialize["reservation"] = o.Reservation
	}
	if o.Signal != nil {
		toSerialize["signal"] = o.Signal
	}
	if o.SocketsPerNode != nil {
		toSerialize["sockets_per_node"] = o.SocketsPerNode
	}
	if o.SpreadJob != nil {
		toSerialize["spread_job"] = o.SpreadJob
	}
	if o.StandardError != nil {
		toSerialize["standard_error"] = o.StandardError
	}
	if o.StandardIn != nil {
		toSerialize["standard_in"] = o.StandardIn
	}
	if o.StandardOut != nil {
		toSerialize["standard_out"] = o.StandardOut
	}
	if o.Tasks != nil {
		toSerialize["tasks"] = o.Tasks
	}
	if o.TasksPerCore != nil {
		toSerialize["tasks_per_core"] = o.TasksPerCore
	}
	if o.TasksPerNode != nil {
		toSerialize["tasks_per_node"] = o.TasksPerNode
	}
	if o.TasksPerSocket != nil {
		toSerialize["tasks_per_socket"] = o.TasksPerSocket
	}
	if o.ThreadSpecification != nil {
		toSerialize["thread_specification"] = o.ThreadSpecification
	}
	if o.ThreadsPerCore != nil {
		toSerialize["threads_per_core"] = o.ThreadsPerCore
	}
	if o.TimeLimit != nil {
		toSerialize["time_limit"] = o.TimeLimit
	}
	if o.TimeMinimum != nil {
		toSerialize["time_minimum"] = o.TimeMinimum
	}
	if o.WaitAllNodes != nil {
		toSerialize["wait_all_nodes"] = o.WaitAllNodes
	}
	if o.Wckey != nil {
		toSerialize["wckey"] = o.Wckey
	}
	return json.Marshal(toSerialize)
}

type NullableV0036JobProperties struct {
	value *V0036JobProperties
	isSet bool
}

func (v NullableV0036JobProperties) Get() *V0036JobProperties {
	return v.value
}

func (v *NullableV0036JobProperties) Set(val *V0036JobProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableV0036JobProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableV0036JobProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0036JobProperties(val *V0036JobProperties) *NullableV0036JobProperties {
	return &NullableV0036JobProperties{value: val, isSet: true}
}

func (v NullableV0036JobProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0036JobProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


