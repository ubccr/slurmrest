/*
 * Slurm Rest API
 *
 * API to access and control Slurm.
 *
 * API version: 0.0.36
 * Contact: sales@schedmd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrest

import (
	"encoding/json"
)

// V0036JobSubmissionResponse struct for V0036JobSubmissionResponse
type V0036JobSubmissionResponse struct {
	// slurm errors
	Errors *[]V0036Error `json:"errors,omitempty"`
	// new job ID
	JobId *int32 `json:"job_id,omitempty"`
	// new job step ID
	StepId *string `json:"step_id,omitempty"`
	// Message to user from job_submit plugin
	JobSubmitUserMsg *string `json:"job_submit_user_msg,omitempty"`
}

// NewV0036JobSubmissionResponse instantiates a new V0036JobSubmissionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0036JobSubmissionResponse() *V0036JobSubmissionResponse {
	this := V0036JobSubmissionResponse{}
	return &this
}

// NewV0036JobSubmissionResponseWithDefaults instantiates a new V0036JobSubmissionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0036JobSubmissionResponseWithDefaults() *V0036JobSubmissionResponse {
	this := V0036JobSubmissionResponse{}
	return &this
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *V0036JobSubmissionResponse) GetErrors() []V0036Error {
	if o == nil || o.Errors == nil {
		var ret []V0036Error
		return ret
	}
	return *o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobSubmissionResponse) GetErrorsOk() (*[]V0036Error, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *V0036JobSubmissionResponse) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []V0036Error and assigns it to the Errors field.
func (o *V0036JobSubmissionResponse) SetErrors(v []V0036Error) {
	o.Errors = &v
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *V0036JobSubmissionResponse) GetJobId() int32 {
	if o == nil || o.JobId == nil {
		var ret int32
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobSubmissionResponse) GetJobIdOk() (*int32, bool) {
	if o == nil || o.JobId == nil {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *V0036JobSubmissionResponse) HasJobId() bool {
	if o != nil && o.JobId != nil {
		return true
	}

	return false
}

// SetJobId gets a reference to the given int32 and assigns it to the JobId field.
func (o *V0036JobSubmissionResponse) SetJobId(v int32) {
	o.JobId = &v
}

// GetStepId returns the StepId field value if set, zero value otherwise.
func (o *V0036JobSubmissionResponse) GetStepId() string {
	if o == nil || o.StepId == nil {
		var ret string
		return ret
	}
	return *o.StepId
}

// GetStepIdOk returns a tuple with the StepId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobSubmissionResponse) GetStepIdOk() (*string, bool) {
	if o == nil || o.StepId == nil {
		return nil, false
	}
	return o.StepId, true
}

// HasStepId returns a boolean if a field has been set.
func (o *V0036JobSubmissionResponse) HasStepId() bool {
	if o != nil && o.StepId != nil {
		return true
	}

	return false
}

// SetStepId gets a reference to the given string and assigns it to the StepId field.
func (o *V0036JobSubmissionResponse) SetStepId(v string) {
	o.StepId = &v
}

// GetJobSubmitUserMsg returns the JobSubmitUserMsg field value if set, zero value otherwise.
func (o *V0036JobSubmissionResponse) GetJobSubmitUserMsg() string {
	if o == nil || o.JobSubmitUserMsg == nil {
		var ret string
		return ret
	}
	return *o.JobSubmitUserMsg
}

// GetJobSubmitUserMsgOk returns a tuple with the JobSubmitUserMsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobSubmissionResponse) GetJobSubmitUserMsgOk() (*string, bool) {
	if o == nil || o.JobSubmitUserMsg == nil {
		return nil, false
	}
	return o.JobSubmitUserMsg, true
}

// HasJobSubmitUserMsg returns a boolean if a field has been set.
func (o *V0036JobSubmissionResponse) HasJobSubmitUserMsg() bool {
	if o != nil && o.JobSubmitUserMsg != nil {
		return true
	}

	return false
}

// SetJobSubmitUserMsg gets a reference to the given string and assigns it to the JobSubmitUserMsg field.
func (o *V0036JobSubmissionResponse) SetJobSubmitUserMsg(v string) {
	o.JobSubmitUserMsg = &v
}

func (o V0036JobSubmissionResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	if o.JobId != nil {
		toSerialize["job_id"] = o.JobId
	}
	if o.StepId != nil {
		toSerialize["step_id"] = o.StepId
	}
	if o.JobSubmitUserMsg != nil {
		toSerialize["job_submit_user_msg"] = o.JobSubmitUserMsg
	}
	return json.Marshal(toSerialize)
}

type NullableV0036JobSubmissionResponse struct {
	value *V0036JobSubmissionResponse
	isSet bool
}

func (v NullableV0036JobSubmissionResponse) Get() *V0036JobSubmissionResponse {
	return v.value
}

func (v *NullableV0036JobSubmissionResponse) Set(val *V0036JobSubmissionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV0036JobSubmissionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV0036JobSubmissionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0036JobSubmissionResponse(val *V0036JobSubmissionResponse) *NullableV0036JobSubmissionResponse {
	return &NullableV0036JobSubmissionResponse{value: val, isSet: true}
}

func (v NullableV0036JobSubmissionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0036JobSubmissionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


