/*
 * Slurm Rest API
 *
 * API to access and control Slurm.
 *
 * API version: 0.0.36
 * Contact: sales@schedmd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrest

import (
	"encoding/json"
)

// V0036JobsResponse struct for V0036JobsResponse
type V0036JobsResponse struct {
	// slurm errors
	Errors *[]V0036Error `json:"errors,omitempty"`
	// job descriptions
	Jobs *[]V0036JobResponseProperties `json:"jobs,omitempty"`
}

// NewV0036JobsResponse instantiates a new V0036JobsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0036JobsResponse() *V0036JobsResponse {
	this := V0036JobsResponse{}
	return &this
}

// NewV0036JobsResponseWithDefaults instantiates a new V0036JobsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0036JobsResponseWithDefaults() *V0036JobsResponse {
	this := V0036JobsResponse{}
	return &this
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *V0036JobsResponse) GetErrors() []V0036Error {
	if o == nil || o.Errors == nil {
		var ret []V0036Error
		return ret
	}
	return *o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobsResponse) GetErrorsOk() (*[]V0036Error, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *V0036JobsResponse) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []V0036Error and assigns it to the Errors field.
func (o *V0036JobsResponse) SetErrors(v []V0036Error) {
	o.Errors = &v
}

// GetJobs returns the Jobs field value if set, zero value otherwise.
func (o *V0036JobsResponse) GetJobs() []V0036JobResponseProperties {
	if o == nil || o.Jobs == nil {
		var ret []V0036JobResponseProperties
		return ret
	}
	return *o.Jobs
}

// GetJobsOk returns a tuple with the Jobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0036JobsResponse) GetJobsOk() (*[]V0036JobResponseProperties, bool) {
	if o == nil || o.Jobs == nil {
		return nil, false
	}
	return o.Jobs, true
}

// HasJobs returns a boolean if a field has been set.
func (o *V0036JobsResponse) HasJobs() bool {
	if o != nil && o.Jobs != nil {
		return true
	}

	return false
}

// SetJobs gets a reference to the given []V0036JobResponseProperties and assigns it to the Jobs field.
func (o *V0036JobsResponse) SetJobs(v []V0036JobResponseProperties) {
	o.Jobs = &v
}

func (o V0036JobsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	if o.Jobs != nil {
		toSerialize["jobs"] = o.Jobs
	}
	return json.Marshal(toSerialize)
}

type NullableV0036JobsResponse struct {
	value *V0036JobsResponse
	isSet bool
}

func (v NullableV0036JobsResponse) Get() *V0036JobsResponse {
	return v.value
}

func (v *NullableV0036JobsResponse) Set(val *V0036JobsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV0036JobsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV0036JobsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0036JobsResponse(val *V0036JobsResponse) *NullableV0036JobsResponse {
	return &NullableV0036JobsResponse{value: val, isSet: true}
}

func (v NullableV0036JobsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0036JobsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


