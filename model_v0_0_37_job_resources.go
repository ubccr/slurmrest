/*
 * Slurm Rest API
 *
 * API to access and control Slurm.
 *
 * API version: 0.0.37
 * Contact: sales@schedmd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrest

import (
	"encoding/json"
)

// V0037JobResources struct for V0037JobResources
type V0037JobResources struct {
	// list of assigned job nodes
	Nodes *string `json:"nodes,omitempty"`
	// number of assigned job cpus
	AllocatedCpus *int32 `json:"allocated_cpus,omitempty"`
	// number of assigned job hosts
	AllocatedHosts *int32 `json:"allocated_hosts,omitempty"`
	// node allocations
	AllocatedNodes *[]V0037NodeAllocation `json:"allocated_nodes,omitempty"`
}

// NewV0037JobResources instantiates a new V0037JobResources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0037JobResources() *V0037JobResources {
	this := V0037JobResources{}
	return &this
}

// NewV0037JobResourcesWithDefaults instantiates a new V0037JobResources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0037JobResourcesWithDefaults() *V0037JobResources {
	this := V0037JobResources{}
	return &this
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *V0037JobResources) GetNodes() string {
	if o == nil || o.Nodes == nil {
		var ret string
		return ret
	}
	return *o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0037JobResources) GetNodesOk() (*string, bool) {
	if o == nil || o.Nodes == nil {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *V0037JobResources) HasNodes() bool {
	if o != nil && o.Nodes != nil {
		return true
	}

	return false
}

// SetNodes gets a reference to the given string and assigns it to the Nodes field.
func (o *V0037JobResources) SetNodes(v string) {
	o.Nodes = &v
}

// GetAllocatedCpus returns the AllocatedCpus field value if set, zero value otherwise.
func (o *V0037JobResources) GetAllocatedCpus() int32 {
	if o == nil || o.AllocatedCpus == nil {
		var ret int32
		return ret
	}
	return *o.AllocatedCpus
}

// GetAllocatedCpusOk returns a tuple with the AllocatedCpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0037JobResources) GetAllocatedCpusOk() (*int32, bool) {
	if o == nil || o.AllocatedCpus == nil {
		return nil, false
	}
	return o.AllocatedCpus, true
}

// HasAllocatedCpus returns a boolean if a field has been set.
func (o *V0037JobResources) HasAllocatedCpus() bool {
	if o != nil && o.AllocatedCpus != nil {
		return true
	}

	return false
}

// SetAllocatedCpus gets a reference to the given int32 and assigns it to the AllocatedCpus field.
func (o *V0037JobResources) SetAllocatedCpus(v int32) {
	o.AllocatedCpus = &v
}

// GetAllocatedHosts returns the AllocatedHosts field value if set, zero value otherwise.
func (o *V0037JobResources) GetAllocatedHosts() int32 {
	if o == nil || o.AllocatedHosts == nil {
		var ret int32
		return ret
	}
	return *o.AllocatedHosts
}

// GetAllocatedHostsOk returns a tuple with the AllocatedHosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0037JobResources) GetAllocatedHostsOk() (*int32, bool) {
	if o == nil || o.AllocatedHosts == nil {
		return nil, false
	}
	return o.AllocatedHosts, true
}

// HasAllocatedHosts returns a boolean if a field has been set.
func (o *V0037JobResources) HasAllocatedHosts() bool {
	if o != nil && o.AllocatedHosts != nil {
		return true
	}

	return false
}

// SetAllocatedHosts gets a reference to the given int32 and assigns it to the AllocatedHosts field.
func (o *V0037JobResources) SetAllocatedHosts(v int32) {
	o.AllocatedHosts = &v
}

// GetAllocatedNodes returns the AllocatedNodes field value if set, zero value otherwise.
func (o *V0037JobResources) GetAllocatedNodes() []V0037NodeAllocation {
	if o == nil || o.AllocatedNodes == nil {
		var ret []V0037NodeAllocation
		return ret
	}
	return *o.AllocatedNodes
}

// GetAllocatedNodesOk returns a tuple with the AllocatedNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0037JobResources) GetAllocatedNodesOk() (*[]V0037NodeAllocation, bool) {
	if o == nil || o.AllocatedNodes == nil {
		return nil, false
	}
	return o.AllocatedNodes, true
}

// HasAllocatedNodes returns a boolean if a field has been set.
func (o *V0037JobResources) HasAllocatedNodes() bool {
	if o != nil && o.AllocatedNodes != nil {
		return true
	}

	return false
}

// SetAllocatedNodes gets a reference to the given []V0037NodeAllocation and assigns it to the AllocatedNodes field.
func (o *V0037JobResources) SetAllocatedNodes(v []V0037NodeAllocation) {
	o.AllocatedNodes = &v
}

func (o V0037JobResources) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Nodes != nil {
		toSerialize["nodes"] = o.Nodes
	}
	if o.AllocatedCpus != nil {
		toSerialize["allocated_cpus"] = o.AllocatedCpus
	}
	if o.AllocatedHosts != nil {
		toSerialize["allocated_hosts"] = o.AllocatedHosts
	}
	if o.AllocatedNodes != nil {
		toSerialize["allocated_nodes"] = o.AllocatedNodes
	}
	return json.Marshal(toSerialize)
}

type NullableV0037JobResources struct {
	value *V0037JobResources
	isSet bool
}

func (v NullableV0037JobResources) Get() *V0037JobResources {
	return v.value
}

func (v *NullableV0037JobResources) Set(val *V0037JobResources) {
	v.value = val
	v.isSet = true
}

func (v NullableV0037JobResources) IsSet() bool {
	return v.isSet
}

func (v *NullableV0037JobResources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0037JobResources(val *V0037JobResources) *NullableV0037JobResources {
	return &NullableV0037JobResources{value: val, isSet: true}
}

func (v NullableV0037JobResources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0037JobResources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


