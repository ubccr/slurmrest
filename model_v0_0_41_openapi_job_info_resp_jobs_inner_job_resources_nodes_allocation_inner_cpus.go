/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.05.2&openapi/dbv0.0.39&openapi/v0.0.39&openapi/slurmdbd&openapi/slurmctld
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrest

import (
	"encoding/json"
)

// checks if the V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus{}

// V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus struct for V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus
type V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus struct {
	// Total number of CPUs assigned to job
	Count *int32 `json:"count,omitempty"`
	// Total number of CPUs used by job
	Used *int32 `json:"used,omitempty"`
}

// NewV0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus instantiates a new V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus() *V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus {
	this := V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus{}
	return &this
}

// NewV0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpusWithDefaults instantiates a new V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpusWithDefaults() *V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus {
	this := V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus) SetCount(v int32) {
	o.Count = &v
}

// GetUsed returns the Used field value if set, zero value otherwise.
func (o *V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus) GetUsed() int32 {
	if o == nil || IsNil(o.Used) {
		var ret int32
		return ret
	}
	return *o.Used
}

// GetUsedOk returns a tuple with the Used field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus) GetUsedOk() (*int32, bool) {
	if o == nil || IsNil(o.Used) {
		return nil, false
	}
	return o.Used, true
}

// HasUsed returns a boolean if a field has been set.
func (o *V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus) HasUsed() bool {
	if o != nil && !IsNil(o.Used) {
		return true
	}

	return false
}

// SetUsed gets a reference to the given int32 and assigns it to the Used field.
func (o *V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus) SetUsed(v int32) {
	o.Used = &v
}

func (o V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Used) {
		toSerialize["used"] = o.Used
	}
	return toSerialize, nil
}

type NullableV0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus struct {
	value *V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus
	isSet bool
}

func (v NullableV0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus) Get() *V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus {
	return v.value
}

func (v *NullableV0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus) Set(val *V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus) {
	v.value = val
	v.isSet = true
}

func (v NullableV0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus) IsSet() bool {
	return v.isSet
}

func (v *NullableV0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus(val *V0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus) *NullableV0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus {
	return &NullableV0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus{value: val, isSet: true}
}

func (v NullableV0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0041OpenapiJobInfoRespJobsInnerJobResourcesNodesAllocationInnerCpus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


