/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.05.2&openapi/dbv0.0.39&openapi/v0.0.39&openapi/slurmdbd&openapi/slurmctld
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrest

import (
	"encoding/json"
)

// checks if the V0041OpenapiSharesRespShares type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0041OpenapiSharesRespShares{}

// V0041OpenapiSharesRespShares fairshare info
type V0041OpenapiSharesRespShares struct {
	// Assocation shares
	Shares []V0041OpenapiSharesRespSharesSharesInner `json:"shares,omitempty"`
	// Total number of shares
	TotalShares *int64 `json:"total_shares,omitempty"`
}

// NewV0041OpenapiSharesRespShares instantiates a new V0041OpenapiSharesRespShares object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0041OpenapiSharesRespShares() *V0041OpenapiSharesRespShares {
	this := V0041OpenapiSharesRespShares{}
	return &this
}

// NewV0041OpenapiSharesRespSharesWithDefaults instantiates a new V0041OpenapiSharesRespShares object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0041OpenapiSharesRespSharesWithDefaults() *V0041OpenapiSharesRespShares {
	this := V0041OpenapiSharesRespShares{}
	return &this
}

// GetShares returns the Shares field value if set, zero value otherwise.
func (o *V0041OpenapiSharesRespShares) GetShares() []V0041OpenapiSharesRespSharesSharesInner {
	if o == nil || IsNil(o.Shares) {
		var ret []V0041OpenapiSharesRespSharesSharesInner
		return ret
	}
	return o.Shares
}

// GetSharesOk returns a tuple with the Shares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041OpenapiSharesRespShares) GetSharesOk() ([]V0041OpenapiSharesRespSharesSharesInner, bool) {
	if o == nil || IsNil(o.Shares) {
		return nil, false
	}
	return o.Shares, true
}

// HasShares returns a boolean if a field has been set.
func (o *V0041OpenapiSharesRespShares) HasShares() bool {
	if o != nil && !IsNil(o.Shares) {
		return true
	}

	return false
}

// SetShares gets a reference to the given []V0041OpenapiSharesRespSharesSharesInner and assigns it to the Shares field.
func (o *V0041OpenapiSharesRespShares) SetShares(v []V0041OpenapiSharesRespSharesSharesInner) {
	o.Shares = v
}

// GetTotalShares returns the TotalShares field value if set, zero value otherwise.
func (o *V0041OpenapiSharesRespShares) GetTotalShares() int64 {
	if o == nil || IsNil(o.TotalShares) {
		var ret int64
		return ret
	}
	return *o.TotalShares
}

// GetTotalSharesOk returns a tuple with the TotalShares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041OpenapiSharesRespShares) GetTotalSharesOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalShares) {
		return nil, false
	}
	return o.TotalShares, true
}

// HasTotalShares returns a boolean if a field has been set.
func (o *V0041OpenapiSharesRespShares) HasTotalShares() bool {
	if o != nil && !IsNil(o.TotalShares) {
		return true
	}

	return false
}

// SetTotalShares gets a reference to the given int64 and assigns it to the TotalShares field.
func (o *V0041OpenapiSharesRespShares) SetTotalShares(v int64) {
	o.TotalShares = &v
}

func (o V0041OpenapiSharesRespShares) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0041OpenapiSharesRespShares) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Shares) {
		toSerialize["shares"] = o.Shares
	}
	if !IsNil(o.TotalShares) {
		toSerialize["total_shares"] = o.TotalShares
	}
	return toSerialize, nil
}

type NullableV0041OpenapiSharesRespShares struct {
	value *V0041OpenapiSharesRespShares
	isSet bool
}

func (v NullableV0041OpenapiSharesRespShares) Get() *V0041OpenapiSharesRespShares {
	return v.value
}

func (v *NullableV0041OpenapiSharesRespShares) Set(val *V0041OpenapiSharesRespShares) {
	v.value = val
	v.isSet = true
}

func (v NullableV0041OpenapiSharesRespShares) IsSet() bool {
	return v.isSet
}

func (v *NullableV0041OpenapiSharesRespShares) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0041OpenapiSharesRespShares(val *V0041OpenapiSharesRespShares) *NullableV0041OpenapiSharesRespShares {
	return &NullableV0041OpenapiSharesRespShares{value: val, isSet: true}
}

func (v NullableV0041OpenapiSharesRespShares) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0041OpenapiSharesRespShares) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


