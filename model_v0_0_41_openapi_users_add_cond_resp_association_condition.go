/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.05.2&openapi/dbv0.0.39&openapi/v0.0.39&openapi/slurmdbd&openapi/slurmctld
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V0041OpenapiUsersAddCondRespAssociationCondition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0041OpenapiUsersAddCondRespAssociationCondition{}

// V0041OpenapiUsersAddCondRespAssociationCondition Filters to select associations for users
type V0041OpenapiUsersAddCondRespAssociationCondition struct {
	// CSV accounts list
	Accounts []string `json:"accounts,omitempty"`
	Association *V0041OpenapiUsersAddCondRespAssociationConditionAssociation `json:"association,omitempty"`
	// CSV clusters list
	Clusters []string `json:"clusters,omitempty"`
	// CSV partitions list
	Partitions []string `json:"partitions,omitempty"`
	// CSV users list
	Users []string `json:"users"`
	// CSV WCKeys list
	Wckeys []string `json:"wckeys,omitempty"`
}

type _V0041OpenapiUsersAddCondRespAssociationCondition V0041OpenapiUsersAddCondRespAssociationCondition

// NewV0041OpenapiUsersAddCondRespAssociationCondition instantiates a new V0041OpenapiUsersAddCondRespAssociationCondition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0041OpenapiUsersAddCondRespAssociationCondition(users []string) *V0041OpenapiUsersAddCondRespAssociationCondition {
	this := V0041OpenapiUsersAddCondRespAssociationCondition{}
	this.Users = users
	return &this
}

// NewV0041OpenapiUsersAddCondRespAssociationConditionWithDefaults instantiates a new V0041OpenapiUsersAddCondRespAssociationCondition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0041OpenapiUsersAddCondRespAssociationConditionWithDefaults() *V0041OpenapiUsersAddCondRespAssociationCondition {
	this := V0041OpenapiUsersAddCondRespAssociationCondition{}
	return &this
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) GetAccounts() []string {
	if o == nil || IsNil(o.Accounts) {
		var ret []string
		return ret
	}
	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) GetAccountsOk() ([]string, bool) {
	if o == nil || IsNil(o.Accounts) {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) HasAccounts() bool {
	if o != nil && !IsNil(o.Accounts) {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []string and assigns it to the Accounts field.
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) SetAccounts(v []string) {
	o.Accounts = v
}

// GetAssociation returns the Association field value if set, zero value otherwise.
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) GetAssociation() V0041OpenapiUsersAddCondRespAssociationConditionAssociation {
	if o == nil || IsNil(o.Association) {
		var ret V0041OpenapiUsersAddCondRespAssociationConditionAssociation
		return ret
	}
	return *o.Association
}

// GetAssociationOk returns a tuple with the Association field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) GetAssociationOk() (*V0041OpenapiUsersAddCondRespAssociationConditionAssociation, bool) {
	if o == nil || IsNil(o.Association) {
		return nil, false
	}
	return o.Association, true
}

// HasAssociation returns a boolean if a field has been set.
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) HasAssociation() bool {
	if o != nil && !IsNil(o.Association) {
		return true
	}

	return false
}

// SetAssociation gets a reference to the given V0041OpenapiUsersAddCondRespAssociationConditionAssociation and assigns it to the Association field.
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) SetAssociation(v V0041OpenapiUsersAddCondRespAssociationConditionAssociation) {
	o.Association = &v
}

// GetClusters returns the Clusters field value if set, zero value otherwise.
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) GetClusters() []string {
	if o == nil || IsNil(o.Clusters) {
		var ret []string
		return ret
	}
	return o.Clusters
}

// GetClustersOk returns a tuple with the Clusters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) GetClustersOk() ([]string, bool) {
	if o == nil || IsNil(o.Clusters) {
		return nil, false
	}
	return o.Clusters, true
}

// HasClusters returns a boolean if a field has been set.
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) HasClusters() bool {
	if o != nil && !IsNil(o.Clusters) {
		return true
	}

	return false
}

// SetClusters gets a reference to the given []string and assigns it to the Clusters field.
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) SetClusters(v []string) {
	o.Clusters = v
}

// GetPartitions returns the Partitions field value if set, zero value otherwise.
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) GetPartitions() []string {
	if o == nil || IsNil(o.Partitions) {
		var ret []string
		return ret
	}
	return o.Partitions
}

// GetPartitionsOk returns a tuple with the Partitions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) GetPartitionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Partitions) {
		return nil, false
	}
	return o.Partitions, true
}

// HasPartitions returns a boolean if a field has been set.
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) HasPartitions() bool {
	if o != nil && !IsNil(o.Partitions) {
		return true
	}

	return false
}

// SetPartitions gets a reference to the given []string and assigns it to the Partitions field.
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) SetPartitions(v []string) {
	o.Partitions = v
}

// GetUsers returns the Users field value
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) GetUsers() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Users
}

// GetUsersOk returns a tuple with the Users field value
// and a boolean to check if the value has been set.
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) GetUsersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Users, true
}

// SetUsers sets field value
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) SetUsers(v []string) {
	o.Users = v
}

// GetWckeys returns the Wckeys field value if set, zero value otherwise.
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) GetWckeys() []string {
	if o == nil || IsNil(o.Wckeys) {
		var ret []string
		return ret
	}
	return o.Wckeys
}

// GetWckeysOk returns a tuple with the Wckeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) GetWckeysOk() ([]string, bool) {
	if o == nil || IsNil(o.Wckeys) {
		return nil, false
	}
	return o.Wckeys, true
}

// HasWckeys returns a boolean if a field has been set.
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) HasWckeys() bool {
	if o != nil && !IsNil(o.Wckeys) {
		return true
	}

	return false
}

// SetWckeys gets a reference to the given []string and assigns it to the Wckeys field.
func (o *V0041OpenapiUsersAddCondRespAssociationCondition) SetWckeys(v []string) {
	o.Wckeys = v
}

func (o V0041OpenapiUsersAddCondRespAssociationCondition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0041OpenapiUsersAddCondRespAssociationCondition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Accounts) {
		toSerialize["accounts"] = o.Accounts
	}
	if !IsNil(o.Association) {
		toSerialize["association"] = o.Association
	}
	if !IsNil(o.Clusters) {
		toSerialize["clusters"] = o.Clusters
	}
	if !IsNil(o.Partitions) {
		toSerialize["partitions"] = o.Partitions
	}
	toSerialize["users"] = o.Users
	if !IsNil(o.Wckeys) {
		toSerialize["wckeys"] = o.Wckeys
	}
	return toSerialize, nil
}

func (o *V0041OpenapiUsersAddCondRespAssociationCondition) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"users",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV0041OpenapiUsersAddCondRespAssociationCondition := _V0041OpenapiUsersAddCondRespAssociationCondition{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV0041OpenapiUsersAddCondRespAssociationCondition)

	if err != nil {
		return err
	}

	*o = V0041OpenapiUsersAddCondRespAssociationCondition(varV0041OpenapiUsersAddCondRespAssociationCondition)

	return err
}

type NullableV0041OpenapiUsersAddCondRespAssociationCondition struct {
	value *V0041OpenapiUsersAddCondRespAssociationCondition
	isSet bool
}

func (v NullableV0041OpenapiUsersAddCondRespAssociationCondition) Get() *V0041OpenapiUsersAddCondRespAssociationCondition {
	return v.value
}

func (v *NullableV0041OpenapiUsersAddCondRespAssociationCondition) Set(val *V0041OpenapiUsersAddCondRespAssociationCondition) {
	v.value = val
	v.isSet = true
}

func (v NullableV0041OpenapiUsersAddCondRespAssociationCondition) IsSet() bool {
	return v.isSet
}

func (v *NullableV0041OpenapiUsersAddCondRespAssociationCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0041OpenapiUsersAddCondRespAssociationCondition(val *V0041OpenapiUsersAddCondRespAssociationCondition) *NullableV0041OpenapiUsersAddCondRespAssociationCondition {
	return &NullableV0041OpenapiUsersAddCondRespAssociationCondition{value: val, isSet: true}
}

func (v NullableV0041OpenapiUsersAddCondRespAssociationCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0041OpenapiUsersAddCondRespAssociationCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


