/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.05.2&openapi/dbv0.0.39&openapi/v0.0.39&openapi/slurmdbd&openapi/slurmctld
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrest

import (
	"encoding/json"
)

// checks if the V0041OpenapiUsersAddCondRespUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0041OpenapiUsersAddCondRespUser{}

// V0041OpenapiUsersAddCondRespUser Admin level of user, DefaultAccount, DefaultWCKey
type V0041OpenapiUsersAddCondRespUser struct {
	// Admin level of user.  Valid levels are None, Operator, and Admin.
	Adminlevel []string `json:"adminlevel,omitempty"`
	// Identify the default bank account name to be used for a job if none is specified at submission time.
	Defaultaccount *string `json:"defaultaccount,omitempty"`
	// Identify the default Workload Characterization Key.
	Defaultwckey *string `json:"defaultwckey,omitempty"`
}

// NewV0041OpenapiUsersAddCondRespUser instantiates a new V0041OpenapiUsersAddCondRespUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0041OpenapiUsersAddCondRespUser() *V0041OpenapiUsersAddCondRespUser {
	this := V0041OpenapiUsersAddCondRespUser{}
	return &this
}

// NewV0041OpenapiUsersAddCondRespUserWithDefaults instantiates a new V0041OpenapiUsersAddCondRespUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0041OpenapiUsersAddCondRespUserWithDefaults() *V0041OpenapiUsersAddCondRespUser {
	this := V0041OpenapiUsersAddCondRespUser{}
	return &this
}

// GetAdminlevel returns the Adminlevel field value if set, zero value otherwise.
func (o *V0041OpenapiUsersAddCondRespUser) GetAdminlevel() []string {
	if o == nil || IsNil(o.Adminlevel) {
		var ret []string
		return ret
	}
	return o.Adminlevel
}

// GetAdminlevelOk returns a tuple with the Adminlevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041OpenapiUsersAddCondRespUser) GetAdminlevelOk() ([]string, bool) {
	if o == nil || IsNil(o.Adminlevel) {
		return nil, false
	}
	return o.Adminlevel, true
}

// HasAdminlevel returns a boolean if a field has been set.
func (o *V0041OpenapiUsersAddCondRespUser) HasAdminlevel() bool {
	if o != nil && !IsNil(o.Adminlevel) {
		return true
	}

	return false
}

// SetAdminlevel gets a reference to the given []string and assigns it to the Adminlevel field.
func (o *V0041OpenapiUsersAddCondRespUser) SetAdminlevel(v []string) {
	o.Adminlevel = v
}

// GetDefaultaccount returns the Defaultaccount field value if set, zero value otherwise.
func (o *V0041OpenapiUsersAddCondRespUser) GetDefaultaccount() string {
	if o == nil || IsNil(o.Defaultaccount) {
		var ret string
		return ret
	}
	return *o.Defaultaccount
}

// GetDefaultaccountOk returns a tuple with the Defaultaccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041OpenapiUsersAddCondRespUser) GetDefaultaccountOk() (*string, bool) {
	if o == nil || IsNil(o.Defaultaccount) {
		return nil, false
	}
	return o.Defaultaccount, true
}

// HasDefaultaccount returns a boolean if a field has been set.
func (o *V0041OpenapiUsersAddCondRespUser) HasDefaultaccount() bool {
	if o != nil && !IsNil(o.Defaultaccount) {
		return true
	}

	return false
}

// SetDefaultaccount gets a reference to the given string and assigns it to the Defaultaccount field.
func (o *V0041OpenapiUsersAddCondRespUser) SetDefaultaccount(v string) {
	o.Defaultaccount = &v
}

// GetDefaultwckey returns the Defaultwckey field value if set, zero value otherwise.
func (o *V0041OpenapiUsersAddCondRespUser) GetDefaultwckey() string {
	if o == nil || IsNil(o.Defaultwckey) {
		var ret string
		return ret
	}
	return *o.Defaultwckey
}

// GetDefaultwckeyOk returns a tuple with the Defaultwckey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0041OpenapiUsersAddCondRespUser) GetDefaultwckeyOk() (*string, bool) {
	if o == nil || IsNil(o.Defaultwckey) {
		return nil, false
	}
	return o.Defaultwckey, true
}

// HasDefaultwckey returns a boolean if a field has been set.
func (o *V0041OpenapiUsersAddCondRespUser) HasDefaultwckey() bool {
	if o != nil && !IsNil(o.Defaultwckey) {
		return true
	}

	return false
}

// SetDefaultwckey gets a reference to the given string and assigns it to the Defaultwckey field.
func (o *V0041OpenapiUsersAddCondRespUser) SetDefaultwckey(v string) {
	o.Defaultwckey = &v
}

func (o V0041OpenapiUsersAddCondRespUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0041OpenapiUsersAddCondRespUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Adminlevel) {
		toSerialize["adminlevel"] = o.Adminlevel
	}
	if !IsNil(o.Defaultaccount) {
		toSerialize["defaultaccount"] = o.Defaultaccount
	}
	if !IsNil(o.Defaultwckey) {
		toSerialize["defaultwckey"] = o.Defaultwckey
	}
	return toSerialize, nil
}

type NullableV0041OpenapiUsersAddCondRespUser struct {
	value *V0041OpenapiUsersAddCondRespUser
	isSet bool
}

func (v NullableV0041OpenapiUsersAddCondRespUser) Get() *V0041OpenapiUsersAddCondRespUser {
	return v.value
}

func (v *NullableV0041OpenapiUsersAddCondRespUser) Set(val *V0041OpenapiUsersAddCondRespUser) {
	v.value = val
	v.isSet = true
}

func (v NullableV0041OpenapiUsersAddCondRespUser) IsSet() bool {
	return v.isSet
}

func (v *NullableV0041OpenapiUsersAddCondRespUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0041OpenapiUsersAddCondRespUser(val *V0041OpenapiUsersAddCondRespUser) *NullableV0041OpenapiUsersAddCondRespUser {
	return &NullableV0041OpenapiUsersAddCondRespUser{value: val, isSet: true}
}

func (v NullableV0041OpenapiUsersAddCondRespUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0041OpenapiUsersAddCondRespUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


