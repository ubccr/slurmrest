{
    "tags": [
        {
            "name": "slurm",
            "description": "methods that query slurmctld"
        },
        {
            "name": "slurmdb",
            "description": "methods that query slurmdbd"
        },
        {
            "name": "openapi",
            "description": "methods that query for generated OpenAPI specifications"
        }
    ],
    "paths": {
        "/slurmdb/v0.0.41/job/{job_id}": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get job info",
                "description": "This endpoint may return multiple job entries since job_id is not a unique key - only the tuple (cluster, job_id, start_time) is unique. If the requested job_id is a component of a heterogeneous job all components are returned.",
                "operationId": "slurmdb_v0041_get_job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "job_id",
                        "style": "simple",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Job id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_jobs_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_jobs_resp"
                                }
                            }
                        },
                        "description": "Job description"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_jobs_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_jobs_resp"
                                }
                            }
                        },
                        "description": "Job description"
                    }
                }
            }
        },
        "/slurmdb/v0.0.40/job/{job_id}": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get job info",
                "description": "This endpoint may return multiple job entries since job_id is not a unique key - only the tuple (cluster, job_id, start_time) is unique. If the requested job_id is a component of a heterogeneous job all components are returned.",
                "operationId": "slurmdb_v0040_get_job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "job_id",
                        "style": "simple",
                        "explode": false,
                        "deprecated": true,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Job id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_jobs_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_jobs_resp"
                                }
                            }
                        },
                        "description": "Job description"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_jobs_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_jobs_resp"
                                }
                            }
                        },
                        "description": "Job description"
                    }
                }
            }
        },
        "/slurmdb/v0.0.41/config": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Dump all configuration information",
                "operationId": "slurmdb_v0041_get_config",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_config_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_config_resp"
                                }
                            }
                        },
                        "description": "slurmdbd configuration"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_config_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_config_resp"
                                }
                            }
                        },
                        "description": "slurmdbd configuration"
                    }
                }
            },
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Load all configuration information",
                "operationId": "slurmdb_v0041_post_config",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "slurmdbd configuration"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "slurmdbd configuration"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_config_resp"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_config_resp"
                            }
                        }
                    },
                    "description": "Add or update config"
                }
            }
        },
        "/slurmdb/v0.0.40/config": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Dump all configuration information",
                "operationId": "slurmdb_v0040_get_config",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_config_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_config_resp"
                                }
                            }
                        },
                        "description": "slurmdbd configuration"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_config_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_config_resp"
                                }
                            }
                        },
                        "description": "slurmdbd configuration"
                    }
                }
            },
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Load all configuration information",
                "operationId": "slurmdb_v0040_post_config",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "slurmdbd configuration"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "slurmdbd configuration"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_config_resp"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_config_resp"
                            }
                        }
                    },
                    "description": "Add or update config"
                }
            }
        },
        "/slurmdb/v0.0.41/tres/": {
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Add TRES",
                "operationId": "slurmdb_v0041_post_tres",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "TRES update result"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "TRES update result"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_openapi_tres_resp"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_openapi_tres_resp"
                            }
                        }
                    },
                    "description": "TRES descriptions. Only works in developer mode."
                }
            },
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get TRES info",
                "operationId": "slurmdb_v0041_get_tres",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_tres_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_tres_resp"
                                }
                            }
                        },
                        "description": "List of TRES"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_tres_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_tres_resp"
                                }
                            }
                        },
                        "description": "List of TRES"
                    }
                }
            }
        },
        "/slurmdb/v0.0.40/tres/": {
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Add TRES",
                "operationId": "slurmdb_v0040_post_tres",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "TRES update result"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "TRES update result"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_openapi_tres_resp"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_openapi_tres_resp"
                            }
                        }
                    },
                    "description": "TRES descriptions. Only works in developer mode."
                }
            },
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get TRES info",
                "operationId": "slurmdb_v0040_get_tres",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_tres_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_tres_resp"
                                }
                            }
                        },
                        "description": "List of TRES"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_tres_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_tres_resp"
                                }
                            }
                        },
                        "description": "List of TRES"
                    }
                }
            }
        },
        "/slurmdb/v0.0.41/qos/{qos}": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get QOS info",
                "operationId": "slurmdb_v0041_get_single_qos",
                "parameters": [
                    {
                        "in": "path",
                        "name": "qos",
                        "style": "simple",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "QOS name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Query includes deleted QOS",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_qos_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_qos_resp"
                                }
                            }
                        },
                        "description": "QOS information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_qos_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_qos_resp"
                                }
                            }
                        },
                        "description": "QOS information"
                    }
                }
            },
            "delete": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Delete QOS",
                "operationId": "slurmdb_v0041_delete_single_qos",
                "parameters": [
                    {
                        "in": "path",
                        "name": "qos",
                        "style": "simple",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "QOS name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_qos_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_qos_removed_resp"
                                }
                            }
                        },
                        "description": "results of ping test"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_qos_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_qos_removed_resp"
                                }
                            }
                        },
                        "description": "results of ping test"
                    }
                }
            }
        },
        "/slurmdb/v0.0.40/qos/{qos}": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get QOS info",
                "operationId": "slurmdb_v0040_get_single_qos",
                "parameters": [
                    {
                        "in": "path",
                        "name": "qos",
                        "style": "simple",
                        "explode": false,
                        "deprecated": true,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "QOS name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Query includes deleted QOS",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_qos_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_qos_resp"
                                }
                            }
                        },
                        "description": "QOS information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_qos_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_qos_resp"
                                }
                            }
                        },
                        "description": "QOS information"
                    }
                }
            },
            "delete": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Delete QOS",
                "operationId": "slurmdb_v0040_delete_single_qos",
                "parameters": [
                    {
                        "in": "path",
                        "name": "qos",
                        "style": "simple",
                        "explode": false,
                        "deprecated": true,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "QOS name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_qos_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_qos_removed_resp"
                                }
                            }
                        },
                        "description": "results of ping test"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_qos_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_qos_removed_resp"
                                }
                            }
                        },
                        "description": "results of ping test"
                    }
                }
            }
        },
        "/slurmdb/v0.0.41/qos/": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get QOS list",
                "operationId": "slurmdb_v0041_get_qos",
                "parameters": [
                    {
                        "in": "query",
                        "name": "description",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV description list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "preempt_mode",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DISABLED",
                                "SUSPEND",
                                "REQUEUE",
                                "CANCEL",
                                "GANG"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Include deleted QOS",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_qos_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_qos_resp"
                                }
                            }
                        },
                        "description": "List of QOS"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_qos_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_qos_resp"
                                }
                            }
                        },
                        "description": "List of QOS"
                    }
                }
            },
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Add or update QOSs",
                "operationId": "slurmdb_v0041_post_qos",
                "parameters": [
                    {
                        "in": "query",
                        "name": "description",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV description list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "preempt_mode",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DISABLED",
                                "SUSPEND",
                                "REQUEUE",
                                "CANCEL",
                                "GANG"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Include deleted QOS",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "QOS update response"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "QOS update response"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_qos_resp"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_qos_resp"
                            }
                        }
                    },
                    "description": "Description of QOS to add or update"
                }
            }
        },
        "/slurmdb/v0.0.40/qos/": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get QOS list",
                "operationId": "slurmdb_v0040_get_qos",
                "parameters": [
                    {
                        "in": "query",
                        "name": "description",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV description list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "preempt_mode",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DISABLED",
                                "SUSPEND",
                                "REQUEUE",
                                "CANCEL",
                                "GANG"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Include deleted QOS",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_qos_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_qos_resp"
                                }
                            }
                        },
                        "description": "List of QOS"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_qos_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_qos_resp"
                                }
                            }
                        },
                        "description": "List of QOS"
                    }
                }
            },
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Add or update QOSs",
                "operationId": "slurmdb_v0040_post_qos",
                "parameters": [
                    {
                        "in": "query",
                        "name": "description",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV description list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "preempt_mode",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DISABLED",
                                "SUSPEND",
                                "REQUEUE",
                                "CANCEL",
                                "GANG"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Include deleted QOS",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "QOS update response"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "QOS update response"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_qos_resp"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_qos_resp"
                            }
                        }
                    },
                    "description": "Description of QOS to add or update"
                }
            }
        },
        "/slurmdb/v0.0.41/associations/": {
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Set associations info",
                "operationId": "slurmdb_v0041_post_associations",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "status of associations update"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "status of associations update"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_openapi_assocs_resp"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_openapi_assocs_resp"
                            }
                        }
                    },
                    "description": "Job description"
                }
            },
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get association list",
                "operationId": "slurmdb_v0041_get_associations",
                "parameters": [
                    {
                        "in": "query",
                        "name": "account",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV accounts list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV clusters list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_qos",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "only_defaults",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "filter to only defaults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "parent_account",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV names of parent account",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "partition",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV partition name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "qos",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage end UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage start UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV user list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "fill in usage",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return deleted associations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_raw_qos",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return a raw qos or delta_qos",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_sub_accts",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return sub acct information also",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_info",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me parent id/name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_limits",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me limits from parents",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_assocs_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_assocs_resp"
                                }
                            }
                        },
                        "description": "List of associations"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_assocs_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_assocs_resp"
                                }
                            }
                        },
                        "description": "List of associations"
                    }
                }
            },
            "delete": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Delete associations",
                "operationId": "slurmdb_v0041_delete_associations",
                "parameters": [
                    {
                        "in": "query",
                        "name": "account",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV accounts list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV clusters list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_qos",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "only_defaults",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "filter to only defaults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "parent_account",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV names of parent account",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "partition",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV partition name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "qos",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage end UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage start UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV user list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "fill in usage",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return deleted associations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_raw_qos",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return a raw qos or delta_qos",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_sub_accts",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return sub acct information also",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_info",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me parent id/name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_limits",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me limits from parents",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_assocs_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_assocs_removed_resp"
                                }
                            }
                        },
                        "description": "List of associations deleted"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_assocs_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_assocs_removed_resp"
                                }
                            }
                        },
                        "description": "List of associations deleted"
                    }
                }
            }
        },
        "/slurmdb/v0.0.40/associations/": {
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Set associations info",
                "operationId": "slurmdb_v0040_post_associations",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "status of associations update"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "status of associations update"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_openapi_assocs_resp"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_openapi_assocs_resp"
                            }
                        }
                    },
                    "description": "Job description"
                }
            },
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get association list",
                "operationId": "slurmdb_v0040_get_associations",
                "parameters": [
                    {
                        "in": "query",
                        "name": "account",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV accounts list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV clusters list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "only_defaults",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "filter to only defaults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "parent_account",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV names of parent account",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "partition",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV partition name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage end UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage start UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV user list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "fill in usage",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return deleted associations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_raw_qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return a raw qos or delta_qos",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_sub_accts",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return sub acct information also",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_info",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me parent id/name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_limits",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me limits from parents",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_assocs_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_assocs_resp"
                                }
                            }
                        },
                        "description": "List of associations"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_assocs_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_assocs_resp"
                                }
                            }
                        },
                        "description": "List of associations"
                    }
                }
            },
            "delete": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Delete associations",
                "operationId": "slurmdb_v0040_delete_associations",
                "parameters": [
                    {
                        "in": "query",
                        "name": "account",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV accounts list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV clusters list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "only_defaults",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "filter to only defaults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "parent_account",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV names of parent account",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "partition",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV partition name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage end UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage start UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV user list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "fill in usage",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return deleted associations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_raw_qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return a raw qos or delta_qos",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_sub_accts",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return sub acct information also",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_info",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me parent id/name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_limits",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me limits from parents",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_assocs_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_assocs_removed_resp"
                                }
                            }
                        },
                        "description": "List of associations deleted"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_assocs_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_assocs_removed_resp"
                                }
                            }
                        },
                        "description": "List of associations deleted"
                    }
                }
            }
        },
        "/slurmdb/v0.0.41/association/": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get association info",
                "operationId": "slurmdb_v0041_get_association",
                "parameters": [
                    {
                        "in": "query",
                        "name": "account",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV accounts list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV clusters list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_qos",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "only_defaults",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "filter to only defaults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "parent_account",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV names of parent account",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "partition",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV partition name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "qos",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage end UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage start UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV user list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "fill in usage",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return deleted associations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_raw_qos",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return a raw qos or delta_qos",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_sub_accts",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return sub acct information also",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_info",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me parent id/name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_limits",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me limits from parents",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_assocs_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_assocs_resp"
                                }
                            }
                        },
                        "description": "List of associations"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_assocs_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_assocs_resp"
                                }
                            }
                        },
                        "description": "List of associations"
                    }
                }
            },
            "delete": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Delete association",
                "operationId": "slurmdb_v0041_delete_association",
                "parameters": [
                    {
                        "in": "query",
                        "name": "account",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV accounts list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV clusters list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_qos",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "only_defaults",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "filter to only defaults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "parent_account",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV names of parent account",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "partition",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV partition name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "qos",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage end UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage start UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV user list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "fill in usage",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return deleted associations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_raw_qos",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return a raw qos or delta_qos",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_sub_accts",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return sub acct information also",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_info",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me parent id/name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_limits",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me limits from parents",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_assocs_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_assocs_removed_resp"
                                }
                            }
                        },
                        "description": "Status of associations delete request"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_assocs_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_assocs_removed_resp"
                                }
                            }
                        },
                        "description": "Status of associations delete request"
                    }
                }
            }
        },
        "/slurmdb/v0.0.40/association/": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get association info",
                "operationId": "slurmdb_v0040_get_association",
                "parameters": [
                    {
                        "in": "query",
                        "name": "account",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV accounts list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV clusters list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "only_defaults",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "filter to only defaults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "parent_account",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV names of parent account",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "partition",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV partition name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage end UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage start UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV user list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "fill in usage",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return deleted associations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_raw_qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return a raw qos or delta_qos",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_sub_accts",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return sub acct information also",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_info",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me parent id/name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_limits",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me limits from parents",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_assocs_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_assocs_resp"
                                }
                            }
                        },
                        "description": "List of associations"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_assocs_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_assocs_resp"
                                }
                            }
                        },
                        "description": "List of associations"
                    }
                }
            },
            "delete": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Delete association",
                "operationId": "slurmdb_v0040_delete_association",
                "parameters": [
                    {
                        "in": "query",
                        "name": "account",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV accounts list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV clusters list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "only_defaults",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "filter to only defaults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "parent_account",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV names of parent account",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "partition",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV partition name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage end UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage start UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV user list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "fill in usage",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return deleted associations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_raw_qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return a raw qos or delta_qos",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_sub_accts",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "return sub acct information also",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_info",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me parent id/name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_parent_limits",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "don't give me limits from parents",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_assocs_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_assocs_removed_resp"
                                }
                            }
                        },
                        "description": "Status of associations delete request"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_assocs_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_assocs_removed_resp"
                                }
                            }
                        },
                        "description": "Status of associations delete request"
                    }
                }
            }
        },
        "/slurmdb/v0.0.41/instances/": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get instance list",
                "operationId": "slurmdb_v0041_get_instances",
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV clusters list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "extra",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV extra list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "instance_id",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV instance_id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "instance_type",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV instance_type list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "node_list",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "ranged node string",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "time_end",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "time end UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "time_start",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "time start UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_instances_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_instances_resp"
                                }
                            }
                        },
                        "description": "List of instances"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_instances_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_instances_resp"
                                }
                            }
                        },
                        "description": "List of instances"
                    }
                }
            }
        },
        "/slurmdb/v0.0.40/instances/": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get instance list",
                "operationId": "slurmdb_v0040_get_instances",
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV clusters list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "extra",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV extra list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "instance_id",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV instance_id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "instance_type",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV instance_type list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "node_list",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "ranged node string",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "time_end",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "time end UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "time_start",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "time start UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_instances_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_instances_resp"
                                }
                            }
                        },
                        "description": "List of instances"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_instances_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_instances_resp"
                                }
                            }
                        },
                        "description": "List of instances"
                    }
                }
            }
        },
        "/slurmdb/v0.0.41/instance/": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get instance info",
                "operationId": "slurmdb_v0041_get_instance",
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV clusters list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "extra",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV extra list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "instance_id",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV instance_id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "instance_type",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV instance_type list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "node_list",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "ranged node string",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "time_end",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "time end UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "time_start",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "time start UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_instances_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_instances_resp"
                                }
                            }
                        },
                        "description": "List of instances"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_instances_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_instances_resp"
                                }
                            }
                        },
                        "description": "List of instances"
                    }
                }
            }
        },
        "/slurmdb/v0.0.40/instance/": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get instance info",
                "operationId": "slurmdb_v0040_get_instance",
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV clusters list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "extra",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV extra list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "instance_id",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV instance_id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "instance_type",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV instance_type list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "node_list",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "ranged node string",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "time_end",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "time end UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "time_start",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "time start UNIX timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_instances_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_instances_resp"
                                }
                            }
                        },
                        "description": "List of instances"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_instances_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_instances_resp"
                                }
                            }
                        },
                        "description": "List of instances"
                    }
                }
            }
        },
        "/slurmdb/v0.0.41/user/{name}": {
            "delete": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Delete user",
                "operationId": "slurmdb_v0041_delete_user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "style": "simple",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "User name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "Result of user delete request"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "Result of user delete request"
                    }
                }
            },
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get user info",
                "operationId": "slurmdb_v0041_get_user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "style": "simple",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "User name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Include deleted users",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_assocs",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Include assocations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_coords",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Include coordinators",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_wckeys",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Include wckeys",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_users_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_users_resp"
                                }
                            }
                        },
                        "description": "List of users"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_users_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_users_resp"
                                }
                            }
                        },
                        "description": "List of users"
                    }
                }
            }
        },
        "/slurmdb/v0.0.40/user/{name}": {
            "delete": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Delete user",
                "operationId": "slurmdb_v0040_delete_user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "User name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "Result of user delete request"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "Result of user delete request"
                    }
                }
            },
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get user info",
                "operationId": "slurmdb_v0040_get_user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "User name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Include deleted users",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_assocs",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Include assocations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_coords",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Include coordinators",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_wckeys",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Include wckeys",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_users_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_users_resp"
                                }
                            }
                        },
                        "description": "List of users"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_users_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_users_resp"
                                }
                            }
                        },
                        "description": "List of users"
                    }
                }
            }
        },
        "/slurmdb/v0.0.41/users_association/": {
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Add users with conditional association",
                "operationId": "slurmdb_v0041_post_users_association",
                "parameters": [
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter partitions since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Query flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_users_add_cond_resp_str"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_users_add_cond_resp_str"
                                }
                            }
                        },
                        "description": "Add list of users with conditional association"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_users_add_cond_resp_str"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_users_add_cond_resp_str"
                                }
                            }
                        },
                        "description": "Add list of users with conditional association"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_openapi_users_add_cond_resp"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_openapi_users_add_cond_resp"
                            }
                        }
                    },
                    "description": "Create users with conditional association"
                }
            }
        },
        "/slurmdb/v0.0.40/users_association/": {
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Add users with conditional association",
                "operationId": "slurmdb_v0040_post_users_association",
                "parameters": [
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter partitions since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Query flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_users_add_cond_resp_str"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_users_add_cond_resp_str"
                                }
                            }
                        },
                        "description": "Add list of users with conditional association"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_users_add_cond_resp_str"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_users_add_cond_resp_str"
                                }
                            }
                        },
                        "description": "Add list of users with conditional association"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_openapi_users_add_cond_resp"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_openapi_users_add_cond_resp"
                            }
                        }
                    },
                    "description": "Create users with conditional association"
                }
            }
        },
        "/slurmdb/v0.0.41/users/": {
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Update users",
                "operationId": "slurmdb_v0041_post_users",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "Status of user update request"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "Status of user update request"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_openapi_users_resp"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_openapi_users_resp"
                            }
                        }
                    },
                    "description": "add or update user"
                }
            },
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get user list",
                "operationId": "slurmdb_v0041_get_users",
                "parameters": [
                    {
                        "in": "query",
                        "name": "admin_level",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Administrator level",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Not Set",
                                "None",
                                "Operator",
                                "Administrator"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_account",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV default account list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_wckey",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV default wckey list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_assocs",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "With associations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_coords",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "With coordinators",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "With deleted",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_wckeys",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "With wckeys",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_defaults",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Exclude defaults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_users_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_users_resp"
                                }
                            }
                        },
                        "description": "List of users"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_users_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_users_resp"
                                }
                            }
                        },
                        "description": "List of users"
                    }
                }
            }
        },
        "/slurmdb/v0.0.40/users/": {
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Update users",
                "operationId": "slurmdb_v0040_post_users",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "Status of user update request"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "Status of user update request"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_openapi_users_resp"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_openapi_users_resp"
                            }
                        }
                    },
                    "description": "add or update user"
                }
            },
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get user list",
                "operationId": "slurmdb_v0040_get_users",
                "parameters": [
                    {
                        "in": "query",
                        "name": "admin_level",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Administrator level",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Not Set",
                                "None",
                                "Operator",
                                "Administrator"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_account",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV default account list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_wckey",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV default wckey list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_assocs",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "With associations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_coords",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "With coordinators",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "With deleted",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_wckeys",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "With wckeys",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "without_defaults",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "Exclude defaults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_users_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_users_resp"
                                }
                            }
                        },
                        "description": "List of users"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_users_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_users_resp"
                                }
                            }
                        },
                        "description": "List of users"
                    }
                }
            }
        },
        "/slurmdb/v0.0.41/cluster/{cluster_name}": {
            "delete": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Delete cluster",
                "operationId": "slurmdb_v0041_delete_cluster",
                "parameters": [
                    {
                        "in": "path",
                        "name": "cluster_name",
                        "style": "simple",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Cluster name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "classification",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "UNCLASSIFIED",
                                "CAPABILITY",
                                "CAPACITY",
                                "CAPAPACITY"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV cluster list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "federation",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV federation list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "REGISTERING",
                                "MULTIPLE_SLURMD",
                                "FRONT_END",
                                "FEDERATION",
                                "EXTERNAL"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "rpc_version",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV RPC version list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Usage end UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Usage start UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include deleted clusters",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "query usage",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_clusters_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_clusters_removed_resp"
                                }
                            }
                        },
                        "description": "Result of delete cluster request"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_clusters_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_clusters_removed_resp"
                                }
                            }
                        },
                        "description": "Result of delete cluster request"
                    }
                }
            },
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get cluster info",
                "operationId": "slurmdb_v0041_get_cluster",
                "parameters": [
                    {
                        "in": "path",
                        "name": "cluster_name",
                        "style": "simple",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Cluster name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "classification",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "UNCLASSIFIED",
                                "CAPABILITY",
                                "CAPACITY",
                                "CAPAPACITY"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV cluster list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "federation",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV federation list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "REGISTERING",
                                "MULTIPLE_SLURMD",
                                "FRONT_END",
                                "FEDERATION",
                                "EXTERNAL"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "rpc_version",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV RPC version list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Usage end UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Usage start UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include deleted clusters",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "query usage",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_clusters_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_clusters_resp"
                                }
                            }
                        },
                        "description": "Cluster information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_clusters_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_clusters_resp"
                                }
                            }
                        },
                        "description": "Cluster information"
                    }
                }
            }
        },
        "/slurmdb/v0.0.40/cluster/{cluster_name}": {
            "delete": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Delete cluster",
                "operationId": "slurmdb_v0040_delete_cluster",
                "parameters": [
                    {
                        "in": "path",
                        "name": "cluster_name",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Cluster name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "classification",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "UNCLASSIFIED",
                                "CAPABILITY",
                                "CAPACITY",
                                "CAPAPACITY"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV cluster list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "federation",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV federation list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "REGISTERING",
                                "MULTIPLE_SLURMD",
                                "FRONT_END",
                                "FEDERATION",
                                "EXTERNAL"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "rpc_version",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV RPC version list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Usage end UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Usage start UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include deleted clusters",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "query usage",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_clusters_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_clusters_removed_resp"
                                }
                            }
                        },
                        "description": "Result of delete cluster request"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_clusters_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_clusters_removed_resp"
                                }
                            }
                        },
                        "description": "Result of delete cluster request"
                    }
                }
            },
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get cluster info",
                "operationId": "slurmdb_v0040_get_cluster",
                "parameters": [
                    {
                        "in": "path",
                        "name": "cluster_name",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Cluster name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "classification",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "UNCLASSIFIED",
                                "CAPABILITY",
                                "CAPACITY",
                                "CAPAPACITY"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV cluster list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "federation",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV federation list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "REGISTERING",
                                "MULTIPLE_SLURMD",
                                "FRONT_END",
                                "FEDERATION",
                                "EXTERNAL"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "rpc_version",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV RPC version list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Usage end UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Usage start UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include deleted clusters",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "query usage",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_clusters_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_clusters_resp"
                                }
                            }
                        },
                        "description": "Cluster information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_clusters_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_clusters_resp"
                                }
                            }
                        },
                        "description": "Cluster information"
                    }
                }
            }
        },
        "/slurmdb/v0.0.41/clusters/": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get cluster list",
                "operationId": "slurmdb_v0041_get_clusters",
                "parameters": [
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter reservations since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_clusters_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_clusters_resp"
                                }
                            }
                        },
                        "description": "List of clusters"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_clusters_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_clusters_resp"
                                }
                            }
                        },
                        "description": "List of clusters"
                    }
                }
            },
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get cluster list",
                "operationId": "slurmdb_v0041_post_clusters",
                "parameters": [
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter reservations since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "Result of modify clusters request"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "Result of modify clusters request"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_openapi_clusters_resp"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_openapi_clusters_resp"
                            }
                        }
                    },
                    "description": "Cluster add or update descriptions"
                }
            }
        },
        "/slurmdb/v0.0.40/clusters/": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get cluster list",
                "operationId": "slurmdb_v0040_get_clusters",
                "parameters": [
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter reservations since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_clusters_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_clusters_resp"
                                }
                            }
                        },
                        "description": "List of clusters"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_clusters_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_clusters_resp"
                                }
                            }
                        },
                        "description": "List of clusters"
                    }
                }
            },
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get cluster list",
                "operationId": "slurmdb_v0040_post_clusters",
                "parameters": [
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter reservations since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "Result of modify clusters request"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "Result of modify clusters request"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_openapi_clusters_resp"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_openapi_clusters_resp"
                            }
                        }
                    },
                    "description": "Cluster add or update descriptions"
                }
            }
        },
        "/slurmdb/v0.0.41/wckey/{id}": {
            "delete": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Delete wckey",
                "operationId": "slurmdb_v0041_delete_wckey",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "style": "simple",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "wckey id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_wckey_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_wckey_removed_resp"
                                }
                            }
                        },
                        "description": "Result of wckey deletion request"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_wckey_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_wckey_removed_resp"
                                }
                            }
                        },
                        "description": "Result of wckey deletion request"
                    }
                }
            },
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get wckey info",
                "operationId": "slurmdb_v0041_get_wckey",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "style": "simple",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "wckey id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_wckey_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_wckey_resp"
                                }
                            }
                        },
                        "description": "Description of wckey"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_wckey_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_wckey_resp"
                                }
                            }
                        },
                        "description": "Description of wckey"
                    }
                }
            }
        },
        "/slurmdb/v0.0.40/wckey/{id}": {
            "delete": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Delete wckey",
                "operationId": "slurmdb_v0040_delete_wckey",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "wckey id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_wckey_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_wckey_removed_resp"
                                }
                            }
                        },
                        "description": "Result of wckey deletion request"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_wckey_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_wckey_removed_resp"
                                }
                            }
                        },
                        "description": "Result of wckey deletion request"
                    }
                }
            },
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get wckey info",
                "operationId": "slurmdb_v0040_get_wckey",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "wckey id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_wckey_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_wckey_resp"
                                }
                            }
                        },
                        "description": "Description of wckey"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_wckey_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_wckey_resp"
                                }
                            }
                        },
                        "description": "Description of wckey"
                    }
                }
            }
        },
        "/slurmdb/v0.0.41/wckeys/": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get wckey list",
                "operationId": "slurmdb_v0041_get_wckeys",
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV cluster name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "only_defaults",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "only query defaults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage end UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage start UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV user list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include usage with query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include deleted wckeys with query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_wckey_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_wckey_resp"
                                }
                            }
                        },
                        "description": "List of wckeys"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_wckey_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_wckey_resp"
                                }
                            }
                        },
                        "description": "List of wckeys"
                    }
                }
            },
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Add or update wckeys",
                "operationId": "slurmdb_v0041_post_wckeys",
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV cluster name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "only_defaults",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "only query defaults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage end UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage start UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV user list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include usage with query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include deleted wckeys with query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "Result of wckey addition or update request"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "Result of wckey addition or update request"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_openapi_wckey_resp"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_openapi_wckey_resp"
                            }
                        }
                    },
                    "description": "wckeys description"
                }
            }
        },
        "/slurmdb/v0.0.40/wckeys/": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get wckey list",
                "operationId": "slurmdb_v0040_get_wckeys",
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV cluster name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "only_defaults",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "only query defaults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage end UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage start UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV user list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include usage with query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include deleted wckeys with query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_wckey_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_wckey_resp"
                                }
                            }
                        },
                        "description": "List of wckeys"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_wckey_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_wckey_resp"
                                }
                            }
                        },
                        "description": "List of wckeys"
                    }
                }
            },
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Add or update wckeys",
                "operationId": "slurmdb_v0040_post_wckeys",
                "parameters": [
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV cluster name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "only_defaults",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "only query defaults",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_end",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage end UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_start",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage start UNIX timestamp (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV user list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_usage",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include usage with query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include deleted wckeys with query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "Result of wckey addition or update request"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "Result of wckey addition or update request"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_openapi_wckey_resp"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_openapi_wckey_resp"
                            }
                        }
                    },
                    "description": "wckeys description"
                }
            }
        },
        "/slurmdb/v0.0.41/account/{account_name}": {
            "delete": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Delete account",
                "operationId": "slurmdb_v0041_delete_account",
                "parameters": [
                    {
                        "in": "path",
                        "name": "account_name",
                        "style": "simple",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Account name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_accounts_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_accounts_removed_resp"
                                }
                            }
                        },
                        "description": "Status of account deletion request"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_accounts_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_accounts_removed_resp"
                                }
                            }
                        },
                        "description": "Status of account deletion request"
                    }
                }
            },
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get account info",
                "operationId": "slurmdb_v0041_get_account",
                "parameters": [
                    {
                        "in": "path",
                        "name": "account_name",
                        "style": "simple",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Account name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_assocs",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include associations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_coords",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include coordinators",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include deleted",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_accounts_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_accounts_resp"
                                }
                            }
                        },
                        "description": "List of accounts"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_accounts_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_accounts_resp"
                                }
                            }
                        },
                        "description": "List of accounts"
                    }
                }
            }
        },
        "/slurmdb/v0.0.40/account/{account_name}": {
            "delete": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Delete account",
                "operationId": "slurmdb_v0040_delete_account",
                "parameters": [
                    {
                        "in": "path",
                        "name": "account_name",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Account name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_accounts_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_accounts_removed_resp"
                                }
                            }
                        },
                        "description": "Status of account deletion request"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_accounts_removed_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_accounts_removed_resp"
                                }
                            }
                        },
                        "description": "Status of account deletion request"
                    }
                }
            },
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get account info",
                "operationId": "slurmdb_v0040_get_account",
                "parameters": [
                    {
                        "in": "path",
                        "name": "account_name",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Account name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_assocs",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include associations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_coords",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include coordinators",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include deleted",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_accounts_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_accounts_resp"
                                }
                            }
                        },
                        "description": "List of accounts"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_accounts_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_accounts_resp"
                                }
                            }
                        },
                        "description": "List of accounts"
                    }
                }
            }
        },
        "/slurmdb/v0.0.41/accounts_association/": {
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Add accounts with conditional association",
                "operationId": "slurmdb_v0041_post_accounts_association",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_accounts_add_cond_resp_str"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_accounts_add_cond_resp_str"
                                }
                            }
                        },
                        "description": "Status of account addition request"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_accounts_add_cond_resp_str"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_accounts_add_cond_resp_str"
                                }
                            }
                        },
                        "description": "Status of account addition request"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_openapi_accounts_add_cond_resp"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_openapi_accounts_add_cond_resp"
                            }
                        }
                    },
                    "description": "Add list of accounts with conditional association"
                }
            }
        },
        "/slurmdb/v0.0.40/accounts_association/": {
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Add accounts with conditional association",
                "operationId": "slurmdb_v0040_post_accounts_association",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_accounts_add_cond_resp_str"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_accounts_add_cond_resp_str"
                                }
                            }
                        },
                        "description": "Status of account addition request"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_accounts_add_cond_resp_str"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_accounts_add_cond_resp_str"
                                }
                            }
                        },
                        "description": "Status of account addition request"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_openapi_accounts_add_cond_resp"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_openapi_accounts_add_cond_resp"
                            }
                        }
                    },
                    "description": "Add list of accounts with conditional association"
                }
            }
        },
        "/slurmdb/v0.0.41/accounts/": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get account list",
                "operationId": "slurmdb_v0041_get_accounts",
                "parameters": [
                    {
                        "in": "query",
                        "name": "description",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV description list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "DELETED",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include deleted assocations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "WithAssociations",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "query includes associations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "WithCoordinators",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "query includes coordinators",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "NoUsersAreCoords",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "remove users as coordinators",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "UsersAreCoords",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "users are coordinators",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_accounts_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_accounts_resp"
                                }
                            }
                        },
                        "description": "List of accounts"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_accounts_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_accounts_resp"
                                }
                            }
                        },
                        "description": "List of accounts"
                    }
                }
            },
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Add/update list of accounts",
                "operationId": "slurmdb_v0041_post_accounts",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "Status of account update request"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "Status of account update request"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_openapi_accounts_resp"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_openapi_accounts_resp"
                            }
                        }
                    },
                    "description": "Description of accounts to update/create"
                }
            }
        },
        "/slurmdb/v0.0.40/accounts/": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get account list",
                "operationId": "slurmdb_v0040_get_accounts",
                "parameters": [
                    {
                        "in": "query",
                        "name": "description",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV description list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_assocs",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include associations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_coords",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include coordinators",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "with_deleted",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "description": "include deleted accounts",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_accounts_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_accounts_resp"
                                }
                            }
                        },
                        "description": "List of accounts"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_accounts_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_accounts_resp"
                                }
                            }
                        },
                        "description": "List of accounts"
                    }
                }
            },
            "post": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Add/update list of accounts",
                "operationId": "slurmdb_v0040_post_accounts",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "Status of account update request"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "Status of account update request"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_openapi_accounts_resp"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_openapi_accounts_resp"
                            }
                        }
                    },
                    "description": "Description of accounts to update/create"
                }
            }
        },
        "/slurmdb/v0.0.41/jobs/": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get job list",
                "operationId": "slurmdb_v0041_get_jobs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "account",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV account list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "association",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV association list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV cluster list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "constraints",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV constraint list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scheduler_unset",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scheduled_on_submit",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scheduled_by_main",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scheduled_by_backfill",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "job_started",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "exit_code",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "job exit code (numeric)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_duplicates",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip_steps",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "disable_truncate_usage_time",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "whole_hetjob",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "disable_whole_hetjob",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "disable_wait_for_result",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_time_as_submit_time",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_batch_script",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_job_environment",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "groups",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV group list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "job_name",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV job name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "partition",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV partition name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "qos",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reason",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV reason list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reservation",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV reservation name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reservation_id",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV reservation ID list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV state list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "step",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV step id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "end_time",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage end timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "start_time",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage start timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "node",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "ranged node string where jobs ran",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "users",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV user name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "wckey",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV wckey list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_jobs_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_jobs_resp"
                                }
                            }
                        },
                        "description": "List of jobs"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_jobs_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_jobs_resp"
                                }
                            }
                        },
                        "description": "List of jobs"
                    }
                }
            }
        },
        "/slurmdb/v0.0.40/jobs/": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get job list",
                "operationId": "slurmdb_v0040_get_jobs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "account",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV account list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "association",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV association list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV cluster list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "constraints",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV constraint list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cpus_max",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "number of cpus high range",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cpus_min",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "number of cpus low range",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scheduler_unset",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scheduled_on_submit",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scheduled_by_main",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scheduled_by_backfill",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "job_started",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "exit_code",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "job exit code (numeric)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_duplicates",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip_steps",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "disable_truncate_usage_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "whole_hetjob",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "disable_whole_hetjob",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "disable_wait_for_result",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "usage_time_as_submit_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_batch_script",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_job_environment",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "allowReserved": false,
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV format list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "groups",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV group list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "job_name",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV job name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "nodes_max",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "number of nodes high range",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "nodes_min",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "number of nodes low range",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "partition",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV partition name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV QOS name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reason",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV reason list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reservation",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV reservation name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reservation_id",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV reservation ID list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV state list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "step",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV step id list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timelimit_max",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "maximum timelimit (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timelimit_min",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "minimum timelimit (seconds)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "end_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage end timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "start_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "usage start timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "submit_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "submit time timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "node",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "ranged node string where jobs ran",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "users",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV user name list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "wckey",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "CSV wckey list",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_jobs_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_jobs_resp"
                                }
                            }
                        },
                        "description": "List of jobs"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_jobs_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_jobs_resp"
                                }
                            }
                        },
                        "description": "List of jobs"
                    }
                }
            }
        },
        "/slurmdb/v0.0.41/diag/": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get slurmdb diagnostics",
                "operationId": "slurmdb_v0041_get_diag",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_stats_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_stats_resp"
                                }
                            }
                        },
                        "description": "Dictionary of statistics"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_stats_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_slurmdbd_stats_resp"
                                }
                            }
                        },
                        "description": "Dictionary of statistics"
                    }
                }
            }
        },
        "/slurmdb/v0.0.40/diag/": {
            "get": {
                "tags": [
                    "slurmdb"
                ],
                "summary": "Get slurmdb diagnostics",
                "operationId": "slurmdb_v0040_get_diag",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_stats_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_stats_resp"
                                }
                            }
                        },
                        "description": "Dictionary of statistics"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_stats_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_slurmdbd_stats_resp"
                                }
                            }
                        },
                        "description": "Dictionary of statistics"
                    }
                }
            }
        },
        "/slurm/v0.0.41/shares": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get fairshare info",
                "operationId": "slurm_v0041_get_shares",
                "parameters": [
                    {
                        "in": "query",
                        "name": "accounts",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Accounts to query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "users",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Users to query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_shares_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_shares_resp"
                                }
                            }
                        },
                        "description": "shares information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_shares_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_shares_resp"
                                }
                            }
                        },
                        "description": "shares information"
                    }
                }
            }
        },
        "/slurm/v0.0.40/shares": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get fairshare info",
                "operationId": "slurm_v0040_get_shares",
                "parameters": [
                    {
                        "in": "query",
                        "name": "accounts",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Accounts to query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "users",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Users to query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_shares_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_shares_resp"
                                }
                            }
                        },
                        "description": "shares information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_shares_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_shares_resp"
                                }
                            }
                        },
                        "description": "shares information"
                    }
                }
            }
        },
        "/slurm/v0.0.41/reconfigure/": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "request slurmctld reconfigure",
                "operationId": "slurm_v0041_get_reconfigure",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "reconfigure request result"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "reconfigure request result"
                    }
                }
            }
        },
        "/slurm/v0.0.40/reconfigure/": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "request slurmctld reconfigure",
                "operationId": "slurm_v0040_get_reconfigure",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "reconfigure request result"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "reconfigure request result"
                    }
                }
            }
        },
        "/slurm/v0.0.41/diag/": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get diagnostics",
                "operationId": "slurm_v0041_get_diag",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_diag_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_diag_resp"
                                }
                            }
                        },
                        "description": "diagnostic results"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_diag_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_diag_resp"
                                }
                            }
                        },
                        "description": "diagnostic results"
                    }
                }
            }
        },
        "/slurm/v0.0.40/diag/": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get diagnostics",
                "operationId": "slurm_v0040_get_diag",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_diag_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_diag_resp"
                                }
                            }
                        },
                        "description": "diagnostic results"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_diag_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_diag_resp"
                                }
                            }
                        },
                        "description": "diagnostic results"
                    }
                }
            }
        },
        "/slurm/v0.0.41/ping/": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "ping test",
                "operationId": "slurm_v0041_get_ping",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_ping_array_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_ping_array_resp"
                                }
                            }
                        },
                        "description": "results of ping test"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_ping_array_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_ping_array_resp"
                                }
                            }
                        },
                        "description": "results of ping test"
                    }
                }
            }
        },
        "/slurm/v0.0.40/ping/": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "ping test",
                "operationId": "slurm_v0040_get_ping",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_ping_array_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_ping_array_resp"
                                }
                            }
                        },
                        "description": "results of ping test"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_ping_array_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_ping_array_resp"
                                }
                            }
                        },
                        "description": "results of ping test"
                    }
                }
            }
        },
        "/slurm/v0.0.41/licenses/": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get all Slurm tracked license info",
                "operationId": "slurm_v0041_get_licenses",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_licenses_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_licenses_resp"
                                }
                            }
                        },
                        "description": "results of get all licenses"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_licenses_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_licenses_resp"
                                }
                            }
                        },
                        "description": "results of get all licenses"
                    }
                }
            }
        },
        "/slurm/v0.0.40/licenses/": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get all Slurm tracked license info",
                "operationId": "slurm_v0040_get_licenses",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_licenses_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_licenses_resp"
                                }
                            }
                        },
                        "description": "results of get all licenses"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_licenses_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_licenses_resp"
                                }
                            }
                        },
                        "description": "results of get all licenses"
                    }
                }
            }
        },
        "/slurm/v0.0.41/job/submit": {
            "post": {
                "tags": [
                    "slurm"
                ],
                "summary": "submit new job",
                "operationId": "slurm_v0041_post_job_submit",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_submit_response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_submit_response"
                                }
                            }
                        },
                        "description": "job submission response"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_submit_response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_submit_response"
                                }
                            }
                        },
                        "description": "job submission response"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_job_submit_req"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_job_submit_req"
                            }
                        }
                    },
                    "description": "Job description"
                }
            }
        },
        "/slurm/v0.0.40/job/submit": {
            "post": {
                "tags": [
                    "slurm"
                ],
                "summary": "submit new job",
                "operationId": "slurm_v0040_post_job_submit",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_job_submit_response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_job_submit_response"
                                }
                            }
                        },
                        "description": "job submission response"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_job_submit_response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_job_submit_response"
                                }
                            }
                        },
                        "description": "job submission response"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_job_submit_req"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_job_submit_req"
                            }
                        }
                    },
                    "description": "Job description"
                }
            }
        },
        "/slurm/v0.0.41/job/allocate": {
            "post": {
                "tags": [
                    "slurm"
                ],
                "summary": "submit new job allocation without any steps that must be signaled to stop",
                "operationId": "slurm_v0041_post_job_allocate",
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_alloc_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_alloc_resp"
                                }
                            }
                        },
                        "description": "job allocation response"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_alloc_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_alloc_resp"
                                }
                            }
                        },
                        "description": "job allocation response"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_job_alloc_req"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_job_alloc_req"
                            }
                        }
                    },
                    "description": "Job allocation description"
                }
            }
        },
        "/slurm/v0.0.41/jobs/": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get list of jobs",
                "operationId": "slurm_v0041_get_jobs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Query flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_info_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_info_resp"
                                }
                            }
                        },
                        "description": "job(s) information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_info_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_info_resp"
                                }
                            }
                        },
                        "description": "job(s) information"
                    }
                }
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "send signal to list of jobs",
                "operationId": "slurm_v0041_delete_jobs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "account",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs to a specific account",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs according to flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "BATCH_JOB",
                                "ARRAY_TASK",
                                "FULL_STEPS_ONLY",
                                "FULL_JOB",
                                "FEDERATION_REQUEUE",
                                "HURRY",
                                "OUT_OF_MEMORY",
                                "NO_SIBLING_JOBS",
                                "RESERVATION_JOB",
                                "VERBOSE",
                                "CRON_JOBS",
                                "WARNING_SENT"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "job_name",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs to a specific name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "jobs",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "List of jobs to signal",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "partition",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs to a specific partition",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "qos",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs to a specific QOS",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reservation",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs to a specific reservation",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "signal",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Signal to send to jobs",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "job_state",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs to a specific state",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "PENDING",
                                "RUNNING",
                                "SUSPENDED",
                                "COMPLETED",
                                "CANCELLED",
                                "FAILED",
                                "TIMEOUT",
                                "NODE_FAIL",
                                "PREEMPTED",
                                "BOOT_FAIL",
                                "DEADLINE",
                                "OUT_OF_MEMORY",
                                "LAUNCH_FAILED",
                                "UPDATE_DB",
                                "REQUEUED",
                                "REQUEUE_HOLD",
                                "SPECIAL_EXIT",
                                "RESIZING",
                                "CONFIGURING",
                                "COMPLETING",
                                "STOPPED",
                                "RECONFIG_FAIL",
                                "POWER_UP_NODE",
                                "REVOKED",
                                "REQUEUE_FED",
                                "RESV_DEL_HOLD",
                                "SIGNALING",
                                "STAGE_OUT"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "user_id",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs to a specific numeric user id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user_name",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs to a specific user name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "wckey",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs to a specific wckey",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "nodes",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs to a set of nodes",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_kill_jobs_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_kill_jobs_resp"
                                }
                            }
                        },
                        "description": "description of jobs to signal"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_kill_jobs_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_kill_jobs_resp"
                                }
                            }
                        },
                        "description": "description of jobs to signal"
                    }
                }
            }
        },
        "/slurm/v0.0.40/jobs/": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get list of jobs",
                "operationId": "slurm_v0040_get_jobs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Query flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_job_info_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_job_info_resp"
                                }
                            }
                        },
                        "description": "job(s) information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_job_info_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_job_info_resp"
                                }
                            }
                        },
                        "description": "job(s) information"
                    }
                }
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "send signal to list of jobs",
                "operationId": "slurm_v0040_delete_jobs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "account",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs to a specific account",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs according to flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "BATCH_JOB",
                                "ARRAY_TASK",
                                "FULL_STEPS_ONLY",
                                "FULL_JOB",
                                "FEDERATION_REQUEUE",
                                "HURRY",
                                "OUT_OF_MEMORY",
                                "NO_SIBLING_JOBS",
                                "RESERVATION_JOB",
                                "NO_CRON_JOBS",
                                "VERBOSE",
                                "CRON_JOBS",
                                "WARNING_SENT"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "job_name",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs to a specific name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "jobs",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "List of jobs to signal",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "partition",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs to a specific partition",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "qos",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs to a specific QOS",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reservation",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs to a specific reservation",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "signal",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Signal to send to jobs",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "job_state",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs to a specific state",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "PENDING",
                                "RUNNING",
                                "SUSPENDED",
                                "COMPLETED",
                                "CANCELLED",
                                "FAILED",
                                "TIMEOUT",
                                "NODE_FAIL",
                                "PREEMPTED",
                                "BOOT_FAIL",
                                "DEADLINE",
                                "OUT_OF_MEMORY",
                                "LAUNCH_FAILED",
                                "UPDATE_DB",
                                "REQUEUED",
                                "REQUEUE_HOLD",
                                "SPECIAL_EXIT",
                                "RESIZING",
                                "CONFIGURING",
                                "COMPLETING",
                                "STOPPED",
                                "RECONFIG_FAIL",
                                "POWER_UP_NODE",
                                "REVOKED",
                                "REQUEUE_FED",
                                "RESV_DEL_HOLD",
                                "SIGNALING",
                                "STAGE_OUT"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "user_id",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs to a specific numeric user id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user_name",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs to a specific user name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "wckey",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs to a specific wckey",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "nodes",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs to a set of nodes",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_kill_jobs_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_kill_jobs_resp"
                                }
                            }
                        },
                        "description": "description of jobs to signal"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_kill_jobs_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_kill_jobs_resp"
                                }
                            }
                        },
                        "description": "description of jobs to signal"
                    }
                }
            }
        },
        "/slurm/v0.0.41/jobs/state/": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get list of job states",
                "operationId": "slurm_v0041_get_jobs_state",
                "parameters": [
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Query flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_info_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_info_resp"
                                }
                            }
                        },
                        "description": "job(s) state information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_info_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_info_resp"
                                }
                            }
                        },
                        "description": "job(s) state information"
                    }
                }
            }
        },
        "/slurm/v0.0.40/jobs/state/": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get list of job states",
                "operationId": "slurm_v0040_get_jobs_state",
                "parameters": [
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Query flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_job_info_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_job_info_resp"
                                }
                            }
                        },
                        "description": "job(s) state information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_job_info_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_job_info_resp"
                                }
                            }
                        },
                        "description": "job(s) state information"
                    }
                }
            }
        },
        "/slurm/v0.0.41/job/{job_id}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get job info",
                "operationId": "slurm_v0041_get_job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "job_id",
                        "style": "simple",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "JobId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Query flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_info_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_info_resp"
                                }
                            }
                        },
                        "description": "job(s) information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_info_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_info_resp"
                                }
                            }
                        },
                        "description": "job(s) information"
                    }
                }
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "summary": "update job",
                "operationId": "slurm_v0041_post_job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "job_id",
                        "style": "simple",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "JobId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_post_response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_post_response"
                                }
                            }
                        },
                        "description": "job update result"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_post_response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_job_post_response"
                                }
                            }
                        },
                        "description": "job update result"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_job_desc_msg"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_job_desc_msg"
                            }
                        }
                    },
                    "description": "Job update description"
                }
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "cancel or signal job",
                "operationId": "slurm_v0041_delete_job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "job_id",
                        "style": "simple",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "JobId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "signal",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Signal to send to Job",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Signalling flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "BATCH_JOB",
                                "ARRAY_TASK",
                                "FULL_STEPS_ONLY",
                                "FULL_JOB",
                                "FEDERATION_REQUEUE",
                                "HURRY",
                                "OUT_OF_MEMORY",
                                "NO_SIBLING_JOBS",
                                "RESERVATION_JOB",
                                "VERBOSE",
                                "CRON_JOBS",
                                "WARNING_SENT"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "job signal result"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "job signal result"
                    }
                }
            }
        },
        "/slurm/v0.0.40/job/{job_id}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get job info",
                "operationId": "slurm_v0040_get_job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "job_id",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "JobId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Query flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_job_info_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_job_info_resp"
                                }
                            }
                        },
                        "description": "job(s) information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_job_info_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_job_info_resp"
                                }
                            }
                        },
                        "description": "job(s) information"
                    }
                }
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "summary": "update job",
                "operationId": "slurm_v0040_post_job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "job_id",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "JobId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_job_post_response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_job_post_response"
                                }
                            }
                        },
                        "description": "job update result"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_job_post_response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_job_post_response"
                                }
                            }
                        },
                        "description": "job update result"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_job_desc_msg"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_job_desc_msg"
                            }
                        }
                    },
                    "description": "Job update description"
                }
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "cancel or signal job",
                "operationId": "slurm_v0040_delete_job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "job_id",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "JobId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "signal",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Signal to send to Job",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Signalling flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "BATCH_JOB",
                                "ARRAY_TASK",
                                "FULL_STEPS_ONLY",
                                "FULL_JOB",
                                "FEDERATION_REQUEUE",
                                "HURRY",
                                "OUT_OF_MEMORY",
                                "NO_SIBLING_JOBS",
                                "RESERVATION_JOB",
                                "NO_CRON_JOBS",
                                "VERBOSE",
                                "CRON_JOBS",
                                "WARNING_SENT"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "job signal result"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "job signal result"
                    }
                }
            }
        },
        "/slurm/v0.0.41/nodes/": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get node(s) info",
                "operationId": "slurm_v0041_get_nodes",
                "parameters": [
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Query flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_nodes_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_nodes_resp"
                                }
                            }
                        },
                        "description": "node(s) information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_nodes_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_nodes_resp"
                                }
                            }
                        },
                        "description": "node(s) information"
                    }
                }
            }
        },
        "/slurm/v0.0.40/nodes/": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get node(s) info",
                "operationId": "slurm_v0040_get_nodes",
                "parameters": [
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Query flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_nodes_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_nodes_resp"
                                }
                            }
                        },
                        "description": "node(s) information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_nodes_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_nodes_resp"
                                }
                            }
                        },
                        "description": "node(s) information"
                    }
                }
            }
        },
        "/slurm/v0.0.41/node/{node_name}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get node info",
                "operationId": "slurm_v0041_get_node",
                "parameters": [
                    {
                        "in": "path",
                        "name": "node_name",
                        "style": "simple",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Node name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Query flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_nodes_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_nodes_resp"
                                }
                            }
                        },
                        "description": "node information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_nodes_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_nodes_resp"
                                }
                            }
                        },
                        "description": "node information"
                    }
                }
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "summary": "update node properties",
                "operationId": "slurm_v0041_post_node",
                "parameters": [
                    {
                        "in": "path",
                        "name": "node_name",
                        "style": "simple",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Node name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "node update request result"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "node update request result"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_update_node_msg"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.41_update_node_msg"
                            }
                        }
                    },
                    "description": "Node update description"
                }
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "delete node",
                "operationId": "slurm_v0041_delete_node",
                "parameters": [
                    {
                        "in": "path",
                        "name": "node_name",
                        "style": "simple",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Node name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "node delete request result"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_resp"
                                }
                            }
                        },
                        "description": "node delete request result"
                    }
                }
            }
        },
        "/slurm/v0.0.40/node/{node_name}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get node info",
                "operationId": "slurm_v0040_get_node",
                "parameters": [
                    {
                        "in": "path",
                        "name": "node_name",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Node name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter jobs since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Query flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_nodes_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_nodes_resp"
                                }
                            }
                        },
                        "description": "node information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_nodes_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_nodes_resp"
                                }
                            }
                        },
                        "description": "node information"
                    }
                }
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "summary": "update node properties",
                "operationId": "slurm_v0040_post_node",
                "parameters": [
                    {
                        "in": "path",
                        "name": "node_name",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Node name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "node update request result"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "node update request result"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_update_node_msg"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.40_update_node_msg"
                            }
                        }
                    },
                    "description": "Node update description"
                }
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "summary": "delete node",
                "operationId": "slurm_v0040_delete_node",
                "parameters": [
                    {
                        "in": "path",
                        "name": "node_name",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Node name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "node delete request result"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_resp"
                                }
                            }
                        },
                        "description": "node delete request result"
                    }
                }
            }
        },
        "/slurm/v0.0.41/partitions/": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get all partition info",
                "operationId": "slurm_v0041_get_partitions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter partitions since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Query flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_partition_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_partition_resp"
                                }
                            }
                        },
                        "description": "partition information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_partition_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_partition_resp"
                                }
                            }
                        },
                        "description": "partition information"
                    }
                }
            }
        },
        "/slurm/v0.0.40/partitions/": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get all partition info",
                "operationId": "slurm_v0040_get_partitions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter partitions since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Query flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_partition_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_partition_resp"
                                }
                            }
                        },
                        "description": "partition information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_partition_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_partition_resp"
                                }
                            }
                        },
                        "description": "partition information"
                    }
                }
            }
        },
        "/slurm/v0.0.41/partition/{partition_name}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get partition info",
                "operationId": "slurm_v0041_get_partition",
                "parameters": [
                    {
                        "in": "path",
                        "name": "partition_name",
                        "style": "simple",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Partition name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter partitions since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Query flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_partition_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_partition_resp"
                                }
                            }
                        },
                        "description": "partition information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_partition_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_partition_resp"
                                }
                            }
                        },
                        "description": "partition information"
                    }
                }
            }
        },
        "/slurm/v0.0.40/partition/{partition_name}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get partition info",
                "operationId": "slurm_v0040_get_partition",
                "parameters": [
                    {
                        "in": "path",
                        "name": "partition_name",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Partition name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter partitions since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flags",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Query flags",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_partition_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_partition_resp"
                                }
                            }
                        },
                        "description": "partition information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_partition_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_partition_resp"
                                }
                            }
                        },
                        "description": "partition information"
                    }
                }
            }
        },
        "/slurm/v0.0.41/reservations/": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get all reservation info",
                "operationId": "slurm_v0041_get_reservations",
                "parameters": [
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter reservations since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_reservation_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_reservation_resp"
                                }
                            }
                        },
                        "description": "reservation information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_reservation_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_reservation_resp"
                                }
                            }
                        },
                        "description": "reservation information"
                    }
                }
            }
        },
        "/slurm/v0.0.40/reservations/": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get all reservation info",
                "operationId": "slurm_v0040_get_reservations",
                "parameters": [
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter reservations since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_reservation_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_reservation_resp"
                                }
                            }
                        },
                        "description": "reservation information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_reservation_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_reservation_resp"
                                }
                            }
                        },
                        "description": "reservation information"
                    }
                }
            }
        },
        "/slurm/v0.0.41/reservation/{reservation_name}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get reservation info",
                "operationId": "slurm_v0041_get_reservation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "reservation_name",
                        "style": "simple",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Reservation name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter reservations since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_reservation_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_reservation_resp"
                                }
                            }
                        },
                        "description": "reservation information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_reservation_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.41_openapi_reservation_resp"
                                }
                            }
                        },
                        "description": "reservation information"
                    }
                }
            }
        },
        "/slurm/v0.0.40/reservation/{reservation_name}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "summary": "get reservation info",
                "operationId": "slurm_v0040_get_reservation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "reservation_name",
                        "style": "simple",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Reservation name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "update_time",
                        "style": "form",
                        "explode": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "allowReserved": false,
                        "description": "Filter reservations since update timestamp",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_reservation_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_reservation_resp"
                                }
                            }
                        },
                        "description": "reservation information"
                    },
                    "default": {
                        "content": {
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_reservation_resp"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.40_openapi_reservation_resp"
                                }
                            }
                        },
                        "description": "reservation information"
                    }
                }
            }
        },
        "/slurmdb/v0.0.39/job/{job_id}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_get_job",
                "deprecated": true,
                "summary": "Get job info",
                "description": "This endpoint may return multiple job entries since job_id is not a unique key - only the tuple (cluster, job_id, start_time) is unique. If the requested job_id is a component of a heterogeneous job all components are returned.",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "Slurm JobID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_job_info"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_job_info"
                                }
                            }
                        },
                        "description": "Job description"
                    },
                    "default": {
                        "description": "Unable to find job",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/slurmdb/v0.0.39/config": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_get_config",
                "deprecated": true,
                "summary": "Dump all configuration information",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_config_info"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_config_info"
                                }
                            }
                        },
                        "description": "slurmdbd configuration"
                    },
                    "default": {
                        "description": "Unable to dump config",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_set_config",
                "deprecated": true,
                "summary": "Load all configuration information",
                "responses": {
                    "200": {
                        "description": "Load config",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unable to set config",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "description": "Add or update config",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbv0.0.39_set_config"
                            }
                        },
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/dbv0.0.39_set_config"
                            }
                        }
                    },
                    "required": false
                }
            }
        },
        "/slurmdb/v0.0.39/tres": {
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_update_tres",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        },
                        "description": "List of TRES"
                    },
                    "default": {
                        "description": "Unable to update TRES",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "summary": "Set TRES info",
                "requestBody": {
                    "description": "Add or Update TRES",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbv0.0.39_tres_update"
                            }
                        },
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/dbv0.0.39_tres_update"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_get_tres",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_tres_info"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_tres_info"
                                }
                            }
                        },
                        "description": "List of TRES"
                    },
                    "default": {
                        "description": "Unable to retrieve TRES"
                    }
                },
                "deprecated": true,
                "summary": "Get TRES info"
            }
        },
        "/slurmdb/v0.0.39/qos/{qos_name}": {
            "delete": {
                "tags": [
                    "slurm"
                ],
                "deprecated": true,
                "summary": "Delete QOS",
                "operationId": "slurmdb_v0039_delete_qos",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        },
                        "description": "Delete qos"
                    },
                    "default": {
                        "description": "Unable to delete QOS",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "qos_name",
                        "in": "path",
                        "description": "Slurm QOS Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "deprecated": true,
                "summary": "Get QOS info",
                "operationId": "slurmdb_v0039_get_single_qos",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_qos_info"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_qos_info"
                                }
                            }
                        },
                        "description": "QOS information"
                    },
                    "default": {
                        "description": "QOS not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "qos_name",
                        "in": "path",
                        "description": "Slurm QOS Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted QOSs. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    }
                ]
            }
        },
        "/slurmdb/v0.0.39/qos": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_get_qos",
                "parameters": [
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted QOSs. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_qos_info"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_qos_info"
                                }
                            }
                        },
                        "description": "List of QOS'"
                    },
                    "default": {
                        "description": "QOS not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "summary": "Get QOS list"
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_update_qos",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        },
                        "description": "QOS update response"
                    },
                    "default": {
                        "description": "Unable to update QOSs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "description": "Add or update QOSs",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbv0.0.39_update_qos"
                            }
                        },
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/dbv0.0.39_update_qos"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": true,
                "summary": "Set QOS info"
            }
        },
        "/slurmdb/v0.0.39/associations": {
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_update_associations",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        },
                        "description": "status of associations update"
                    },
                    "default": {
                        "description": "Unable to update associations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "summary": "Set associations info",
                "requestBody": {
                    "description": "Add or update associations",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbv0.0.39_associations_info"
                            }
                        },
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/dbv0.0.39_associations_info"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_get_associations",
                "parameters": [
                    {
                        "name": "cluster",
                        "in": "query",
                        "description": "Cluster name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account",
                        "in": "query",
                        "description": "Account name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partition",
                        "in": "query",
                        "description": "Partition Name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_associations_info"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_associations_info"
                                }
                            }
                        },
                        "description": "List of associations"
                    },
                    "default": {
                        "description": "Association not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "summary": "Get association list"
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_delete_associations",
                "parameters": [
                    {
                        "name": "cluster",
                        "in": "query",
                        "description": "Cluster name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account",
                        "in": "query",
                        "description": "Account name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partition",
                        "in": "query",
                        "description": "Partition Name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_response_associations_delete"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_response_associations_delete"
                                }
                            }
                        },
                        "description": "Delete associations"
                    },
                    "default": {
                        "description": "Associations not found or unable to delete association",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "summary": "Delete associations"
            }
        },
        "/slurmdb/v0.0.39/association": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_get_association",
                "parameters": [
                    {
                        "name": "cluster",
                        "in": "query",
                        "description": "Cluster name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account",
                        "in": "query",
                        "description": "Account name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partition",
                        "in": "query",
                        "description": "Partition Name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_associations_info"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_associations_info"
                                }
                            }
                        },
                        "description": "List of associations"
                    },
                    "default": {
                        "description": "Association not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "summary": "Get association info"
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_delete_association",
                "parameters": [
                    {
                        "name": "cluster",
                        "in": "query",
                        "description": "Cluster name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account",
                        "in": "query",
                        "description": "Account name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "partition",
                        "in": "query",
                        "description": "Partition Name",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_response_associations_delete"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_response_associations_delete"
                                }
                            }
                        },
                        "description": "Delete associations"
                    },
                    "default": {
                        "description": "Association not found or unable to delete association",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "summary": "Delete association"
            }
        },
        "/slurmdb/v0.0.39/user/{user_name}": {
            "delete": {
                "tags": [
                    "slurm"
                ],
                "deprecated": true,
                "summary": "Delete user",
                "operationId": "slurmdb_v0039_delete_user",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        },
                        "description": "User deleted"
                    },
                    "default": {
                        "description": "User not found or unable to delete user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_name",
                        "in": "path",
                        "description": "Slurm User Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "deprecated": true,
                "summary": "Get user info",
                "operationId": "slurmdb_v0039_get_user",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_user_info"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_user_info"
                                }
                            }
                        },
                        "description": "List of users"
                    },
                    "default": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_name",
                        "in": "path",
                        "description": "Slurm User Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted users. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    }
                ]
            }
        },
        "/slurmdb/v0.0.39/users": {
            "post": {
                "tags": [
                    "slurm"
                ],
                "deprecated": true,
                "summary": "Update user",
                "operationId": "slurmdb_v0039_update_users",
                "requestBody": {
                    "description": "add or update user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbv0.0.39_update_users"
                            }
                        },
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/dbv0.0.39_update_users"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        },
                        "description": "Update users"
                    },
                    "default": {
                        "description": "User not found or not able to update user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "deprecated": true,
                "summary": "Get user list",
                "operationId": "slurmdb_v0039_get_users",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_user_info"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_user_info"
                                }
                            }
                        },
                        "description": "List of users"
                    },
                    "default": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted users. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    }
                ]
            }
        },
        "/slurmdb/v0.0.39/cluster/{cluster_name}": {
            "delete": {
                "tags": [
                    "slurm"
                ],
                "deprecated": true,
                "summary": "Delete cluster",
                "operationId": "slurmdb_v0039_delete_cluster",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        },
                        "description": "Delete cluster"
                    },
                    "default": {
                        "description": "Cluster not found or unable to delete cluster",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "cluster_name",
                        "in": "path",
                        "description": "Slurm cluster name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "deprecated": true,
                "summary": "Get cluster info",
                "operationId": "slurmdb_v0039_get_cluster",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_clusters_info"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_clusters_info"
                                }
                            }
                        },
                        "description": "Cluster information"
                    },
                    "default": {
                        "description": "Cluster not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "cluster_name",
                        "in": "path",
                        "description": "Slurm cluster name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/slurmdb/v0.0.39/clusters": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_get_clusters",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_clusters_info"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_clusters_info"
                                }
                            }
                        },
                        "description": "List of clusters"
                    },
                    "default": {
                        "description": "Cluster not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "summary": "Get cluster list"
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_add_clusters",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        },
                        "description": "List of clusters"
                    },
                    "default": {
                        "description": "Unable to add cluster",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "summary": "Add clusters",
                "requestBody": {
                    "description": "Add or update clusters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbv0.0.39_clusters_info"
                            }
                        },
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/dbv0.0.39_clusters_info"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/slurmdb/v0.0.39/wckey/{wckey}": {
            "delete": {
                "tags": [
                    "slurm"
                ],
                "deprecated": true,
                "summary": "Delete wckey",
                "operationId": "slurmdb_v0039_delete_wckey",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        },
                        "description": "Delete wckey"
                    },
                    "default": {
                        "description": "wckey not found or unable to delete wckey",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "wckey",
                        "in": "path",
                        "description": "Slurm wckey name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "deprecated": true,
                "summary": "Get wckey info",
                "operationId": "slurmdb_v0039_get_wckey",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_wckey_info"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_wckey_info"
                                }
                            }
                        },
                        "description": "List of wckey"
                    },
                    "default": {
                        "description": "wckey not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "wckey",
                        "in": "path",
                        "description": "Slurm wckey name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/slurmdb/v0.0.39/wckeys": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_get_wckeys",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_wckey_info"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_wckey_info"
                                }
                            }
                        },
                        "description": "List of wckeys"
                    },
                    "default": {
                        "description": "wckey not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "summary": "Get wckey list"
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_add_wckeys",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        },
                        "description": "List of wckeys"
                    },
                    "default": {
                        "description": "Unable to add wckey",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "summary": "Add wckeys",
                "requestBody": {
                    "description": "add wckeys",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbv0.0.39_wckey_info"
                            }
                        },
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/dbv0.0.39_wckey_info"
                            }
                        }
                    },
                    "required": false
                }
            }
        },
        "/slurmdb/v0.0.39/account/{account_name}": {
            "delete": {
                "tags": [
                    "slurm"
                ],
                "deprecated": true,
                "summary": "Delete account",
                "operationId": "slurmdb_v0039_delete_account",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        },
                        "description": "Delete account"
                    },
                    "default": {
                        "description": "Unable to delete account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "account_name",
                        "in": "path",
                        "description": "Slurm Account Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "get": {
                "tags": [
                    "slurm"
                ],
                "deprecated": true,
                "summary": "Get account info",
                "operationId": "slurmdb_v0039_get_account",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_account_info"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_account_info"
                                }
                            }
                        },
                        "description": "List of accounts"
                    },
                    "default": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "account_name",
                        "in": "path",
                        "description": "Slurm Account Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted accounts. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    }
                ]
            }
        },
        "/slurmdb/v0.0.39/accounts": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_get_accounts",
                "parameters": [
                    {
                        "name": "with_deleted",
                        "in": "query",
                        "description": "Include deleted accounts. False by default.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_account_info"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_account_info"
                                }
                            }
                        },
                        "description": "List of accounts"
                    },
                    "default": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "summary": "Get account list"
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_update_accounts",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        },
                        "description": "Add/update list of accounts"
                    },
                    "default": {
                        "description": "Unable to add or update accounts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "summary": "Update accounts",
                "requestBody": {
                    "description": "update/create accounts",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbv0.0.39_account_info"
                            }
                        },
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/dbv0.0.39_account_info"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/slurmdb/v0.0.39/jobs": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_get_jobs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "users",
                        "description": "Filter by comma delimited list of user names",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "submit_time",
                        "description": "Filter by submission time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM/DD[/YY] or MM.DD[.YY]\r\nMM/DD[/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "start_time",
                        "description": "Filter by start time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM/DD[/YY] or MM.DD[.YY]\r\nMM/DD[/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "end_time",
                        "description": "Filter by end time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM/DD[/YY] or MM.DD[.YY]\r\nMM/DD[/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "account",
                        "description": "Comma delimited list of accounts to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "association",
                        "description": "Comma delimited list of associations to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cluster",
                        "description": "Comma delimited list of cluster to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "constraints",
                        "description": "Comma delimited list of constraints to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cpus_max",
                        "description": "Number of CPUs high range",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cpus_min",
                        "description": "Number of CPUs low range",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip_steps",
                        "description": "Report job step information",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    },
                    {
                        "in": "query",
                        "name": "disable_wait_for_result",
                        "description": "Disable waiting for result from slurmdbd",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        }
                    },
                    {
                        "in": "query",
                        "name": "exit_code",
                        "description": "Exit code of job",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "Comma delimited list of formats to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "group",
                        "description": "Comma delimited list of groups to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "job_name",
                        "description": "Comma delimited list of job names to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "nodes_max",
                        "description": "Number of nodes high range",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "nodes_min",
                        "description": "Number of nodes low range",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "partition",
                        "description": "Comma delimited list of partitions to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "qos",
                        "description": "Comma delimited list of QOS to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reason",
                        "description": "Comma delimited list of job reasons to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reservation",
                        "description": "Comma delimited list of reservations to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "description": "Comma delimited list of states to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "step",
                        "description": "Comma delimited list of job steps to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "node",
                        "description": "Comma delimited list of used nodes to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "wckey",
                        "description": "Comma delimited list of wckeys to match",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_job_info"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_job_info"
                                }
                            }
                        },
                        "description": "List of jobs"
                    },
                    "default": {
                        "description": "Unable to query jobs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "summary": "Get job list"
            }
        },
        "/slurmdb/v0.0.39/diag": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurmdb_v0039_diag",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_diag"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbv0.0.39_diag"
                                }
                            }
                        },
                        "description": "Dictionary of statistics"
                    },
                    "default": {
                        "description": "Unable to query diagnostics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "summary": "Get slurmdb diagnostics"
            }
        },
        "/slurm/v0.0.39/diag": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_diag",
                "deprecated": true,
                "summary": "get diagnostics",
                "responses": {
                    "200": {
                        "description": "diagnostic results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_diag"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_diag"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unable to request ping test",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/slurm/v0.0.39/licenses": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_slurmctld_get_licenses",
                "deprecated": true,
                "summary": "get all Slurm tracked license info",
                "responses": {
                    "200": {
                        "description": "results of get all licenses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_licenses_info"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_licenses_info"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unable to request licenses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/slurm/v0.0.39/ping": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_ping",
                "deprecated": true,
                "summary": "ping test",
                "responses": {
                    "200": {
                        "description": "results of ping test",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_pings"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_pings"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unable to request ping test",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/slurm/v0.0.39/jobs": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_get_jobs",
                "deprecated": true,
                "summary": "get list of jobs",
                "parameters": [
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "job(s) information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_jobs_response"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_jobs_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "job not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/slurm/v0.0.39/job/{job_id}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_get_job",
                "deprecated": true,
                "summary": "get job info",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "Slurm JobID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "job(s) information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_jobs_response"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_jobs_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "job matching JobId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_update_job",
                "deprecated": true,
                "summary": "update job",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "Slurm Job ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "update job",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.39_job_desc_msg"
                            }
                        },
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.39_job_desc_msg"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "job updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_job_update_response"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_job_update_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "job update failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_cancel_job",
                "deprecated": true,
                "summary": "cancel or signal job",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "Slurm Job ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "signal",
                        "in": "query",
                        "description": "signal to send to job",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "description": "POSIX signal name",
                            "enum": [
                                "HUP",
                                "INT",
                                "QUIT",
                                "ABRT",
                                "KILL",
                                "ALRM",
                                "TERM",
                                "USR1",
                                "USR2",
                                "URG",
                                "CONT",
                                "STOP",
                                "TSTP",
                                "TTIN",
                                "TTOU"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "job cancelled or sent signal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Job cancel request failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/slurm/v0.0.39/job/submit": {
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_submit_job",
                "deprecated": true,
                "summary": "submit new job",
                "requestBody": {
                    "description": "submit new job",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.39_job_submission"
                            }
                        },
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.39_job_submission"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "job submitted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_job_submission_response"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_job_submission_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "job rejected",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/slurm/v0.0.39/nodes": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_get_nodes",
                "deprecated": true,
                "summary": "get all node info",
                "parameters": [
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "node information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_nodes_response"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_nodes_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no nodes in cluster",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/slurm/v0.0.39/node/{node_name}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_get_node",
                "deprecated": true,
                "summary": "get node info",
                "parameters": [
                    {
                        "name": "node_name",
                        "in": "path",
                        "description": "Slurm Node Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "node information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_nodes_response"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_nodes_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "node not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_update_node",
                "deprecated": true,
                "summary": "update node properties",
                "parameters": [
                    {
                        "name": "node_name",
                        "in": "path",
                        "description": "Slurm Node Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "update node",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.39_update_node_msg"
                            }
                        },
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/v0.0.39_update_node_msg"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "node information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "node update failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_delete_node",
                "deprecated": true,
                "summary": "delete node",
                "parameters": [
                    {
                        "name": "node_name",
                        "in": "path",
                        "description": "Slurm Node Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "node deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "node delete request failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/slurm/v0.0.39/partitions": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_get_partitions",
                "deprecated": true,
                "summary": "get all partition info",
                "parameters": [
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "partition information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_partitions_response"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_partitions_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no partitions found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/slurm/v0.0.39/partition/{partition_name}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_get_partition",
                "deprecated": true,
                "summary": "get partition info",
                "parameters": [
                    {
                        "name": "partition_name",
                        "in": "path",
                        "description": "Slurm Partition Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if there were no partition changes (not limited to partition in URL endpoint) since update_time.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "partition information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_partitions_response"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_partitions_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no partitions found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/slurm/v0.0.39/reservations": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_get_reservations",
                "deprecated": true,
                "summary": "get all reservation info",
                "parameters": [
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "reservation information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_reservations_response"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_reservations_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no reservations found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/slurm/v0.0.39/reservation/{reservation_name}": {
            "get": {
                "tags": [
                    "slurm"
                ],
                "operationId": "slurm_v0039_get_reservation",
                "deprecated": true,
                "summary": "get reservation info",
                "parameters": [
                    {
                        "name": "reservation_name",
                        "in": "path",
                        "description": "Slurm Reservation Name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "update_time",
                        "in": "query",
                        "description": "Filter if no reservation (not limited to reservation in URL) changed since update_time.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "reservation information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_reservations_response"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0.0.39_reservations_response"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "no reservations found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            },
                            "application/x-yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "v0.0.41_openapi_slurmdbd_jobs_resp": {
                "type": "object",
                "properties": {
                    "jobs": {
                        "type": "array",
                        "description": "jobs",
                        "items": {
                            "type": "object",
                            "properties": {
                                "account": {
                                    "type": "string"
                                },
                                "comment": {
                                    "type": "object",
                                    "properties": {
                                        "administrator": {
                                            "type": "string"
                                        },
                                        "job": {
                                            "type": "string"
                                        },
                                        "system": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "allocation_nodes": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "array": {
                                    "type": "object",
                                    "properties": {
                                        "job_id": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "limits": {
                                            "type": "object",
                                            "properties": {
                                                "max": {
                                                    "type": "object",
                                                    "properties": {
                                                        "running": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tasks": {
                                                                    "type": "integer",
                                                                    "format": "int32"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "task_id": {
                                            "type": "object",
                                            "description": "32 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "task": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "association": {
                                    "type": "object",
                                    "properties": {
                                        "account": {
                                            "type": "string",
                                            "description": "Association account (if assigned)"
                                        },
                                        "cluster": {
                                            "type": "string",
                                            "description": "Association cluster (if assigned)"
                                        },
                                        "partition": {
                                            "type": "string",
                                            "description": "Association partition (if assigned)"
                                        },
                                        "user": {
                                            "type": "string",
                                            "description": "Assocation user (if assigned)"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Numeric Association ID (if known)"
                                        }
                                    },
                                    "required": [
                                        "user"
                                    ]
                                },
                                "block": {
                                    "type": "string"
                                },
                                "cluster": {
                                    "type": "string"
                                },
                                "constraints": {
                                    "type": "string"
                                },
                                "container": {
                                    "type": "string"
                                },
                                "derived_exit_code": {
                                    "type": "object",
                                    "description": "return code returned by process",
                                    "properties": {
                                        "status": {
                                            "type": "array",
                                            "description": "Status given by return code",
                                            "items": {
                                                "enum": [
                                                    "INVALID",
                                                    "PENDING",
                                                    "SUCCESS",
                                                    "ERROR",
                                                    "SIGNALED",
                                                    "CORE_DUMPED"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "return_code": {
                                            "type": "object",
                                            "description": "Process return code (numeric)",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "signal": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "object",
                                                    "description": "Signal sent to process (numeric)",
                                                    "properties": {
                                                        "set": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set. False if number is unset"
                                                        },
                                                        "infinite": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                        },
                                                        "number": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                        }
                                                    },
                                                    "required": []
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "description": "Signal sent to process"
                                                }
                                            }
                                        }
                                    },
                                    "required": []
                                },
                                "time": {
                                    "type": "object",
                                    "properties": {
                                        "elapsed": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "eligible": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "end": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "planned": {
                                            "type": "object",
                                            "description": "Time in seconds required to start job after becoming eligible to run",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "start": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "submission": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "suspended": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "system": {
                                            "type": "object",
                                            "properties": {
                                                "seconds": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "microseconds": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                }
                                            }
                                        },
                                        "limit": {
                                            "type": "object",
                                            "description": "32 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "total": {
                                            "type": "object",
                                            "properties": {
                                                "seconds": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "microseconds": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                }
                                            }
                                        },
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "seconds": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "microseconds": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                }
                                            }
                                        }
                                    }
                                },
                                "exit_code": {
                                    "type": "object",
                                    "description": "return code returned by process",
                                    "properties": {
                                        "status": {
                                            "type": "array",
                                            "description": "Status given by return code",
                                            "items": {
                                                "enum": [
                                                    "INVALID",
                                                    "PENDING",
                                                    "SUCCESS",
                                                    "ERROR",
                                                    "SIGNALED",
                                                    "CORE_DUMPED"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "return_code": {
                                            "type": "object",
                                            "description": "Process return code (numeric)",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "signal": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "object",
                                                    "description": "Signal sent to process (numeric)",
                                                    "properties": {
                                                        "set": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set. False if number is unset"
                                                        },
                                                        "infinite": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                        },
                                                        "number": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                        }
                                                    },
                                                    "required": []
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "description": "Signal sent to process"
                                                }
                                            }
                                        }
                                    },
                                    "required": []
                                },
                                "extra": {
                                    "type": "string"
                                },
                                "failed_node": {
                                    "type": "string"
                                },
                                "flags": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "NONE",
                                            "CLEAR_SCHEDULING",
                                            "NOT_SET",
                                            "STARTED_ON_SUBMIT",
                                            "STARTED_ON_SCHEDULE",
                                            "STARTED_ON_BACKFILL",
                                            "START_RECEIVED"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "group": {
                                    "type": "string"
                                },
                                "het": {
                                    "type": "object",
                                    "properties": {
                                        "job_id": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "job_offset": {
                                            "type": "object",
                                            "description": "32 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        }
                                    }
                                },
                                "job_id": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "licenses": {
                                    "type": "string"
                                },
                                "mcs": {
                                    "type": "object",
                                    "properties": {
                                        "label": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "nodes": {
                                    "type": "string"
                                },
                                "partition": {
                                    "type": "string"
                                },
                                "hold": {
                                    "type": "boolean",
                                    "description": "Hold (true) or release (false) job"
                                },
                                "priority": {
                                    "type": "object",
                                    "description": "Request specific job priority",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "qos": {
                                    "type": "string"
                                },
                                "required": {
                                    "type": "object",
                                    "properties": {
                                        "CPUs": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "memory_per_cpu": {
                                            "type": "object",
                                            "description": "64 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "memory_per_node": {
                                            "type": "object",
                                            "description": "64 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        }
                                    }
                                },
                                "kill_request_user": {
                                    "type": "string"
                                },
                                "reservation": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "script": {
                                    "type": "string"
                                },
                                "stdin_expanded": {
                                    "type": "string",
                                    "description": "Job stdin with expanded fields"
                                },
                                "stdout_expanded": {
                                    "type": "string",
                                    "description": "Job stdout with expanded fields"
                                },
                                "stderr_expanded": {
                                    "type": "string",
                                    "description": "Job stderr with expanded fields"
                                },
                                "stdout": {
                                    "type": "string"
                                },
                                "stderr": {
                                    "type": "string"
                                },
                                "stdin": {
                                    "type": "string"
                                },
                                "state": {
                                    "type": "object",
                                    "properties": {
                                        "current": {
                                            "type": "array",
                                            "items": {
                                                "enum": [
                                                    "PENDING",
                                                    "RUNNING",
                                                    "SUSPENDED",
                                                    "COMPLETED",
                                                    "CANCELLED",
                                                    "FAILED",
                                                    "TIMEOUT",
                                                    "NODE_FAIL",
                                                    "PREEMPTED",
                                                    "BOOT_FAIL",
                                                    "DEADLINE",
                                                    "OUT_OF_MEMORY",
                                                    "LAUNCH_FAILED",
                                                    "UPDATE_DB",
                                                    "REQUEUED",
                                                    "REQUEUE_HOLD",
                                                    "SPECIAL_EXIT",
                                                    "RESIZING",
                                                    "CONFIGURING",
                                                    "COMPLETING",
                                                    "STOPPED",
                                                    "RECONFIG_FAIL",
                                                    "POWER_UP_NODE",
                                                    "REVOKED",
                                                    "REQUEUE_FED",
                                                    "RESV_DEL_HOLD",
                                                    "SIGNALING",
                                                    "STAGE_OUT"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "reason": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "steps": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "time": {
                                                "type": "object",
                                                "properties": {
                                                    "elapsed": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "end": {
                                                        "type": "object",
                                                        "description": "64 bit integer number with flags",
                                                        "properties": {
                                                            "set": {
                                                                "type": "boolean",
                                                                "description": "True if number has been set. False if number is unset"
                                                            },
                                                            "infinite": {
                                                                "type": "boolean",
                                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                            },
                                                            "number": {
                                                                "type": "integer",
                                                                "format": "int64",
                                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                            }
                                                        },
                                                        "required": []
                                                    },
                                                    "start": {
                                                        "type": "object",
                                                        "description": "64 bit integer number with flags",
                                                        "properties": {
                                                            "set": {
                                                                "type": "boolean",
                                                                "description": "True if number has been set. False if number is unset"
                                                            },
                                                            "infinite": {
                                                                "type": "boolean",
                                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                            },
                                                            "number": {
                                                                "type": "integer",
                                                                "format": "int64",
                                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                            }
                                                        },
                                                        "required": []
                                                    },
                                                    "suspended": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "system": {
                                                        "type": "object",
                                                        "properties": {
                                                            "seconds": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                            },
                                                            "microseconds": {
                                                                "type": "integer",
                                                                "format": "int32"
                                                            }
                                                        }
                                                    },
                                                    "total": {
                                                        "type": "object",
                                                        "properties": {
                                                            "seconds": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                            },
                                                            "microseconds": {
                                                                "type": "integer",
                                                                "format": "int32"
                                                            }
                                                        }
                                                    },
                                                    "user": {
                                                        "type": "object",
                                                        "properties": {
                                                            "seconds": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                            },
                                                            "microseconds": {
                                                                "type": "integer",
                                                                "format": "int32"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "exit_code": {
                                                "type": "object",
                                                "description": "return code returned by process",
                                                "properties": {
                                                    "status": {
                                                        "type": "array",
                                                        "description": "Status given by return code",
                                                        "items": {
                                                            "enum": [
                                                                "INVALID",
                                                                "PENDING",
                                                                "SUCCESS",
                                                                "ERROR",
                                                                "SIGNALED",
                                                                "CORE_DUMPED"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "return_code": {
                                                        "type": "object",
                                                        "description": "Process return code (numeric)",
                                                        "properties": {
                                                            "set": {
                                                                "type": "boolean",
                                                                "description": "True if number has been set. False if number is unset"
                                                            },
                                                            "infinite": {
                                                                "type": "boolean",
                                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                            },
                                                            "number": {
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                            }
                                                        },
                                                        "required": []
                                                    },
                                                    "signal": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "object",
                                                                "description": "Signal sent to process (numeric)",
                                                                "properties": {
                                                                    "set": {
                                                                        "type": "boolean",
                                                                        "description": "True if number has been set. False if number is unset"
                                                                    },
                                                                    "infinite": {
                                                                        "type": "boolean",
                                                                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                    },
                                                                    "number": {
                                                                        "type": "integer",
                                                                        "format": "int32",
                                                                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                    }
                                                                },
                                                                "required": []
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "description": "Signal sent to process"
                                                            }
                                                        }
                                                    }
                                                },
                                                "required": []
                                            },
                                            "nodes": {
                                                "type": "object",
                                                "properties": {
                                                    "count": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "range": {
                                                        "type": "string"
                                                    },
                                                    "list": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "tasks": {
                                                "type": "object",
                                                "properties": {
                                                    "count": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    }
                                                }
                                            },
                                            "pid": {
                                                "type": "string"
                                            },
                                            "CPU": {
                                                "type": "object",
                                                "properties": {
                                                    "requested_frequency": {
                                                        "type": "object",
                                                        "properties": {
                                                            "min": {
                                                                "type": "object",
                                                                "description": "32 bit integer number with flags",
                                                                "properties": {
                                                                    "set": {
                                                                        "type": "boolean",
                                                                        "description": "True if number has been set. False if number is unset"
                                                                    },
                                                                    "infinite": {
                                                                        "type": "boolean",
                                                                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                    },
                                                                    "number": {
                                                                        "type": "integer",
                                                                        "format": "int32",
                                                                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                    }
                                                                },
                                                                "required": []
                                                            },
                                                            "max": {
                                                                "type": "object",
                                                                "description": "32 bit integer number with flags",
                                                                "properties": {
                                                                    "set": {
                                                                        "type": "boolean",
                                                                        "description": "True if number has been set. False if number is unset"
                                                                    },
                                                                    "infinite": {
                                                                        "type": "boolean",
                                                                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                    },
                                                                    "number": {
                                                                        "type": "integer",
                                                                        "format": "int32",
                                                                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                    }
                                                                },
                                                                "required": []
                                                            }
                                                        }
                                                    },
                                                    "governor": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "kill_request_user": {
                                                "type": "string"
                                            },
                                            "state": {
                                                "type": "array",
                                                "items": {
                                                    "enum": [
                                                        "PENDING",
                                                        "RUNNING",
                                                        "SUSPENDED",
                                                        "COMPLETED",
                                                        "CANCELLED",
                                                        "FAILED",
                                                        "TIMEOUT",
                                                        "NODE_FAIL",
                                                        "PREEMPTED",
                                                        "BOOT_FAIL",
                                                        "DEADLINE",
                                                        "OUT_OF_MEMORY",
                                                        "LAUNCH_FAILED",
                                                        "UPDATE_DB",
                                                        "REQUEUED",
                                                        "REQUEUE_HOLD",
                                                        "SPECIAL_EXIT",
                                                        "RESIZING",
                                                        "CONFIGURING",
                                                        "COMPLETING",
                                                        "STOPPED",
                                                        "RECONFIG_FAIL",
                                                        "POWER_UP_NODE",
                                                        "REVOKED",
                                                        "REQUEUE_FED",
                                                        "RESV_DEL_HOLD",
                                                        "SIGNALING",
                                                        "STAGE_OUT"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "statistics": {
                                                "type": "object",
                                                "properties": {
                                                    "CPU": {
                                                        "type": "object",
                                                        "properties": {
                                                            "actual_frequency": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                            }
                                                        }
                                                    },
                                                    "energy": {
                                                        "type": "object",
                                                        "properties": {
                                                            "consumed": {
                                                                "type": "object",
                                                                "description": "64 bit integer number with flags",
                                                                "properties": {
                                                                    "set": {
                                                                        "type": "boolean",
                                                                        "description": "True if number has been set. False if number is unset"
                                                                    },
                                                                    "infinite": {
                                                                        "type": "boolean",
                                                                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                    },
                                                                    "number": {
                                                                        "type": "integer",
                                                                        "format": "int64",
                                                                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                    }
                                                                },
                                                                "required": []
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "step": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "description": "Slurm Job StepId"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "task": {
                                                "type": "object",
                                                "properties": {
                                                    "distribution": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "tres": {
                                                "type": "object",
                                                "properties": {
                                                    "requested": {
                                                        "type": "object",
                                                        "properties": {
                                                            "max": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "format": "int32"
                                                                        },
                                                                        "count": {
                                                                            "type": "integer",
                                                                            "format": "int64"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "type"
                                                                    ]
                                                                }
                                                            },
                                                            "min": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "format": "int32"
                                                                        },
                                                                        "count": {
                                                                            "type": "integer",
                                                                            "format": "int64"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "type"
                                                                    ]
                                                                }
                                                            },
                                                            "average": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "format": "int32"
                                                                        },
                                                                        "count": {
                                                                            "type": "integer",
                                                                            "format": "int64"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "type"
                                                                    ]
                                                                }
                                                            },
                                                            "total": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "format": "int32"
                                                                        },
                                                                        "count": {
                                                                            "type": "integer",
                                                                            "format": "int64"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "type"
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "consumed": {
                                                        "type": "object",
                                                        "properties": {
                                                            "max": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "format": "int32"
                                                                        },
                                                                        "count": {
                                                                            "type": "integer",
                                                                            "format": "int64"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "type"
                                                                    ]
                                                                }
                                                            },
                                                            "min": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "format": "int32"
                                                                        },
                                                                        "count": {
                                                                            "type": "integer",
                                                                            "format": "int64"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "type"
                                                                    ]
                                                                }
                                                            },
                                                            "average": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "format": "int32"
                                                                        },
                                                                        "count": {
                                                                            "type": "integer",
                                                                            "format": "int64"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "type"
                                                                    ]
                                                                }
                                                            },
                                                            "total": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "format": "int32"
                                                                        },
                                                                        "count": {
                                                                            "type": "integer",
                                                                            "format": "int64"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "type"
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "allocated": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "id": {
                                                                    "type": "integer",
                                                                    "format": "int32"
                                                                },
                                                                "count": {
                                                                    "type": "integer",
                                                                    "format": "int64"
                                                                }
                                                            },
                                                            "required": [
                                                                "type"
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "required": []
                                    }
                                },
                                "submit_line": {
                                    "type": "string"
                                },
                                "tres": {
                                    "type": "object",
                                    "properties": {
                                        "allocated": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "count": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ]
                                            }
                                        },
                                        "requested": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "count": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ]
                                            }
                                        }
                                    }
                                },
                                "used_gres": {
                                    "type": "string"
                                },
                                "user": {
                                    "type": "string"
                                },
                                "wckey": {
                                    "type": "object",
                                    "description": "WCKey ID with tagging",
                                    "properties": {
                                        "wckey": {
                                            "type": "string",
                                            "description": "WCKey name"
                                        },
                                        "flags": {
                                            "type": "array",
                                            "description": "Active flags",
                                            "items": {
                                                "enum": [
                                                    "ASSIGNED_DEFAULT"
                                                ],
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": [
                                        "wckey",
                                        "flags"
                                    ]
                                },
                                "working_directory": {
                                    "type": "string"
                                }
                            },
                            "required": []
                        }
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "jobs"
                ]
            },
            "v0.0.40_openapi_slurmdbd_jobs_resp": {
                "type": "object",
                "properties": {
                    "jobs": {
                        "$ref": "#/components/schemas/v0.0.40_job_list",
                        "description": "jobs"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "jobs"
                ]
            },
            "v0.0.40_job_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_job"
                }
            },
            "v0.0.40_job": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "object",
                        "properties": {
                            "administrator": {
                                "type": "string"
                            },
                            "job": {
                                "type": "string"
                            },
                            "system": {
                                "type": "string"
                            }
                        }
                    },
                    "allocation_nodes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "array": {
                        "type": "object",
                        "properties": {
                            "job_id": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "limits": {
                                "type": "object",
                                "properties": {
                                    "max": {
                                        "type": "object",
                                        "properties": {
                                            "running": {
                                                "type": "object",
                                                "properties": {
                                                    "tasks": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "task_id": {
                                "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                            },
                            "task": {
                                "type": "string"
                            }
                        }
                    },
                    "association": {
                        "$ref": "#/components/schemas/v0.0.40_assoc_short"
                    },
                    "block": {
                        "type": "string"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "constraints": {
                        "type": "string"
                    },
                    "container": {
                        "type": "string"
                    },
                    "derived_exit_code": {
                        "$ref": "#/components/schemas/v0.0.40_process_exit_code_verbose",
                        "description": "return code returned by process"
                    },
                    "time": {
                        "type": "object",
                        "properties": {
                            "elapsed": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "eligible": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "end": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "start": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "submission": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "suspended": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "system": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                }
                            },
                            "limit": {
                                "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                            },
                            "total": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                }
                            },
                            "user": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                }
                            }
                        }
                    },
                    "exit_code": {
                        "$ref": "#/components/schemas/v0.0.40_process_exit_code_verbose",
                        "description": "return code returned by process"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "failed_node": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "NONE",
                                "CLEAR_SCHEDULING",
                                "NOT_SET",
                                "STARTED_ON_SUBMIT",
                                "STARTED_ON_SCHEDULE",
                                "STARTED_ON_BACKFILL",
                                "START_RECEIVED"
                            ],
                            "type": "string"
                        }
                    },
                    "group": {
                        "type": "string"
                    },
                    "het": {
                        "type": "object",
                        "properties": {
                            "job_id": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "job_offset": {
                                "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                            }
                        }
                    },
                    "job_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "licenses": {
                        "type": "string"
                    },
                    "mcs": {
                        "type": "object",
                        "properties": {
                            "label": {
                                "type": "string"
                            }
                        }
                    },
                    "nodes": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "hold": {
                        "type": "boolean",
                        "description": "Job held"
                    },
                    "priority": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val",
                        "description": "Request specific job priority"
                    },
                    "qos": {
                        "type": "string"
                    },
                    "required": {
                        "type": "object",
                        "properties": {
                            "CPUs": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "memory_per_cpu": {
                                "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                            },
                            "memory_per_node": {
                                "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                            }
                        }
                    },
                    "kill_request_user": {
                        "type": "string"
                    },
                    "reservation": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    },
                    "script": {
                        "type": "string"
                    },
                    "state": {
                        "type": "object",
                        "properties": {
                            "current": {
                                "type": "array",
                                "items": {
                                    "enum": [
                                        "PENDING",
                                        "RUNNING",
                                        "SUSPENDED",
                                        "COMPLETED",
                                        "CANCELLED",
                                        "FAILED",
                                        "TIMEOUT",
                                        "NODE_FAIL",
                                        "PREEMPTED",
                                        "BOOT_FAIL",
                                        "DEADLINE",
                                        "OUT_OF_MEMORY",
                                        "LAUNCH_FAILED",
                                        "UPDATE_DB",
                                        "REQUEUED",
                                        "REQUEUE_HOLD",
                                        "SPECIAL_EXIT",
                                        "RESIZING",
                                        "CONFIGURING",
                                        "COMPLETING",
                                        "STOPPED",
                                        "RECONFIG_FAIL",
                                        "POWER_UP_NODE",
                                        "REVOKED",
                                        "REQUEUE_FED",
                                        "RESV_DEL_HOLD",
                                        "SIGNALING",
                                        "STAGE_OUT"
                                    ],
                                    "type": "string"
                                }
                            },
                            "reason": {
                                "type": "string"
                            }
                        }
                    },
                    "steps": {
                        "$ref": "#/components/schemas/v0.0.40_step_list"
                    },
                    "submit_line": {
                        "type": "string"
                    },
                    "tres": {
                        "type": "object",
                        "properties": {
                            "allocated": {
                                "$ref": "#/components/schemas/v0.0.40_tres_list"
                            },
                            "requested": {
                                "$ref": "#/components/schemas/v0.0.40_tres_list"
                            }
                        }
                    },
                    "used_gres": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    },
                    "wckey": {
                        "$ref": "#/components/schemas/v0.0.40_wckey_tag_struct",
                        "description": "WCKey ID with tagging"
                    },
                    "working_directory": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.40_uint32_no_val": {
                "type": "object",
                "description": "Integer number with flags",
                "properties": {
                    "set": {
                        "type": "boolean",
                        "description": "True if number has been set. False if number is unset",
                        "default": false
                    },
                    "infinite": {
                        "type": "boolean",
                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
                        "default": 0
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64",
                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                    }
                }
            },
            "v0.0.40_assoc_short": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "description": "Association account (if assigned)"
                    },
                    "cluster": {
                        "type": "string",
                        "description": "Association cluster (if assigned)"
                    },
                    "partition": {
                        "type": "string",
                        "description": "Association partition (if assigned)"
                    },
                    "user": {
                        "type": "string",
                        "description": "Assocation user (if assigned)"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Numeric Association ID (if known)"
                    }
                },
                "required": [
                    "user"
                ]
            },
            "v0.0.40_process_exit_code_verbose": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "array",
                        "description": "Status given by return code",
                        "items": {
                            "enum": [
                                "INVALID",
                                "PENDING",
                                "SUCCESS",
                                "ERROR",
                                "SIGNALED",
                                "CORE_DUMPED"
                            ],
                            "type": "string"
                        }
                    },
                    "return_code": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val",
                        "description": "Process return code (numeric)"
                    },
                    "signal": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "$ref": "#/components/schemas/v0.0.40_uint16_no_val",
                                "description": "Signal sent to process (numeric)"
                            },
                            "name": {
                                "type": "string",
                                "description": "Signal sent to process"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.40_uint16_no_val": {
                "type": "object",
                "description": "Integer number with flags",
                "properties": {
                    "set": {
                        "type": "boolean",
                        "description": "True if number has been set. False if number is unset",
                        "default": false
                    },
                    "infinite": {
                        "type": "boolean",
                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
                        "default": 0
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64",
                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                    }
                }
            },
            "v0.0.40_uint64_no_val": {
                "type": "object",
                "description": "Integer number with flags",
                "properties": {
                    "set": {
                        "type": "boolean",
                        "description": "True if number has been set. False if number is unset",
                        "default": false
                    },
                    "infinite": {
                        "type": "boolean",
                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
                        "default": 0
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64",
                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                    }
                }
            },
            "v0.0.40_step_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_step"
                }
            },
            "v0.0.40_step": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "object",
                        "properties": {
                            "elapsed": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "end": {
                                "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                            },
                            "start": {
                                "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                            },
                            "suspended": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "system": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            },
                            "total": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            },
                            "user": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    },
                    "exit_code": {
                        "$ref": "#/components/schemas/v0.0.40_process_exit_code_verbose",
                        "description": "return code returned by process"
                    },
                    "nodes": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "range": {
                                "type": "string"
                            },
                            "list": {
                                "$ref": "#/components/schemas/v0.0.40_hostlist"
                            }
                        }
                    },
                    "tasks": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "pid": {
                        "type": "string"
                    },
                    "CPU": {
                        "type": "object",
                        "properties": {
                            "requested_frequency": {
                                "type": "object",
                                "properties": {
                                    "min": {
                                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                                    },
                                    "max": {
                                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                                    }
                                }
                            },
                            "governor": {
                                "type": "string"
                            }
                        }
                    },
                    "kill_request_user": {
                        "type": "string"
                    },
                    "state": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "PENDING",
                                "RUNNING",
                                "SUSPENDED",
                                "COMPLETED",
                                "CANCELLED",
                                "FAILED",
                                "TIMEOUT",
                                "NODE_FAIL",
                                "PREEMPTED",
                                "BOOT_FAIL",
                                "DEADLINE",
                                "OUT_OF_MEMORY",
                                "LAUNCH_FAILED",
                                "UPDATE_DB",
                                "REQUEUED",
                                "REQUEUE_HOLD",
                                "SPECIAL_EXIT",
                                "RESIZING",
                                "CONFIGURING",
                                "COMPLETING",
                                "STOPPED",
                                "RECONFIG_FAIL",
                                "POWER_UP_NODE",
                                "REVOKED",
                                "REQUEUE_FED",
                                "RESV_DEL_HOLD",
                                "SIGNALING",
                                "STAGE_OUT"
                            ],
                            "type": "string"
                        }
                    },
                    "statistics": {
                        "type": "object",
                        "properties": {
                            "CPU": {
                                "type": "object",
                                "properties": {
                                    "actual_frequency": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                }
                            },
                            "energy": {
                                "type": "object",
                                "properties": {
                                    "consumed": {
                                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                                    }
                                }
                            }
                        }
                    },
                    "step": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Slurm Job StepId"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    },
                    "task": {
                        "type": "object",
                        "properties": {
                            "distribution": {
                                "type": "string"
                            }
                        }
                    },
                    "tres": {
                        "type": "object",
                        "properties": {
                            "requested": {
                                "type": "object",
                                "properties": {
                                    "max": {
                                        "$ref": "#/components/schemas/v0.0.40_step_tres_req_max"
                                    },
                                    "min": {
                                        "$ref": "#/components/schemas/v0.0.40_step_tres_req_min"
                                    },
                                    "average": {
                                        "$ref": "#/components/schemas/v0.0.40_tres_list"
                                    },
                                    "total": {
                                        "$ref": "#/components/schemas/v0.0.40_tres_list"
                                    }
                                }
                            },
                            "consumed": {
                                "type": "object",
                                "properties": {
                                    "max": {
                                        "$ref": "#/components/schemas/v0.0.40_step_tres_usage_max"
                                    },
                                    "min": {
                                        "$ref": "#/components/schemas/v0.0.40_step_tres_usage_min"
                                    },
                                    "average": {
                                        "$ref": "#/components/schemas/v0.0.40_tres_list"
                                    },
                                    "total": {
                                        "$ref": "#/components/schemas/v0.0.40_tres_list"
                                    }
                                }
                            },
                            "allocated": {
                                "$ref": "#/components/schemas/v0.0.40_tres_list"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.40_hostlist": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.40_step_tres_req_max": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_tres"
                }
            },
            "v0.0.40_tres": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "v0.0.40_step_tres_req_min": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_tres"
                }
            },
            "v0.0.40_step_tres_usage_max": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_tres"
                }
            },
            "v0.0.40_step_tres_usage_min": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_tres"
                }
            },
            "v0.0.40_tres_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_tres"
                }
            },
            "v0.0.40_wckey_tag_struct": {
                "type": "object",
                "properties": {
                    "wckey": {
                        "type": "string",
                        "description": "WCKey name"
                    },
                    "flags": {
                        "type": "array",
                        "description": "Active flags",
                        "items": {
                            "enum": [
                                "ASSIGNED_DEFAULT"
                            ],
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "wckey",
                    "flags"
                ]
            },
            "v0.0.40_openapi_meta": {
                "type": "object",
                "properties": {
                    "plugin": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": "Slurm plugin type (if applicable)"
                            },
                            "name": {
                                "type": "string",
                                "description": "Slurm plugin name (if applicable)"
                            },
                            "data_parser": {
                                "type": "string",
                                "description": "Slurm data_parser plugin"
                            },
                            "accounting_storage": {
                                "type": "string",
                                "description": "Slurm accounting plugin"
                            }
                        }
                    },
                    "client": {
                        "type": "object",
                        "properties": {
                            "source": {
                                "type": "string",
                                "description": "Client source description"
                            },
                            "user": {
                                "type": "string",
                                "description": "Client user (if known)"
                            },
                            "group": {
                                "type": "string",
                                "description": "Client group (if known)"
                            }
                        }
                    },
                    "command": {
                        "$ref": "#/components/schemas/v0.0.40_string_array",
                        "description": "CLI command (if applicable)"
                    },
                    "slurm": {
                        "type": "object",
                        "properties": {
                            "version": {
                                "type": "object",
                                "properties": {
                                    "major": {
                                        "type": "string",
                                        "description": "Slurm release major version"
                                    },
                                    "micro": {
                                        "type": "string",
                                        "description": "Slurm release micro version"
                                    },
                                    "minor": {
                                        "type": "string",
                                        "description": "Slurm release minor version"
                                    }
                                }
                            },
                            "release": {
                                "type": "string",
                                "description": "Slurm release string"
                            },
                            "cluster": {
                                "type": "string",
                                "description": "Slurm cluster name"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.40_string_array": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.40_openapi_errors": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_openapi_error"
                }
            },
            "v0.0.40_openapi_error": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Long form error description"
                    },
                    "error_number": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Slurm numeric error identifier"
                    },
                    "error": {
                        "type": "string",
                        "description": "Short form error description"
                    },
                    "source": {
                        "type": "string",
                        "description": "Source of error or where error was first detected"
                    }
                },
                "required": []
            },
            "v0.0.40_openapi_warnings": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_openapi_warning"
                }
            },
            "v0.0.40_openapi_warning": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Long form warning description"
                    },
                    "source": {
                        "type": "string",
                        "description": "Source of warning or where warning was first detected"
                    }
                },
                "required": []
            },
            "v0.0.41_openapi_slurmdbd_config_resp": {
                "type": "object",
                "properties": {
                    "clusters": {
                        "type": "array",
                        "description": "clusters",
                        "items": {
                            "type": "object",
                            "properties": {
                                "controller": {
                                    "type": "object",
                                    "properties": {
                                        "host": {
                                            "type": "string"
                                        },
                                        "port": {
                                            "type": "integer",
                                            "format": "int32"
                                        }
                                    }
                                },
                                "flags": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "REGISTERING",
                                            "MULTIPLE_SLURMD",
                                            "FRONT_END",
                                            "FEDERATION",
                                            "EXTERNAL"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "name": {
                                    "type": "string"
                                },
                                "nodes": {
                                    "type": "string"
                                },
                                "select_plugin": {
                                    "type": "string",
                                    "deprecated": true
                                },
                                "associations": {
                                    "type": "object",
                                    "properties": {
                                        "root": {
                                            "type": "object",
                                            "properties": {
                                                "account": {
                                                    "type": "string",
                                                    "description": "Association account (if assigned)"
                                                },
                                                "cluster": {
                                                    "type": "string",
                                                    "description": "Association cluster (if assigned)"
                                                },
                                                "partition": {
                                                    "type": "string",
                                                    "description": "Association partition (if assigned)"
                                                },
                                                "user": {
                                                    "type": "string",
                                                    "description": "Assocation user (if assigned)"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "Numeric Association ID (if known)"
                                                }
                                            },
                                            "required": [
                                                "user"
                                            ]
                                        }
                                    }
                                },
                                "rpc_version": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "tres": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "count": {
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": []
                        }
                    },
                    "tres": {
                        "type": "array",
                        "description": "tres",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "count": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            },
                            "required": [
                                "type"
                            ]
                        }
                    },
                    "accounts": {
                        "type": "array",
                        "description": "accounts",
                        "items": {
                            "type": "object",
                            "properties": {
                                "associations": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "account": {
                                                "type": "string",
                                                "description": "Association account (if assigned)"
                                            },
                                            "cluster": {
                                                "type": "string",
                                                "description": "Association cluster (if assigned)"
                                            },
                                            "partition": {
                                                "type": "string",
                                                "description": "Association partition (if assigned)"
                                            },
                                            "user": {
                                                "type": "string",
                                                "description": "Assocation user (if assigned)"
                                            },
                                            "id": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "Numeric Association ID (if known)"
                                            }
                                        },
                                        "required": [
                                            "user"
                                        ]
                                    }
                                },
                                "coordinators": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "direct": {
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "name"
                                        ]
                                    }
                                },
                                "description": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "organization": {
                                    "type": "string"
                                },
                                "flags": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "DELETED",
                                            "WithAssociations",
                                            "WithCoordinators",
                                            "NoUsersAreCoords",
                                            "UsersAreCoords"
                                        ],
                                        "type": "string"
                                    }
                                }
                            },
                            "required": [
                                "description",
                                "name",
                                "organization"
                            ]
                        }
                    },
                    "users": {
                        "type": "array",
                        "description": "users",
                        "items": {
                            "type": "object",
                            "properties": {
                                "administrator_level": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "Not Set",
                                            "None",
                                            "Operator",
                                            "Administrator"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "associations": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "account": {
                                                "type": "string",
                                                "description": "Association account (if assigned)"
                                            },
                                            "cluster": {
                                                "type": "string",
                                                "description": "Association cluster (if assigned)"
                                            },
                                            "partition": {
                                                "type": "string",
                                                "description": "Association partition (if assigned)"
                                            },
                                            "user": {
                                                "type": "string",
                                                "description": "Assocation user (if assigned)"
                                            },
                                            "id": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "Numeric Association ID (if known)"
                                            }
                                        },
                                        "required": [
                                            "user"
                                        ]
                                    }
                                },
                                "coordinators": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "direct": {
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "name"
                                        ]
                                    }
                                },
                                "default": {
                                    "type": "object",
                                    "properties": {
                                        "account": {
                                            "type": "string"
                                        },
                                        "wckey": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "flags": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "NONE",
                                            "DELETED"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "name": {
                                    "type": "string"
                                },
                                "old_name": {
                                    "type": "string"
                                },
                                "wckeys": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "accounting": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "allocated": {
                                                            "type": "object",
                                                            "properties": {
                                                                "seconds": {
                                                                    "type": "integer",
                                                                    "format": "int64"
                                                                }
                                                            }
                                                        },
                                                        "id": {
                                                            "type": "integer",
                                                            "format": "int32"
                                                        },
                                                        "start": {
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "TRES": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "id": {
                                                                    "type": "integer",
                                                                    "format": "int32"
                                                                },
                                                                "count": {
                                                                    "type": "integer",
                                                                    "format": "int64"
                                                                }
                                                            },
                                                            "required": [
                                                                "type"
                                                            ]
                                                        }
                                                    },
                                                    "required": []
                                                }
                                            },
                                            "cluster": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "user": {
                                                "type": "string"
                                            },
                                            "flags": {
                                                "type": "array",
                                                "items": {
                                                    "enum": [
                                                        "DELETED"
                                                    ],
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "required": [
                                            "cluster",
                                            "name",
                                            "user"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "name"
                            ]
                        }
                    },
                    "qos": {
                        "type": "array",
                        "description": "qos",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string"
                                },
                                "flags": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "NOT_SET",
                                            "ADD",
                                            "REMOVE",
                                            "PARTITION_MINIMUM_NODE",
                                            "PARTITION_MAXIMUM_NODE",
                                            "PARTITION_TIME_LIMIT",
                                            "ENFORCE_USAGE_THRESHOLD",
                                            "NO_RESERVE",
                                            "REQUIRED_RESERVATION",
                                            "DENY_LIMIT",
                                            "OVERRIDE_PARTITION_QOS",
                                            "NO_DECAY",
                                            "USAGE_FACTOR_SAFE",
                                            "RELATIVE"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "id": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "limits": {
                                    "type": "object",
                                    "properties": {
                                        "grace_time": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "max": {
                                            "type": "object",
                                            "properties": {
                                                "active_jobs": {
                                                    "type": "object",
                                                    "properties": {
                                                        "accruing": {
                                                            "type": "object",
                                                            "description": "32 bit integer number with flags",
                                                            "properties": {
                                                                "set": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set. False if number is unset"
                                                                },
                                                                "infinite": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                },
                                                                "number": {
                                                                    "type": "integer",
                                                                    "format": "int32",
                                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                }
                                                            },
                                                            "required": []
                                                        },
                                                        "count": {
                                                            "type": "object",
                                                            "description": "32 bit integer number with flags",
                                                            "properties": {
                                                                "set": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set. False if number is unset"
                                                                },
                                                                "infinite": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                },
                                                                "number": {
                                                                    "type": "integer",
                                                                    "format": "int32",
                                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                }
                                                            },
                                                            "required": []
                                                        }
                                                    }
                                                },
                                                "tres": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "format": "int32"
                                                                    },
                                                                    "count": {
                                                                        "type": "integer",
                                                                        "format": "int64"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type"
                                                                ]
                                                            }
                                                        },
                                                        "minutes": {
                                                            "type": "object",
                                                            "properties": {
                                                                "per": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "qos": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "id": {
                                                                                        "type": "integer",
                                                                                        "format": "int32"
                                                                                    },
                                                                                    "count": {
                                                                                        "type": "integer",
                                                                                        "format": "int64"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "type"
                                                                                ]
                                                                            }
                                                                        },
                                                                        "job": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "id": {
                                                                                        "type": "integer",
                                                                                        "format": "int32"
                                                                                    },
                                                                                    "count": {
                                                                                        "type": "integer",
                                                                                        "format": "int64"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "type"
                                                                                ]
                                                                            }
                                                                        },
                                                                        "account": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "id": {
                                                                                        "type": "integer",
                                                                                        "format": "int32"
                                                                                    },
                                                                                    "count": {
                                                                                        "type": "integer",
                                                                                        "format": "int64"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "type"
                                                                                ]
                                                                            }
                                                                        },
                                                                        "user": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "id": {
                                                                                        "type": "integer",
                                                                                        "format": "int32"
                                                                                    },
                                                                                    "count": {
                                                                                        "type": "integer",
                                                                                        "format": "int64"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "type"
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "per": {
                                                            "type": "object",
                                                            "properties": {
                                                                "account": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "id": {
                                                                                "type": "integer",
                                                                                "format": "int32"
                                                                            },
                                                                            "count": {
                                                                                "type": "integer",
                                                                                "format": "int64"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "type"
                                                                        ]
                                                                    }
                                                                },
                                                                "job": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "id": {
                                                                                "type": "integer",
                                                                                "format": "int32"
                                                                            },
                                                                            "count": {
                                                                                "type": "integer",
                                                                                "format": "int64"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "type"
                                                                        ]
                                                                    }
                                                                },
                                                                "node": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "id": {
                                                                                "type": "integer",
                                                                                "format": "int32"
                                                                            },
                                                                            "count": {
                                                                                "type": "integer",
                                                                                "format": "int64"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "type"
                                                                        ]
                                                                    }
                                                                },
                                                                "user": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "id": {
                                                                                "type": "integer",
                                                                                "format": "int32"
                                                                            },
                                                                            "count": {
                                                                                "type": "integer",
                                                                                "format": "int64"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "type"
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "wall_clock": {
                                                    "type": "object",
                                                    "properties": {
                                                        "per": {
                                                            "type": "object",
                                                            "properties": {
                                                                "qos": {
                                                                    "type": "object",
                                                                    "description": "32 bit integer number with flags",
                                                                    "properties": {
                                                                        "set": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set. False if number is unset"
                                                                        },
                                                                        "infinite": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                        },
                                                                        "number": {
                                                                            "type": "integer",
                                                                            "format": "int32",
                                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                        }
                                                                    },
                                                                    "required": []
                                                                },
                                                                "job": {
                                                                    "type": "object",
                                                                    "description": "32 bit integer number with flags",
                                                                    "properties": {
                                                                        "set": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set. False if number is unset"
                                                                        },
                                                                        "infinite": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                        },
                                                                        "number": {
                                                                            "type": "integer",
                                                                            "format": "int32",
                                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                        }
                                                                    },
                                                                    "required": []
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "jobs": {
                                                    "type": "object",
                                                    "properties": {
                                                        "active_jobs": {
                                                            "type": "object",
                                                            "properties": {
                                                                "per": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "account": {
                                                                            "type": "object",
                                                                            "description": "32 bit integer number with flags",
                                                                            "properties": {
                                                                                "set": {
                                                                                    "type": "boolean",
                                                                                    "description": "True if number has been set. False if number is unset"
                                                                                },
                                                                                "infinite": {
                                                                                    "type": "boolean",
                                                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                                },
                                                                                "number": {
                                                                                    "type": "integer",
                                                                                    "format": "int32",
                                                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                                }
                                                                            },
                                                                            "required": []
                                                                        },
                                                                        "user": {
                                                                            "type": "object",
                                                                            "description": "32 bit integer number with flags",
                                                                            "properties": {
                                                                                "set": {
                                                                                    "type": "boolean",
                                                                                    "description": "True if number has been set. False if number is unset"
                                                                                },
                                                                                "infinite": {
                                                                                    "type": "boolean",
                                                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                                },
                                                                                "number": {
                                                                                    "type": "integer",
                                                                                    "format": "int32",
                                                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                                }
                                                                            },
                                                                            "required": []
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "per": {
                                                            "type": "object",
                                                            "properties": {
                                                                "account": {
                                                                    "type": "object",
                                                                    "description": "32 bit integer number with flags",
                                                                    "properties": {
                                                                        "set": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set. False if number is unset"
                                                                        },
                                                                        "infinite": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                        },
                                                                        "number": {
                                                                            "type": "integer",
                                                                            "format": "int32",
                                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                        }
                                                                    },
                                                                    "required": []
                                                                },
                                                                "user": {
                                                                    "type": "object",
                                                                    "description": "32 bit integer number with flags",
                                                                    "properties": {
                                                                        "set": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set. False if number is unset"
                                                                        },
                                                                        "infinite": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                        },
                                                                        "number": {
                                                                            "type": "integer",
                                                                            "format": "int32",
                                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                        }
                                                                    },
                                                                    "required": []
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "accruing": {
                                                    "type": "object",
                                                    "properties": {
                                                        "per": {
                                                            "type": "object",
                                                            "properties": {
                                                                "account": {
                                                                    "type": "object",
                                                                    "description": "32 bit integer number with flags",
                                                                    "properties": {
                                                                        "set": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set. False if number is unset"
                                                                        },
                                                                        "infinite": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                        },
                                                                        "number": {
                                                                            "type": "integer",
                                                                            "format": "int32",
                                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                        }
                                                                    },
                                                                    "required": []
                                                                },
                                                                "user": {
                                                                    "type": "object",
                                                                    "description": "32 bit integer number with flags",
                                                                    "properties": {
                                                                        "set": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set. False if number is unset"
                                                                        },
                                                                        "infinite": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                        },
                                                                        "number": {
                                                                            "type": "integer",
                                                                            "format": "int32",
                                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                        }
                                                                    },
                                                                    "required": []
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "factor": {
                                            "type": "object",
                                            "description": "64 bit floating point number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "number",
                                                    "format": "double",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "min": {
                                            "type": "object",
                                            "properties": {
                                                "priority_threshold": {
                                                    "type": "object",
                                                    "description": "32 bit integer number with flags",
                                                    "properties": {
                                                        "set": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set. False if number is unset"
                                                        },
                                                        "infinite": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                        },
                                                        "number": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                        }
                                                    },
                                                    "required": []
                                                },
                                                "tres": {
                                                    "type": "object",
                                                    "properties": {
                                                        "per": {
                                                            "type": "object",
                                                            "properties": {
                                                                "job": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "id": {
                                                                                "type": "integer",
                                                                                "format": "int32"
                                                                            },
                                                                            "count": {
                                                                                "type": "integer",
                                                                                "format": "int64"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "type"
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "name": {
                                    "type": "string"
                                },
                                "preempt": {
                                    "type": "object",
                                    "properties": {
                                        "list": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "mode": {
                                            "type": "array",
                                            "items": {
                                                "enum": [
                                                    "DISABLED",
                                                    "SUSPEND",
                                                    "REQUEUE",
                                                    "CANCEL",
                                                    "GANG"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "exempt_time": {
                                            "type": "object",
                                            "description": "32 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        }
                                    }
                                },
                                "priority": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "usage_factor": {
                                    "type": "object",
                                    "description": "64 bit floating point number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "number",
                                            "format": "double",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "usage_threshold": {
                                    "type": "object",
                                    "description": "64 bit floating point number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "number",
                                            "format": "double",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                }
                            },
                            "required": []
                        }
                    },
                    "wckeys": {
                        "type": "array",
                        "description": "wckeys",
                        "items": {
                            "type": "object",
                            "properties": {
                                "accounting": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "allocated": {
                                                "type": "object",
                                                "properties": {
                                                    "seconds": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    }
                                                }
                                            },
                                            "id": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "start": {
                                                "type": "integer",
                                                "format": "int64"
                                            },
                                            "TRES": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "count": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ]
                                            }
                                        },
                                        "required": []
                                    }
                                },
                                "cluster": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "user": {
                                    "type": "string"
                                },
                                "flags": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "DELETED"
                                        ],
                                        "type": "string"
                                    }
                                }
                            },
                            "required": [
                                "cluster",
                                "name",
                                "user"
                            ]
                        }
                    },
                    "associations": {
                        "type": "array",
                        "description": "associations",
                        "items": {
                            "type": "object",
                            "properties": {
                                "accounting": {
                                    "type": "array",
                                    "description": "Usage accounting",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "allocated": {
                                                "type": "object",
                                                "properties": {
                                                    "seconds": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    }
                                                }
                                            },
                                            "id": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "start": {
                                                "type": "integer",
                                                "format": "int64"
                                            },
                                            "TRES": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "count": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ]
                                            }
                                        },
                                        "required": []
                                    }
                                },
                                "account": {
                                    "type": "string"
                                },
                                "cluster": {
                                    "type": "string"
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "comment for the association"
                                },
                                "default": {
                                    "type": "object",
                                    "properties": {
                                        "qos": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "flags": {
                                    "type": "array",
                                    "description": "Active flags",
                                    "items": {
                                        "enum": [
                                            "DELETED",
                                            "NoUpdate",
                                            "Exact",
                                            "NoUsersAreCoords",
                                            "UsersAreCoords"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "max": {
                                    "type": "object",
                                    "properties": {
                                        "jobs": {
                                            "type": "object",
                                            "properties": {
                                                "per": {
                                                    "type": "object",
                                                    "properties": {
                                                        "count": {
                                                            "type": "object",
                                                            "description": "32 bit integer number with flags",
                                                            "properties": {
                                                                "set": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set. False if number is unset"
                                                                },
                                                                "infinite": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                },
                                                                "number": {
                                                                    "type": "integer",
                                                                    "format": "int32",
                                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                }
                                                            },
                                                            "required": []
                                                        },
                                                        "accruing": {
                                                            "type": "object",
                                                            "description": "32 bit integer number with flags",
                                                            "properties": {
                                                                "set": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set. False if number is unset"
                                                                },
                                                                "infinite": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                },
                                                                "number": {
                                                                    "type": "integer",
                                                                    "format": "int32",
                                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                }
                                                            },
                                                            "required": []
                                                        },
                                                        "submitted": {
                                                            "type": "object",
                                                            "description": "32 bit integer number with flags",
                                                            "properties": {
                                                                "set": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set. False if number is unset"
                                                                },
                                                                "infinite": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                },
                                                                "number": {
                                                                    "type": "integer",
                                                                    "format": "int32",
                                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                }
                                                            },
                                                            "required": []
                                                        },
                                                        "wall_clock": {
                                                            "type": "object",
                                                            "description": "32 bit integer number with flags",
                                                            "properties": {
                                                                "set": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set. False if number is unset"
                                                                },
                                                                "infinite": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                },
                                                                "number": {
                                                                    "type": "integer",
                                                                    "format": "int32",
                                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                }
                                                            },
                                                            "required": []
                                                        }
                                                    }
                                                },
                                                "active": {
                                                    "type": "object",
                                                    "description": "32 bit integer number with flags",
                                                    "properties": {
                                                        "set": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set. False if number is unset"
                                                        },
                                                        "infinite": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                        },
                                                        "number": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                        }
                                                    },
                                                    "required": []
                                                },
                                                "accruing": {
                                                    "type": "object",
                                                    "description": "32 bit integer number with flags",
                                                    "properties": {
                                                        "set": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set. False if number is unset"
                                                        },
                                                        "infinite": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                        },
                                                        "number": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                        }
                                                    },
                                                    "required": []
                                                },
                                                "total": {
                                                    "type": "object",
                                                    "description": "32 bit integer number with flags",
                                                    "properties": {
                                                        "set": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set. False if number is unset"
                                                        },
                                                        "infinite": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                        },
                                                        "number": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                        }
                                                    },
                                                    "required": []
                                                }
                                            }
                                        },
                                        "tres": {
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "id": {
                                                                "type": "integer",
                                                                "format": "int32"
                                                            },
                                                            "count": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ]
                                                    }
                                                },
                                                "group": {
                                                    "type": "object",
                                                    "properties": {
                                                        "minutes": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "format": "int32"
                                                                    },
                                                                    "count": {
                                                                        "type": "integer",
                                                                        "format": "int64"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type"
                                                                ]
                                                            }
                                                        },
                                                        "active": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "format": "int32"
                                                                    },
                                                                    "count": {
                                                                        "type": "integer",
                                                                        "format": "int64"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                },
                                                "minutes": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "format": "int32"
                                                                    },
                                                                    "count": {
                                                                        "type": "integer",
                                                                        "format": "int64"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type"
                                                                ]
                                                            }
                                                        },
                                                        "per": {
                                                            "type": "object",
                                                            "properties": {
                                                                "job": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "id": {
                                                                                "type": "integer",
                                                                                "format": "int32"
                                                                            },
                                                                            "count": {
                                                                                "type": "integer",
                                                                                "format": "int64"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "type"
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "per": {
                                                    "type": "object",
                                                    "properties": {
                                                        "job": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "format": "int32"
                                                                    },
                                                                    "count": {
                                                                        "type": "integer",
                                                                        "format": "int64"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type"
                                                                ]
                                                            }
                                                        },
                                                        "node": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "format": "int32"
                                                                    },
                                                                    "count": {
                                                                        "type": "integer",
                                                                        "format": "int64"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "per": {
                                            "type": "object",
                                            "properties": {
                                                "account": {
                                                    "type": "object",
                                                    "properties": {
                                                        "wall_clock": {
                                                            "type": "object",
                                                            "description": "32 bit integer number with flags",
                                                            "properties": {
                                                                "set": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set. False if number is unset"
                                                                },
                                                                "infinite": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                },
                                                                "number": {
                                                                    "type": "integer",
                                                                    "format": "int32",
                                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                }
                                                            },
                                                            "required": []
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Association ID"
                                },
                                "is_default": {
                                    "type": "boolean"
                                },
                                "lineage": {
                                    "type": "string",
                                    "description": "Complete path up the hierarchy to the root association"
                                },
                                "min": {
                                    "type": "object",
                                    "properties": {
                                        "priority_threshold": {
                                            "type": "object",
                                            "description": "32 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        }
                                    }
                                },
                                "parent_account": {
                                    "type": "string"
                                },
                                "partition": {
                                    "type": "string"
                                },
                                "priority": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "qos": {
                                    "type": "array",
                                    "description": "List of QOS names",
                                    "items": {
                                        "type": "string",
                                        "description": "List of QOS names"
                                    }
                                },
                                "shares_raw": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "user": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "user"
                            ]
                        }
                    },
                    "instances": {
                        "type": "array",
                        "description": "instances",
                        "items": {
                            "type": "object",
                            "properties": {
                                "cluster": {
                                    "type": "string"
                                },
                                "extra": {
                                    "type": "string"
                                },
                                "instance_id": {
                                    "type": "string"
                                },
                                "instance_type": {
                                    "type": "string"
                                },
                                "node_name": {
                                    "type": "string"
                                },
                                "time": {
                                    "type": "object",
                                    "properties": {
                                        "time_end": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "time_start": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            },
                            "required": []
                        }
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": []
            },
            "v0.0.41_openapi_resp": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": []
            },
            "v0.0.40_openapi_slurmdbd_config_resp": {
                "type": "object",
                "properties": {
                    "clusters": {
                        "$ref": "#/components/schemas/v0.0.40_cluster_rec_list",
                        "description": "clusters"
                    },
                    "tres": {
                        "$ref": "#/components/schemas/v0.0.40_tres_list",
                        "description": "tres"
                    },
                    "accounts": {
                        "$ref": "#/components/schemas/v0.0.40_account_list",
                        "description": "accounts"
                    },
                    "users": {
                        "$ref": "#/components/schemas/v0.0.40_user_list",
                        "description": "users"
                    },
                    "qos": {
                        "$ref": "#/components/schemas/v0.0.40_qos_list",
                        "description": "qos"
                    },
                    "wckeys": {
                        "$ref": "#/components/schemas/v0.0.40_wckey_list",
                        "description": "wckeys"
                    },
                    "associations": {
                        "$ref": "#/components/schemas/v0.0.40_assoc_list",
                        "description": "associations"
                    },
                    "instances": {
                        "$ref": "#/components/schemas/v0.0.40_instance_list",
                        "description": "instances"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": []
            },
            "v0.0.40_cluster_rec_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_cluster_rec"
                }
            },
            "v0.0.40_cluster_rec": {
                "type": "object",
                "properties": {
                    "controller": {
                        "type": "object",
                        "properties": {
                            "host": {
                                "type": "string"
                            },
                            "port": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "REGISTERING",
                                "MULTIPLE_SLURMD",
                                "FRONT_END",
                                "FEDERATION",
                                "EXTERNAL"
                            ],
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodes": {
                        "type": "string"
                    },
                    "select_plugin": {
                        "type": "string"
                    },
                    "associations": {
                        "type": "object",
                        "properties": {
                            "root": {
                                "$ref": "#/components/schemas/v0.0.40_assoc_short"
                            }
                        }
                    },
                    "rpc_version": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tres": {
                        "$ref": "#/components/schemas/v0.0.40_tres_list"
                    }
                },
                "required": []
            },
            "v0.0.40_account_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_account"
                }
            },
            "v0.0.40_account": {
                "type": "object",
                "properties": {
                    "associations": {
                        "$ref": "#/components/schemas/v0.0.40_assoc_short_list"
                    },
                    "coordinators": {
                        "$ref": "#/components/schemas/v0.0.40_coord_list"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organization": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "DELETED"
                            ],
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "description",
                    "name",
                    "organization"
                ]
            },
            "v0.0.40_assoc_short_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_assoc_short"
                }
            },
            "v0.0.40_coord_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_coord"
                }
            },
            "v0.0.40_coord": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "direct": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "v0.0.40_user_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_user"
                }
            },
            "v0.0.40_user": {
                "type": "object",
                "properties": {
                    "administrator_level": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "Not Set",
                                "None",
                                "Operator",
                                "Administrator"
                            ],
                            "type": "string"
                        }
                    },
                    "associations": {
                        "$ref": "#/components/schemas/v0.0.40_assoc_short_list"
                    },
                    "coordinators": {
                        "$ref": "#/components/schemas/v0.0.40_coord_list"
                    },
                    "default": {
                        "type": "object",
                        "properties": {
                            "account": {
                                "type": "string"
                            },
                            "wckey": {
                                "type": "string"
                            }
                        }
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "NONE",
                                "DELETED"
                            ],
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "old_name": {
                        "type": "string"
                    },
                    "wckeys": {
                        "$ref": "#/components/schemas/v0.0.40_wckey_list"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "v0.0.40_wckey_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_wckey"
                }
            },
            "v0.0.40_wckey": {
                "type": "object",
                "properties": {
                    "accounting": {
                        "$ref": "#/components/schemas/v0.0.40_accounting_list"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "DELETED"
                            ],
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "cluster",
                    "name",
                    "user"
                ]
            },
            "v0.0.40_accounting_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_accounting"
                }
            },
            "v0.0.40_accounting": {
                "type": "object",
                "properties": {
                    "allocated": {
                        "type": "object",
                        "properties": {
                            "seconds": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "start": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TRES": {
                        "$ref": "#/components/schemas/v0.0.40_tres"
                    }
                },
                "required": []
            },
            "v0.0.40_qos_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_qos"
                }
            },
            "v0.0.40_qos": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "NOT_SET",
                                "ADD",
                                "REMOVE",
                                "PARTITION_MINIMUM_NODE",
                                "PARTITION_MAXIMUM_NODE",
                                "PARTITION_TIME_LIMIT",
                                "ENFORCE_USAGE_THRESHOLD",
                                "NO_RESERVE",
                                "REQUIRED_RESERVATION",
                                "DENY_LIMIT",
                                "OVERRIDE_PARTITION_QOS",
                                "NO_DECAY",
                                "USAGE_FACTOR_SAFE",
                                "RELATIVE"
                            ],
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "limits": {
                        "type": "object",
                        "properties": {
                            "grace_time": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "max": {
                                "type": "object",
                                "properties": {
                                    "active_jobs": {
                                        "type": "object",
                                        "properties": {
                                            "accruing": {
                                                "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                                            },
                                            "count": {
                                                "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                                            }
                                        }
                                    },
                                    "tres": {
                                        "type": "object",
                                        "properties": {
                                            "total": {
                                                "$ref": "#/components/schemas/v0.0.40_tres_list"
                                            },
                                            "minutes": {
                                                "type": "object",
                                                "properties": {
                                                    "per": {
                                                        "type": "object",
                                                        "properties": {
                                                            "qos": {
                                                                "$ref": "#/components/schemas/v0.0.40_tres_list"
                                                            },
                                                            "job": {
                                                                "$ref": "#/components/schemas/v0.0.40_tres_list"
                                                            },
                                                            "account": {
                                                                "$ref": "#/components/schemas/v0.0.40_tres_list"
                                                            },
                                                            "user": {
                                                                "$ref": "#/components/schemas/v0.0.40_tres_list"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "account": {
                                                        "$ref": "#/components/schemas/v0.0.40_tres_list"
                                                    },
                                                    "job": {
                                                        "$ref": "#/components/schemas/v0.0.40_tres_list"
                                                    },
                                                    "node": {
                                                        "$ref": "#/components/schemas/v0.0.40_tres_list"
                                                    },
                                                    "user": {
                                                        "$ref": "#/components/schemas/v0.0.40_tres_list"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "wall_clock": {
                                        "type": "object",
                                        "properties": {
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "qos": {
                                                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                                                    },
                                                    "job": {
                                                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "jobs": {
                                        "type": "object",
                                        "properties": {
                                            "active_jobs": {
                                                "type": "object",
                                                "properties": {
                                                    "per": {
                                                        "type": "object",
                                                        "properties": {
                                                            "account": {
                                                                "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                                                            },
                                                            "user": {
                                                                "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "account": {
                                                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                                                    },
                                                    "user": {
                                                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "accruing": {
                                        "type": "object",
                                        "properties": {
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "account": {
                                                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                                                    },
                                                    "user": {
                                                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "factor": {
                                "$ref": "#/components/schemas/v0.0.40_float64_no_val"
                            },
                            "min": {
                                "type": "object",
                                "properties": {
                                    "priority_threshold": {
                                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                                    },
                                    "tres": {
                                        "type": "object",
                                        "properties": {
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "job": {
                                                        "$ref": "#/components/schemas/v0.0.40_tres_list"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "preempt": {
                        "type": "object",
                        "properties": {
                            "list": {
                                "$ref": "#/components/schemas/v0.0.40_qos_preempt_list"
                            },
                            "mode": {
                                "type": "array",
                                "items": {
                                    "enum": [
                                        "DISABLED",
                                        "SUSPEND",
                                        "REQUEUE",
                                        "CANCEL",
                                        "GANG"
                                    ],
                                    "type": "string"
                                }
                            },
                            "exempt_time": {
                                "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                            }
                        }
                    },
                    "priority": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "usage_factor": {
                        "$ref": "#/components/schemas/v0.0.40_float64_no_val"
                    },
                    "usage_threshold": {
                        "$ref": "#/components/schemas/v0.0.40_float64_no_val"
                    }
                },
                "required": []
            },
            "v0.0.40_float64_no_val": {
                "type": "object",
                "description": "64 bit floating point number with flags",
                "properties": {
                    "set": {
                        "type": "boolean",
                        "description": "True if number has been set. False if number is unset",
                        "default": false
                    },
                    "infinite": {
                        "type": "boolean",
                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
                        "default": 0.0
                    },
                    "number": {
                        "type": "number",
                        "format": "double",
                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                    }
                }
            },
            "v0.0.40_qos_preempt_list": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.40_assoc_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_assoc"
                }
            },
            "v0.0.40_assoc": {
                "type": "object",
                "properties": {
                    "accounting": {
                        "$ref": "#/components/schemas/v0.0.40_accounting_list",
                        "description": "Usage accounting"
                    },
                    "account": {
                        "type": "string"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string",
                        "description": "comment for the association"
                    },
                    "default": {
                        "type": "object",
                        "properties": {
                            "qos": {
                                "type": "string"
                            }
                        }
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "DELETED"
                            ],
                            "type": "string"
                        }
                    },
                    "max": {
                        "type": "object",
                        "properties": {
                            "jobs": {
                                "type": "object",
                                "properties": {
                                    "per": {
                                        "type": "object",
                                        "properties": {
                                            "count": {
                                                "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                                            },
                                            "accruing": {
                                                "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                                            },
                                            "submitted": {
                                                "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                                            },
                                            "wall_clock": {
                                                "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                                            }
                                        }
                                    },
                                    "active": {
                                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                                    },
                                    "accruing": {
                                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                                    },
                                    "total": {
                                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                                    }
                                }
                            },
                            "tres": {
                                "type": "object",
                                "properties": {
                                    "total": {
                                        "$ref": "#/components/schemas/v0.0.40_tres_list"
                                    },
                                    "group": {
                                        "type": "object",
                                        "properties": {
                                            "minutes": {
                                                "$ref": "#/components/schemas/v0.0.40_tres_list"
                                            },
                                            "active": {
                                                "$ref": "#/components/schemas/v0.0.40_tres_list"
                                            }
                                        }
                                    },
                                    "minutes": {
                                        "type": "object",
                                        "properties": {
                                            "total": {
                                                "$ref": "#/components/schemas/v0.0.40_tres_list"
                                            },
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "job": {
                                                        "$ref": "#/components/schemas/v0.0.40_tres_list"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "per": {
                                        "type": "object",
                                        "properties": {
                                            "job": {
                                                "$ref": "#/components/schemas/v0.0.40_tres_list"
                                            },
                                            "node": {
                                                "$ref": "#/components/schemas/v0.0.40_tres_list"
                                            }
                                        }
                                    }
                                }
                            },
                            "per": {
                                "type": "object",
                                "properties": {
                                    "account": {
                                        "type": "object",
                                        "properties": {
                                            "wall_clock": {
                                                "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "id": {
                        "$ref": "#/components/schemas/v0.0.40_assoc_short",
                        "description": "Association ID"
                    },
                    "is_default": {
                        "type": "boolean"
                    },
                    "lineage": {
                        "type": "string",
                        "description": "Complete path up the hierarchy to the root association"
                    },
                    "min": {
                        "type": "object",
                        "properties": {
                            "priority_threshold": {
                                "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                            }
                        }
                    },
                    "parent_account": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "priority": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "qos": {
                        "$ref": "#/components/schemas/v0.0.40_qos_string_id_list",
                        "description": "List of QOS names"
                    },
                    "shares_raw": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "user": {
                        "type": "string"
                    }
                },
                "required": [
                    "user"
                ]
            },
            "v0.0.40_qos_string_id_list": {
                "type": "array",
                "description": "List of QOS names",
                "items": {
                    "type": "string",
                    "description": "List of QOS names"
                }
            },
            "v0.0.40_instance_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_instance"
                }
            },
            "v0.0.40_instance": {
                "type": "object",
                "properties": {
                    "cluster": {
                        "type": "string"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "instance_id": {
                        "type": "string"
                    },
                    "instance_type": {
                        "type": "string"
                    },
                    "node_name": {
                        "type": "string"
                    },
                    "time": {
                        "type": "object",
                        "properties": {
                            "time_end": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "time_start": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.40_openapi_resp": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": []
            },
            "v0.0.41_openapi_tres_resp": {
                "type": "object",
                "properties": {
                    "TRES": {
                        "type": "array",
                        "description": "TRES",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "count": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            },
                            "required": [
                                "type"
                            ]
                        }
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "TRES"
                ]
            },
            "v0.0.40_openapi_tres_resp": {
                "type": "object",
                "properties": {
                    "TRES": {
                        "$ref": "#/components/schemas/v0.0.40_tres_list",
                        "description": "TRES"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "TRES"
                ]
            },
            "v0.0.41_openapi_slurmdbd_qos_resp": {
                "type": "object",
                "properties": {
                    "qos": {
                        "type": "array",
                        "description": "List of QOS",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string"
                                },
                                "flags": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "NOT_SET",
                                            "ADD",
                                            "REMOVE",
                                            "PARTITION_MINIMUM_NODE",
                                            "PARTITION_MAXIMUM_NODE",
                                            "PARTITION_TIME_LIMIT",
                                            "ENFORCE_USAGE_THRESHOLD",
                                            "NO_RESERVE",
                                            "REQUIRED_RESERVATION",
                                            "DENY_LIMIT",
                                            "OVERRIDE_PARTITION_QOS",
                                            "NO_DECAY",
                                            "USAGE_FACTOR_SAFE",
                                            "RELATIVE"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "id": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "limits": {
                                    "type": "object",
                                    "properties": {
                                        "grace_time": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "max": {
                                            "type": "object",
                                            "properties": {
                                                "active_jobs": {
                                                    "type": "object",
                                                    "properties": {
                                                        "accruing": {
                                                            "type": "object",
                                                            "description": "32 bit integer number with flags",
                                                            "properties": {
                                                                "set": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set. False if number is unset"
                                                                },
                                                                "infinite": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                },
                                                                "number": {
                                                                    "type": "integer",
                                                                    "format": "int32",
                                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                }
                                                            },
                                                            "required": []
                                                        },
                                                        "count": {
                                                            "type": "object",
                                                            "description": "32 bit integer number with flags",
                                                            "properties": {
                                                                "set": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set. False if number is unset"
                                                                },
                                                                "infinite": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                },
                                                                "number": {
                                                                    "type": "integer",
                                                                    "format": "int32",
                                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                }
                                                            },
                                                            "required": []
                                                        }
                                                    }
                                                },
                                                "tres": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "format": "int32"
                                                                    },
                                                                    "count": {
                                                                        "type": "integer",
                                                                        "format": "int64"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type"
                                                                ]
                                                            }
                                                        },
                                                        "minutes": {
                                                            "type": "object",
                                                            "properties": {
                                                                "per": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "qos": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "id": {
                                                                                        "type": "integer",
                                                                                        "format": "int32"
                                                                                    },
                                                                                    "count": {
                                                                                        "type": "integer",
                                                                                        "format": "int64"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "type"
                                                                                ]
                                                                            }
                                                                        },
                                                                        "job": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "id": {
                                                                                        "type": "integer",
                                                                                        "format": "int32"
                                                                                    },
                                                                                    "count": {
                                                                                        "type": "integer",
                                                                                        "format": "int64"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "type"
                                                                                ]
                                                                            }
                                                                        },
                                                                        "account": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "id": {
                                                                                        "type": "integer",
                                                                                        "format": "int32"
                                                                                    },
                                                                                    "count": {
                                                                                        "type": "integer",
                                                                                        "format": "int64"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "type"
                                                                                ]
                                                                            }
                                                                        },
                                                                        "user": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "id": {
                                                                                        "type": "integer",
                                                                                        "format": "int32"
                                                                                    },
                                                                                    "count": {
                                                                                        "type": "integer",
                                                                                        "format": "int64"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "type"
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "per": {
                                                            "type": "object",
                                                            "properties": {
                                                                "account": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "id": {
                                                                                "type": "integer",
                                                                                "format": "int32"
                                                                            },
                                                                            "count": {
                                                                                "type": "integer",
                                                                                "format": "int64"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "type"
                                                                        ]
                                                                    }
                                                                },
                                                                "job": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "id": {
                                                                                "type": "integer",
                                                                                "format": "int32"
                                                                            },
                                                                            "count": {
                                                                                "type": "integer",
                                                                                "format": "int64"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "type"
                                                                        ]
                                                                    }
                                                                },
                                                                "node": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "id": {
                                                                                "type": "integer",
                                                                                "format": "int32"
                                                                            },
                                                                            "count": {
                                                                                "type": "integer",
                                                                                "format": "int64"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "type"
                                                                        ]
                                                                    }
                                                                },
                                                                "user": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "id": {
                                                                                "type": "integer",
                                                                                "format": "int32"
                                                                            },
                                                                            "count": {
                                                                                "type": "integer",
                                                                                "format": "int64"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "type"
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "wall_clock": {
                                                    "type": "object",
                                                    "properties": {
                                                        "per": {
                                                            "type": "object",
                                                            "properties": {
                                                                "qos": {
                                                                    "type": "object",
                                                                    "description": "32 bit integer number with flags",
                                                                    "properties": {
                                                                        "set": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set. False if number is unset"
                                                                        },
                                                                        "infinite": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                        },
                                                                        "number": {
                                                                            "type": "integer",
                                                                            "format": "int32",
                                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                        }
                                                                    },
                                                                    "required": []
                                                                },
                                                                "job": {
                                                                    "type": "object",
                                                                    "description": "32 bit integer number with flags",
                                                                    "properties": {
                                                                        "set": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set. False if number is unset"
                                                                        },
                                                                        "infinite": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                        },
                                                                        "number": {
                                                                            "type": "integer",
                                                                            "format": "int32",
                                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                        }
                                                                    },
                                                                    "required": []
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "jobs": {
                                                    "type": "object",
                                                    "properties": {
                                                        "active_jobs": {
                                                            "type": "object",
                                                            "properties": {
                                                                "per": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "account": {
                                                                            "type": "object",
                                                                            "description": "32 bit integer number with flags",
                                                                            "properties": {
                                                                                "set": {
                                                                                    "type": "boolean",
                                                                                    "description": "True if number has been set. False if number is unset"
                                                                                },
                                                                                "infinite": {
                                                                                    "type": "boolean",
                                                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                                },
                                                                                "number": {
                                                                                    "type": "integer",
                                                                                    "format": "int32",
                                                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                                }
                                                                            },
                                                                            "required": []
                                                                        },
                                                                        "user": {
                                                                            "type": "object",
                                                                            "description": "32 bit integer number with flags",
                                                                            "properties": {
                                                                                "set": {
                                                                                    "type": "boolean",
                                                                                    "description": "True if number has been set. False if number is unset"
                                                                                },
                                                                                "infinite": {
                                                                                    "type": "boolean",
                                                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                                },
                                                                                "number": {
                                                                                    "type": "integer",
                                                                                    "format": "int32",
                                                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                                }
                                                                            },
                                                                            "required": []
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "per": {
                                                            "type": "object",
                                                            "properties": {
                                                                "account": {
                                                                    "type": "object",
                                                                    "description": "32 bit integer number with flags",
                                                                    "properties": {
                                                                        "set": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set. False if number is unset"
                                                                        },
                                                                        "infinite": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                        },
                                                                        "number": {
                                                                            "type": "integer",
                                                                            "format": "int32",
                                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                        }
                                                                    },
                                                                    "required": []
                                                                },
                                                                "user": {
                                                                    "type": "object",
                                                                    "description": "32 bit integer number with flags",
                                                                    "properties": {
                                                                        "set": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set. False if number is unset"
                                                                        },
                                                                        "infinite": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                        },
                                                                        "number": {
                                                                            "type": "integer",
                                                                            "format": "int32",
                                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                        }
                                                                    },
                                                                    "required": []
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "accruing": {
                                                    "type": "object",
                                                    "properties": {
                                                        "per": {
                                                            "type": "object",
                                                            "properties": {
                                                                "account": {
                                                                    "type": "object",
                                                                    "description": "32 bit integer number with flags",
                                                                    "properties": {
                                                                        "set": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set. False if number is unset"
                                                                        },
                                                                        "infinite": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                        },
                                                                        "number": {
                                                                            "type": "integer",
                                                                            "format": "int32",
                                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                        }
                                                                    },
                                                                    "required": []
                                                                },
                                                                "user": {
                                                                    "type": "object",
                                                                    "description": "32 bit integer number with flags",
                                                                    "properties": {
                                                                        "set": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set. False if number is unset"
                                                                        },
                                                                        "infinite": {
                                                                            "type": "boolean",
                                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                        },
                                                                        "number": {
                                                                            "type": "integer",
                                                                            "format": "int32",
                                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                        }
                                                                    },
                                                                    "required": []
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "factor": {
                                            "type": "object",
                                            "description": "64 bit floating point number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "number",
                                                    "format": "double",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "min": {
                                            "type": "object",
                                            "properties": {
                                                "priority_threshold": {
                                                    "type": "object",
                                                    "description": "32 bit integer number with flags",
                                                    "properties": {
                                                        "set": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set. False if number is unset"
                                                        },
                                                        "infinite": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                        },
                                                        "number": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                        }
                                                    },
                                                    "required": []
                                                },
                                                "tres": {
                                                    "type": "object",
                                                    "properties": {
                                                        "per": {
                                                            "type": "object",
                                                            "properties": {
                                                                "job": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "id": {
                                                                                "type": "integer",
                                                                                "format": "int32"
                                                                            },
                                                                            "count": {
                                                                                "type": "integer",
                                                                                "format": "int64"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "type"
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "name": {
                                    "type": "string"
                                },
                                "preempt": {
                                    "type": "object",
                                    "properties": {
                                        "list": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "mode": {
                                            "type": "array",
                                            "items": {
                                                "enum": [
                                                    "DISABLED",
                                                    "SUSPEND",
                                                    "REQUEUE",
                                                    "CANCEL",
                                                    "GANG"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "exempt_time": {
                                            "type": "object",
                                            "description": "32 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        }
                                    }
                                },
                                "priority": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "usage_factor": {
                                    "type": "object",
                                    "description": "64 bit floating point number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "number",
                                            "format": "double",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "usage_threshold": {
                                    "type": "object",
                                    "description": "64 bit floating point number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "number",
                                            "format": "double",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                }
                            },
                            "required": []
                        }
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "qos"
                ]
            },
            "v0.0.41_openapi_slurmdbd_qos_removed_resp": {
                "type": "object",
                "properties": {
                    "removed_qos": {
                        "type": "array",
                        "description": "removed QOS",
                        "items": {
                            "type": "string"
                        }
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "removed_qos"
                ]
            },
            "v0.0.40_openapi_slurmdbd_qos_resp": {
                "type": "object",
                "properties": {
                    "qos": {
                        "$ref": "#/components/schemas/v0.0.40_qos_list",
                        "description": "List of QOS"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "qos"
                ]
            },
            "v0.0.40_openapi_slurmdbd_qos_removed_resp": {
                "type": "object",
                "properties": {
                    "removed_qos": {
                        "$ref": "#/components/schemas/v0.0.40_string_list",
                        "description": "removed QOS"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "removed_qos"
                ]
            },
            "v0.0.40_string_list": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.41_openapi_assocs_resp": {
                "type": "object",
                "properties": {
                    "associations": {
                        "type": "array",
                        "description": "associations",
                        "items": {
                            "type": "object",
                            "properties": {
                                "accounting": {
                                    "type": "array",
                                    "description": "Usage accounting",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "allocated": {
                                                "type": "object",
                                                "properties": {
                                                    "seconds": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    }
                                                }
                                            },
                                            "id": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "start": {
                                                "type": "integer",
                                                "format": "int64"
                                            },
                                            "TRES": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "count": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ]
                                            }
                                        },
                                        "required": []
                                    }
                                },
                                "account": {
                                    "type": "string"
                                },
                                "cluster": {
                                    "type": "string"
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "comment for the association"
                                },
                                "default": {
                                    "type": "object",
                                    "properties": {
                                        "qos": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "flags": {
                                    "type": "array",
                                    "description": "Active flags",
                                    "items": {
                                        "enum": [
                                            "DELETED",
                                            "NoUpdate",
                                            "Exact",
                                            "NoUsersAreCoords",
                                            "UsersAreCoords"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "max": {
                                    "type": "object",
                                    "properties": {
                                        "jobs": {
                                            "type": "object",
                                            "properties": {
                                                "per": {
                                                    "type": "object",
                                                    "properties": {
                                                        "count": {
                                                            "type": "object",
                                                            "description": "32 bit integer number with flags",
                                                            "properties": {
                                                                "set": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set. False if number is unset"
                                                                },
                                                                "infinite": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                },
                                                                "number": {
                                                                    "type": "integer",
                                                                    "format": "int32",
                                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                }
                                                            },
                                                            "required": []
                                                        },
                                                        "accruing": {
                                                            "type": "object",
                                                            "description": "32 bit integer number with flags",
                                                            "properties": {
                                                                "set": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set. False if number is unset"
                                                                },
                                                                "infinite": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                },
                                                                "number": {
                                                                    "type": "integer",
                                                                    "format": "int32",
                                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                }
                                                            },
                                                            "required": []
                                                        },
                                                        "submitted": {
                                                            "type": "object",
                                                            "description": "32 bit integer number with flags",
                                                            "properties": {
                                                                "set": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set. False if number is unset"
                                                                },
                                                                "infinite": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                },
                                                                "number": {
                                                                    "type": "integer",
                                                                    "format": "int32",
                                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                }
                                                            },
                                                            "required": []
                                                        },
                                                        "wall_clock": {
                                                            "type": "object",
                                                            "description": "32 bit integer number with flags",
                                                            "properties": {
                                                                "set": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set. False if number is unset"
                                                                },
                                                                "infinite": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                },
                                                                "number": {
                                                                    "type": "integer",
                                                                    "format": "int32",
                                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                }
                                                            },
                                                            "required": []
                                                        }
                                                    }
                                                },
                                                "active": {
                                                    "type": "object",
                                                    "description": "32 bit integer number with flags",
                                                    "properties": {
                                                        "set": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set. False if number is unset"
                                                        },
                                                        "infinite": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                        },
                                                        "number": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                        }
                                                    },
                                                    "required": []
                                                },
                                                "accruing": {
                                                    "type": "object",
                                                    "description": "32 bit integer number with flags",
                                                    "properties": {
                                                        "set": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set. False if number is unset"
                                                        },
                                                        "infinite": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                        },
                                                        "number": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                        }
                                                    },
                                                    "required": []
                                                },
                                                "total": {
                                                    "type": "object",
                                                    "description": "32 bit integer number with flags",
                                                    "properties": {
                                                        "set": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set. False if number is unset"
                                                        },
                                                        "infinite": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                        },
                                                        "number": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                        }
                                                    },
                                                    "required": []
                                                }
                                            }
                                        },
                                        "tres": {
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "id": {
                                                                "type": "integer",
                                                                "format": "int32"
                                                            },
                                                            "count": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ]
                                                    }
                                                },
                                                "group": {
                                                    "type": "object",
                                                    "properties": {
                                                        "minutes": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "format": "int32"
                                                                    },
                                                                    "count": {
                                                                        "type": "integer",
                                                                        "format": "int64"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type"
                                                                ]
                                                            }
                                                        },
                                                        "active": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "format": "int32"
                                                                    },
                                                                    "count": {
                                                                        "type": "integer",
                                                                        "format": "int64"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                },
                                                "minutes": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "format": "int32"
                                                                    },
                                                                    "count": {
                                                                        "type": "integer",
                                                                        "format": "int64"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type"
                                                                ]
                                                            }
                                                        },
                                                        "per": {
                                                            "type": "object",
                                                            "properties": {
                                                                "job": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "id": {
                                                                                "type": "integer",
                                                                                "format": "int32"
                                                                            },
                                                                            "count": {
                                                                                "type": "integer",
                                                                                "format": "int64"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "type"
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "per": {
                                                    "type": "object",
                                                    "properties": {
                                                        "job": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "format": "int32"
                                                                    },
                                                                    "count": {
                                                                        "type": "integer",
                                                                        "format": "int64"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type"
                                                                ]
                                                            }
                                                        },
                                                        "node": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "format": "int32"
                                                                    },
                                                                    "count": {
                                                                        "type": "integer",
                                                                        "format": "int64"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "per": {
                                            "type": "object",
                                            "properties": {
                                                "account": {
                                                    "type": "object",
                                                    "properties": {
                                                        "wall_clock": {
                                                            "type": "object",
                                                            "description": "32 bit integer number with flags",
                                                            "properties": {
                                                                "set": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set. False if number is unset"
                                                                },
                                                                "infinite": {
                                                                    "type": "boolean",
                                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                },
                                                                "number": {
                                                                    "type": "integer",
                                                                    "format": "int32",
                                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                }
                                                            },
                                                            "required": []
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Association ID"
                                },
                                "is_default": {
                                    "type": "boolean"
                                },
                                "lineage": {
                                    "type": "string",
                                    "description": "Complete path up the hierarchy to the root association"
                                },
                                "min": {
                                    "type": "object",
                                    "properties": {
                                        "priority_threshold": {
                                            "type": "object",
                                            "description": "32 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        }
                                    }
                                },
                                "parent_account": {
                                    "type": "string"
                                },
                                "partition": {
                                    "type": "string"
                                },
                                "priority": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "qos": {
                                    "type": "array",
                                    "description": "List of QOS names",
                                    "items": {
                                        "type": "string",
                                        "description": "List of QOS names"
                                    }
                                },
                                "shares_raw": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "user": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "user"
                            ]
                        }
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "associations"
                ]
            },
            "v0.0.41_openapi_assocs_removed_resp": {
                "type": "object",
                "properties": {
                    "removed_associations": {
                        "type": "array",
                        "description": "removed_associations",
                        "items": {
                            "type": "string"
                        }
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "removed_associations"
                ]
            },
            "v0.0.40_openapi_assocs_resp": {
                "type": "object",
                "properties": {
                    "associations": {
                        "$ref": "#/components/schemas/v0.0.40_assoc_list",
                        "description": "associations"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "associations"
                ]
            },
            "v0.0.40_openapi_assocs_removed_resp": {
                "type": "object",
                "properties": {
                    "removed_associations": {
                        "$ref": "#/components/schemas/v0.0.40_string_list",
                        "description": "removed_associations"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "removed_associations"
                ]
            },
            "v0.0.41_openapi_instances_resp": {
                "type": "object",
                "properties": {
                    "instances": {
                        "type": "array",
                        "description": "instances",
                        "items": {
                            "type": "object",
                            "properties": {
                                "cluster": {
                                    "type": "string"
                                },
                                "extra": {
                                    "type": "string"
                                },
                                "instance_id": {
                                    "type": "string"
                                },
                                "instance_type": {
                                    "type": "string"
                                },
                                "node_name": {
                                    "type": "string"
                                },
                                "time": {
                                    "type": "object",
                                    "properties": {
                                        "time_end": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "time_start": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            },
                            "required": []
                        }
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "instances"
                ]
            },
            "v0.0.40_openapi_instances_resp": {
                "type": "object",
                "properties": {
                    "instances": {
                        "$ref": "#/components/schemas/v0.0.40_instance_list",
                        "description": "instances"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "instances"
                ]
            },
            "v0.0.41_openapi_users_resp": {
                "type": "object",
                "properties": {
                    "users": {
                        "type": "array",
                        "description": "users",
                        "items": {
                            "type": "object",
                            "properties": {
                                "administrator_level": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "Not Set",
                                            "None",
                                            "Operator",
                                            "Administrator"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "associations": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "account": {
                                                "type": "string",
                                                "description": "Association account (if assigned)"
                                            },
                                            "cluster": {
                                                "type": "string",
                                                "description": "Association cluster (if assigned)"
                                            },
                                            "partition": {
                                                "type": "string",
                                                "description": "Association partition (if assigned)"
                                            },
                                            "user": {
                                                "type": "string",
                                                "description": "Assocation user (if assigned)"
                                            },
                                            "id": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "Numeric Association ID (if known)"
                                            }
                                        },
                                        "required": [
                                            "user"
                                        ]
                                    }
                                },
                                "coordinators": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "direct": {
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "name"
                                        ]
                                    }
                                },
                                "default": {
                                    "type": "object",
                                    "properties": {
                                        "account": {
                                            "type": "string"
                                        },
                                        "wckey": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "flags": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "NONE",
                                            "DELETED"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "name": {
                                    "type": "string"
                                },
                                "old_name": {
                                    "type": "string"
                                },
                                "wckeys": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "accounting": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "allocated": {
                                                            "type": "object",
                                                            "properties": {
                                                                "seconds": {
                                                                    "type": "integer",
                                                                    "format": "int64"
                                                                }
                                                            }
                                                        },
                                                        "id": {
                                                            "type": "integer",
                                                            "format": "int32"
                                                        },
                                                        "start": {
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "TRES": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "id": {
                                                                    "type": "integer",
                                                                    "format": "int32"
                                                                },
                                                                "count": {
                                                                    "type": "integer",
                                                                    "format": "int64"
                                                                }
                                                            },
                                                            "required": [
                                                                "type"
                                                            ]
                                                        }
                                                    },
                                                    "required": []
                                                }
                                            },
                                            "cluster": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "user": {
                                                "type": "string"
                                            },
                                            "flags": {
                                                "type": "array",
                                                "items": {
                                                    "enum": [
                                                        "DELETED"
                                                    ],
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "required": [
                                            "cluster",
                                            "name",
                                            "user"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "name"
                            ]
                        }
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "users"
                ]
            },
            "v0.0.40_openapi_users_resp": {
                "type": "object",
                "properties": {
                    "users": {
                        "$ref": "#/components/schemas/v0.0.40_user_list",
                        "description": "users"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "users"
                ]
            },
            "v0.0.41_openapi_users_add_cond_resp_str": {
                "type": "object",
                "properties": {
                    "added_users": {
                        "type": "string",
                        "description": "added_users"
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "added_users"
                ]
            },
            "v0.0.41_openapi_users_add_cond_resp": {
                "type": "object",
                "properties": {
                    "association_condition": {
                        "type": "object",
                        "description": "Filters to select associations for users",
                        "properties": {
                            "accounts": {
                                "type": "array",
                                "description": "CSV accounts list",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "association": {
                                "type": "object",
                                "description": "Association limits and options",
                                "properties": {
                                    "comment": {
                                        "type": "string",
                                        "description": "Comment for the association"
                                    },
                                    "defaultqos": {
                                        "type": "string",
                                        "description": "Which QOS id is this association default"
                                    },
                                    "grpjobs": {
                                        "type": "object",
                                        "description": "Max number of jobs the underlying group of associations can run at one time",
                                        "properties": {
                                            "set": {
                                                "type": "boolean",
                                                "description": "True if number has been set. False if number is unset"
                                            },
                                            "infinite": {
                                                "type": "boolean",
                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                            },
                                            "number": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                            }
                                        },
                                        "required": []
                                    },
                                    "grpjobsaccrue": {
                                        "type": "object",
                                        "description": "Max number of jobs the underlying group of associations can have accruing priority at one time",
                                        "properties": {
                                            "set": {
                                                "type": "boolean",
                                                "description": "True if number has been set. False if number is unset"
                                            },
                                            "infinite": {
                                                "type": "boolean",
                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                            },
                                            "number": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                            }
                                        },
                                        "required": []
                                    },
                                    "grpsubmitjobs": {
                                        "type": "object",
                                        "description": "Max number of jobs the underlying group of associations can submit at one time",
                                        "properties": {
                                            "set": {
                                                "type": "boolean",
                                                "description": "True if number has been set. False if number is unset"
                                            },
                                            "infinite": {
                                                "type": "boolean",
                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                            },
                                            "number": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                            }
                                        },
                                        "required": []
                                    },
                                    "grptres": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "count": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                }
                                            },
                                            "required": [
                                                "type"
                                            ]
                                        }
                                    },
                                    "grptresmins": {
                                        "type": "array",
                                        "description": "Max number of cpu minutes the underlying group of associations can run for",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "count": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                }
                                            },
                                            "required": [
                                                "type"
                                            ]
                                        }
                                    },
                                    "grptresrunmins": {
                                        "type": "array",
                                        "description": "Max number of cpu minutes the underlying group of associations can having running at one time",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "count": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                }
                                            },
                                            "required": [
                                                "type"
                                            ]
                                        }
                                    },
                                    "grpwall": {
                                        "type": "object",
                                        "description": "Total time in minutes the underlying group of associations can run for",
                                        "properties": {
                                            "set": {
                                                "type": "boolean",
                                                "description": "True if number has been set. False if number is unset"
                                            },
                                            "infinite": {
                                                "type": "boolean",
                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                            },
                                            "number": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                            }
                                        },
                                        "required": []
                                    },
                                    "maxjobs": {
                                        "type": "object",
                                        "description": "Max number of jobs this association can run at one time",
                                        "properties": {
                                            "set": {
                                                "type": "boolean",
                                                "description": "True if number has been set. False if number is unset"
                                            },
                                            "infinite": {
                                                "type": "boolean",
                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                            },
                                            "number": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                            }
                                        },
                                        "required": []
                                    },
                                    "maxjobsaccrue": {
                                        "type": "object",
                                        "description": "Max number of jobs this association can have accruing priority time",
                                        "properties": {
                                            "set": {
                                                "type": "boolean",
                                                "description": "True if number has been set. False if number is unset"
                                            },
                                            "infinite": {
                                                "type": "boolean",
                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                            },
                                            "number": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                            }
                                        },
                                        "required": []
                                    },
                                    "maxsubmitjobs": {
                                        "type": "object",
                                        "description": "Max number of jobs that can be submitted by association",
                                        "properties": {
                                            "set": {
                                                "type": "boolean",
                                                "description": "True if number has been set. False if number is unset"
                                            },
                                            "infinite": {
                                                "type": "boolean",
                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                            },
                                            "number": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                            }
                                        },
                                        "required": []
                                    },
                                    "maxtresminsperjob": {
                                        "type": "array",
                                        "description": "Max number of cpu minutes this association can have per job",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "count": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                }
                                            },
                                            "required": [
                                                "type"
                                            ]
                                        }
                                    },
                                    "maxtresrunmins": {
                                        "type": "array",
                                        "description": "Max number of cpu minutes this association can having running at one time",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "count": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                }
                                            },
                                            "required": [
                                                "type"
                                            ]
                                        }
                                    },
                                    "maxtresperjob": {
                                        "type": "array",
                                        "description": "Max number of cpus this association can allocate per job",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "count": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                }
                                            },
                                            "required": [
                                                "type"
                                            ]
                                        }
                                    },
                                    "maxtrespernode": {
                                        "type": "array",
                                        "description": "Max number of TRES this association can allocate per node",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "count": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                }
                                            },
                                            "required": [
                                                "type"
                                            ]
                                        }
                                    },
                                    "maxwalldurationperjob": {
                                        "type": "object",
                                        "description": "Longest time this association can run a job",
                                        "properties": {
                                            "set": {
                                                "type": "boolean",
                                                "description": "True if number has been set. False if number is unset"
                                            },
                                            "infinite": {
                                                "type": "boolean",
                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                            },
                                            "number": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                            }
                                        },
                                        "required": []
                                    },
                                    "minpriothresh": {
                                        "type": "object",
                                        "description": "Don't reserve resources for pending jobs unless they have a priority equal to or higher than this",
                                        "properties": {
                                            "set": {
                                                "type": "boolean",
                                                "description": "True if number has been set. False if number is unset"
                                            },
                                            "infinite": {
                                                "type": "boolean",
                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                            },
                                            "number": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                            }
                                        },
                                        "required": []
                                    },
                                    "parent": {
                                        "type": "string",
                                        "description": "Name of parent account"
                                    },
                                    "priority": {
                                        "type": "object",
                                        "description": "Association priority",
                                        "properties": {
                                            "set": {
                                                "type": "boolean",
                                                "description": "True if number has been set. False if number is unset"
                                            },
                                            "infinite": {
                                                "type": "boolean",
                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                            },
                                            "number": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                            }
                                        },
                                        "required": []
                                    },
                                    "qoslevel": {
                                        "type": "array",
                                        "description": "Default QoS' that jobs are able to run at for this association",
                                        "items": {
                                            "type": "string",
                                            "description": "List of QOS names"
                                        }
                                    },
                                    "fairshare": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "Number of shares allocated to this association"
                                    }
                                },
                                "required": []
                            },
                            "clusters": {
                                "type": "array",
                                "description": "CSV clusters list",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "partitions": {
                                "type": "array",
                                "description": "CSV partitions list",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "users": {
                                "type": "array",
                                "description": "CSV users list",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "wckeys": {
                                "type": "array",
                                "description": "CSV WCKeys list",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "required": [
                            "users"
                        ]
                    },
                    "user": {
                        "type": "object",
                        "description": "Admin level of user, DefaultAccount, DefaultWCKey",
                        "properties": {
                            "adminlevel": {
                                "type": "array",
                                "description": "Admin level of user.  Valid levels are None, Operator, and Admin.",
                                "items": {
                                    "enum": [
                                        "Not Set",
                                        "None",
                                        "Operator",
                                        "Administrator"
                                    ],
                                    "type": "string"
                                }
                            },
                            "defaultaccount": {
                                "type": "string",
                                "description": "Identify the default bank account name to be used for a job if none is specified at submission time."
                            },
                            "defaultwckey": {
                                "type": "string",
                                "description": "Identify the default Workload Characterization Key."
                            }
                        },
                        "required": []
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "association_condition",
                    "user"
                ]
            },
            "v0.0.40_openapi_users_add_cond_resp_str": {
                "type": "object",
                "properties": {
                    "added_users": {
                        "type": "string",
                        "description": "added_users"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "added_users"
                ]
            },
            "v0.0.40_openapi_users_add_cond_resp": {
                "type": "object",
                "properties": {
                    "association_condition": {
                        "$ref": "#/components/schemas/v0.0.40_users_add_cond",
                        "description": "Filters to select associations for users"
                    },
                    "user": {
                        "$ref": "#/components/schemas/v0.0.40_user_short",
                        "description": "Admin level of user, DefaultAccount, DefaultWCKey"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "association_condition",
                    "user"
                ]
            },
            "v0.0.40_users_add_cond": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "$ref": "#/components/schemas/v0.0.40_string_list",
                        "description": "CSV accounts list"
                    },
                    "association": {
                        "$ref": "#/components/schemas/v0.0.40_assoc_rec_set",
                        "description": "Association limits and options"
                    },
                    "clusters": {
                        "$ref": "#/components/schemas/v0.0.40_string_list",
                        "description": "CSV clusters list"
                    },
                    "partitions": {
                        "$ref": "#/components/schemas/v0.0.40_string_list",
                        "description": "CSV partitions list"
                    },
                    "users": {
                        "$ref": "#/components/schemas/v0.0.40_string_list",
                        "description": "CSV users list"
                    },
                    "wckeys": {
                        "$ref": "#/components/schemas/v0.0.40_string_list",
                        "description": "CSV WCKeys list"
                    }
                },
                "required": [
                    "users"
                ]
            },
            "v0.0.40_assoc_rec_set": {
                "type": "object",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "Comment for the association"
                    },
                    "defaultqos": {
                        "type": "string",
                        "description": "Which QOS id is this association default"
                    },
                    "grpjobs": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val",
                        "description": "Max number of jobs the underlying group of associations can run at one time"
                    },
                    "grpjobsaccrue": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val",
                        "description": "Max number of jobs the underlying group of associations can have accruing priority at one time"
                    },
                    "grpsubmitjobs": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val",
                        "description": "Max number of jobs the underlying group of associations can submit at one time"
                    },
                    "grptres": {
                        "$ref": "#/components/schemas/v0.0.40_tres_list"
                    },
                    "grptresmins": {
                        "$ref": "#/components/schemas/v0.0.40_tres_list",
                        "description": "Max number of cpu minutes the underlying group of associations can run for"
                    },
                    "grptresrunmins": {
                        "$ref": "#/components/schemas/v0.0.40_tres_list",
                        "description": "Max number of cpu minutes the underlying group of associations can having running at one time"
                    },
                    "grpwall": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val",
                        "description": "Total time in minutes the underlying group of associations can run for"
                    },
                    "maxjobs": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val",
                        "description": "Max number of jobs this association can run at one time"
                    },
                    "maxjobsaccrue": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val",
                        "description": "Max number of jobs this association can have accruing priority time"
                    },
                    "maxsubmitjobs": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val",
                        "description": "Max number of jobs that can be submitted by association"
                    },
                    "maxtresminsperjob": {
                        "$ref": "#/components/schemas/v0.0.40_tres_list",
                        "description": "Max number of cpu minutes this association can have per job"
                    },
                    "maxtresrunmins": {
                        "$ref": "#/components/schemas/v0.0.40_tres_list",
                        "description": "Max number of cpu minutes this association can having running at one time"
                    },
                    "maxtresperjob": {
                        "$ref": "#/components/schemas/v0.0.40_tres_list",
                        "description": "Max number of cpus this association can allocate per job"
                    },
                    "maxtrespernode": {
                        "$ref": "#/components/schemas/v0.0.40_tres_list",
                        "description": "Max number of TRES this association can allocate per node"
                    },
                    "maxwalldurationperjob": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val",
                        "description": "Longest time this association can run a job"
                    },
                    "minpriothresh": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val",
                        "description": "Don't reserve resources for pending jobs unless they have a priority equal to or higher than this"
                    },
                    "parent": {
                        "type": "string",
                        "description": "Name of parent account"
                    },
                    "priority": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val",
                        "description": "Association priority"
                    },
                    "qoslevel": {
                        "$ref": "#/components/schemas/v0.0.40_qos_string_id_list",
                        "description": "List of QOS names"
                    },
                    "fairshare": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of shares allocated to this association"
                    }
                },
                "required": []
            },
            "v0.0.40_user_short": {
                "type": "object",
                "properties": {
                    "adminlevel": {
                        "type": "array",
                        "description": "Admin level of user.  Valid levels are None, Operator, and Admin.",
                        "items": {
                            "enum": [
                                "Not Set",
                                "None",
                                "Operator",
                                "Administrator"
                            ],
                            "type": "string"
                        }
                    },
                    "defaultaccount": {
                        "type": "string",
                        "description": "Identify the default bank account name to be used for a job if none is specified at submission time."
                    },
                    "defaultwckey": {
                        "type": "string",
                        "description": "Identify the default Workload Characterization Key."
                    }
                },
                "required": []
            },
            "v0.0.41_openapi_clusters_removed_resp": {
                "type": "object",
                "properties": {
                    "deleted_clusters": {
                        "type": "array",
                        "description": "deleted_clusters",
                        "items": {
                            "type": "string"
                        }
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "deleted_clusters"
                ]
            },
            "v0.0.41_openapi_clusters_resp": {
                "type": "object",
                "properties": {
                    "clusters": {
                        "type": "array",
                        "description": "clusters",
                        "items": {
                            "type": "object",
                            "properties": {
                                "controller": {
                                    "type": "object",
                                    "properties": {
                                        "host": {
                                            "type": "string"
                                        },
                                        "port": {
                                            "type": "integer",
                                            "format": "int32"
                                        }
                                    }
                                },
                                "flags": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "REGISTERING",
                                            "MULTIPLE_SLURMD",
                                            "FRONT_END",
                                            "FEDERATION",
                                            "EXTERNAL"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "name": {
                                    "type": "string"
                                },
                                "nodes": {
                                    "type": "string"
                                },
                                "select_plugin": {
                                    "type": "string",
                                    "deprecated": true
                                },
                                "associations": {
                                    "type": "object",
                                    "properties": {
                                        "root": {
                                            "type": "object",
                                            "properties": {
                                                "account": {
                                                    "type": "string",
                                                    "description": "Association account (if assigned)"
                                                },
                                                "cluster": {
                                                    "type": "string",
                                                    "description": "Association cluster (if assigned)"
                                                },
                                                "partition": {
                                                    "type": "string",
                                                    "description": "Association partition (if assigned)"
                                                },
                                                "user": {
                                                    "type": "string",
                                                    "description": "Assocation user (if assigned)"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "Numeric Association ID (if known)"
                                                }
                                            },
                                            "required": [
                                                "user"
                                            ]
                                        }
                                    }
                                },
                                "rpc_version": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "tres": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "count": {
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": []
                        }
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "clusters"
                ]
            },
            "v0.0.40_openapi_clusters_removed_resp": {
                "type": "object",
                "properties": {
                    "deleted_clusters": {
                        "$ref": "#/components/schemas/v0.0.40_string_list",
                        "description": "deleted_clusters"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "deleted_clusters"
                ]
            },
            "v0.0.40_openapi_clusters_resp": {
                "type": "object",
                "properties": {
                    "clusters": {
                        "$ref": "#/components/schemas/v0.0.40_cluster_rec_list",
                        "description": "clusters"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "clusters"
                ]
            },
            "v0.0.41_openapi_wckey_removed_resp": {
                "type": "object",
                "properties": {
                    "deleted_wckeys": {
                        "type": "array",
                        "description": "deleted wckeys",
                        "items": {
                            "type": "string"
                        }
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "deleted_wckeys"
                ]
            },
            "v0.0.41_openapi_wckey_resp": {
                "type": "object",
                "properties": {
                    "wckeys": {
                        "type": "array",
                        "description": "wckeys",
                        "items": {
                            "type": "object",
                            "properties": {
                                "accounting": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "allocated": {
                                                "type": "object",
                                                "properties": {
                                                    "seconds": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    }
                                                }
                                            },
                                            "id": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "start": {
                                                "type": "integer",
                                                "format": "int64"
                                            },
                                            "TRES": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "count": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ]
                                            }
                                        },
                                        "required": []
                                    }
                                },
                                "cluster": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "user": {
                                    "type": "string"
                                },
                                "flags": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "DELETED"
                                        ],
                                        "type": "string"
                                    }
                                }
                            },
                            "required": [
                                "cluster",
                                "name",
                                "user"
                            ]
                        }
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "wckeys"
                ]
            },
            "v0.0.40_openapi_wckey_removed_resp": {
                "type": "object",
                "properties": {
                    "deleted_wckeys": {
                        "$ref": "#/components/schemas/v0.0.40_string_list",
                        "description": "deleted wckeys"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "deleted_wckeys"
                ]
            },
            "v0.0.40_openapi_wckey_resp": {
                "type": "object",
                "properties": {
                    "wckeys": {
                        "$ref": "#/components/schemas/v0.0.40_wckey_list",
                        "description": "wckeys"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "wckeys"
                ]
            },
            "v0.0.41_openapi_accounts_removed_resp": {
                "type": "object",
                "properties": {
                    "removed_accounts": {
                        "type": "array",
                        "description": "removed_accounts",
                        "items": {
                            "type": "string"
                        }
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "removed_accounts"
                ]
            },
            "v0.0.41_openapi_accounts_resp": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "description": "accounts",
                        "items": {
                            "type": "object",
                            "properties": {
                                "associations": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "account": {
                                                "type": "string",
                                                "description": "Association account (if assigned)"
                                            },
                                            "cluster": {
                                                "type": "string",
                                                "description": "Association cluster (if assigned)"
                                            },
                                            "partition": {
                                                "type": "string",
                                                "description": "Association partition (if assigned)"
                                            },
                                            "user": {
                                                "type": "string",
                                                "description": "Assocation user (if assigned)"
                                            },
                                            "id": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "Numeric Association ID (if known)"
                                            }
                                        },
                                        "required": [
                                            "user"
                                        ]
                                    }
                                },
                                "coordinators": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "direct": {
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "name"
                                        ]
                                    }
                                },
                                "description": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "organization": {
                                    "type": "string"
                                },
                                "flags": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "DELETED",
                                            "WithAssociations",
                                            "WithCoordinators",
                                            "NoUsersAreCoords",
                                            "UsersAreCoords"
                                        ],
                                        "type": "string"
                                    }
                                }
                            },
                            "required": [
                                "description",
                                "name",
                                "organization"
                            ]
                        }
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "accounts"
                ]
            },
            "v0.0.40_openapi_accounts_removed_resp": {
                "type": "object",
                "properties": {
                    "removed_accounts": {
                        "$ref": "#/components/schemas/v0.0.40_string_list",
                        "description": "removed_accounts"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "removed_accounts"
                ]
            },
            "v0.0.40_openapi_accounts_resp": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "$ref": "#/components/schemas/v0.0.40_account_list",
                        "description": "accounts"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "accounts"
                ]
            },
            "v0.0.41_openapi_accounts_add_cond_resp_str": {
                "type": "object",
                "properties": {
                    "added_accounts": {
                        "type": "string",
                        "description": "added_accounts"
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "added_accounts"
                ]
            },
            "v0.0.41_openapi_accounts_add_cond_resp": {
                "type": "object",
                "properties": {
                    "association_condition": {
                        "type": "object",
                        "description": "CSV list of accounts, association limits and options, CSV list of clusters",
                        "properties": {
                            "accounts": {
                                "type": "array",
                                "description": "CSV accounts list",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "association": {
                                "type": "object",
                                "description": "Association limits and options",
                                "properties": {
                                    "comment": {
                                        "type": "string",
                                        "description": "Comment for the association"
                                    },
                                    "defaultqos": {
                                        "type": "string",
                                        "description": "Which QOS id is this association default"
                                    },
                                    "grpjobs": {
                                        "type": "object",
                                        "description": "Max number of jobs the underlying group of associations can run at one time",
                                        "properties": {
                                            "set": {
                                                "type": "boolean",
                                                "description": "True if number has been set. False if number is unset"
                                            },
                                            "infinite": {
                                                "type": "boolean",
                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                            },
                                            "number": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                            }
                                        },
                                        "required": []
                                    },
                                    "grpjobsaccrue": {
                                        "type": "object",
                                        "description": "Max number of jobs the underlying group of associations can have accruing priority at one time",
                                        "properties": {
                                            "set": {
                                                "type": "boolean",
                                                "description": "True if number has been set. False if number is unset"
                                            },
                                            "infinite": {
                                                "type": "boolean",
                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                            },
                                            "number": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                            }
                                        },
                                        "required": []
                                    },
                                    "grpsubmitjobs": {
                                        "type": "object",
                                        "description": "Max number of jobs the underlying group of associations can submit at one time",
                                        "properties": {
                                            "set": {
                                                "type": "boolean",
                                                "description": "True if number has been set. False if number is unset"
                                            },
                                            "infinite": {
                                                "type": "boolean",
                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                            },
                                            "number": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                            }
                                        },
                                        "required": []
                                    },
                                    "grptres": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "count": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                }
                                            },
                                            "required": [
                                                "type"
                                            ]
                                        }
                                    },
                                    "grptresmins": {
                                        "type": "array",
                                        "description": "Max number of cpu minutes the underlying group of associations can run for",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "count": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                }
                                            },
                                            "required": [
                                                "type"
                                            ]
                                        }
                                    },
                                    "grptresrunmins": {
                                        "type": "array",
                                        "description": "Max number of cpu minutes the underlying group of associations can having running at one time",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "count": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                }
                                            },
                                            "required": [
                                                "type"
                                            ]
                                        }
                                    },
                                    "grpwall": {
                                        "type": "object",
                                        "description": "Total time in minutes the underlying group of associations can run for",
                                        "properties": {
                                            "set": {
                                                "type": "boolean",
                                                "description": "True if number has been set. False if number is unset"
                                            },
                                            "infinite": {
                                                "type": "boolean",
                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                            },
                                            "number": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                            }
                                        },
                                        "required": []
                                    },
                                    "maxjobs": {
                                        "type": "object",
                                        "description": "Max number of jobs this association can run at one time",
                                        "properties": {
                                            "set": {
                                                "type": "boolean",
                                                "description": "True if number has been set. False if number is unset"
                                            },
                                            "infinite": {
                                                "type": "boolean",
                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                            },
                                            "number": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                            }
                                        },
                                        "required": []
                                    },
                                    "maxjobsaccrue": {
                                        "type": "object",
                                        "description": "Max number of jobs this association can have accruing priority time",
                                        "properties": {
                                            "set": {
                                                "type": "boolean",
                                                "description": "True if number has been set. False if number is unset"
                                            },
                                            "infinite": {
                                                "type": "boolean",
                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                            },
                                            "number": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                            }
                                        },
                                        "required": []
                                    },
                                    "maxsubmitjobs": {
                                        "type": "object",
                                        "description": "Max number of jobs that can be submitted by association",
                                        "properties": {
                                            "set": {
                                                "type": "boolean",
                                                "description": "True if number has been set. False if number is unset"
                                            },
                                            "infinite": {
                                                "type": "boolean",
                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                            },
                                            "number": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                            }
                                        },
                                        "required": []
                                    },
                                    "maxtresminsperjob": {
                                        "type": "array",
                                        "description": "Max number of cpu minutes this association can have per job",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "count": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                }
                                            },
                                            "required": [
                                                "type"
                                            ]
                                        }
                                    },
                                    "maxtresrunmins": {
                                        "type": "array",
                                        "description": "Max number of cpu minutes this association can having running at one time",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "count": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                }
                                            },
                                            "required": [
                                                "type"
                                            ]
                                        }
                                    },
                                    "maxtresperjob": {
                                        "type": "array",
                                        "description": "Max number of cpus this association can allocate per job",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "count": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                }
                                            },
                                            "required": [
                                                "type"
                                            ]
                                        }
                                    },
                                    "maxtrespernode": {
                                        "type": "array",
                                        "description": "Max number of TRES this association can allocate per node",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "count": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                }
                                            },
                                            "required": [
                                                "type"
                                            ]
                                        }
                                    },
                                    "maxwalldurationperjob": {
                                        "type": "object",
                                        "description": "Longest time this association can run a job",
                                        "properties": {
                                            "set": {
                                                "type": "boolean",
                                                "description": "True if number has been set. False if number is unset"
                                            },
                                            "infinite": {
                                                "type": "boolean",
                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                            },
                                            "number": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                            }
                                        },
                                        "required": []
                                    },
                                    "minpriothresh": {
                                        "type": "object",
                                        "description": "Don't reserve resources for pending jobs unless they have a priority equal to or higher than this",
                                        "properties": {
                                            "set": {
                                                "type": "boolean",
                                                "description": "True if number has been set. False if number is unset"
                                            },
                                            "infinite": {
                                                "type": "boolean",
                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                            },
                                            "number": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                            }
                                        },
                                        "required": []
                                    },
                                    "parent": {
                                        "type": "string",
                                        "description": "Name of parent account"
                                    },
                                    "priority": {
                                        "type": "object",
                                        "description": "Association priority",
                                        "properties": {
                                            "set": {
                                                "type": "boolean",
                                                "description": "True if number has been set. False if number is unset"
                                            },
                                            "infinite": {
                                                "type": "boolean",
                                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                            },
                                            "number": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                            }
                                        },
                                        "required": []
                                    },
                                    "qoslevel": {
                                        "type": "array",
                                        "description": "Default QoS' that jobs are able to run at for this association",
                                        "items": {
                                            "type": "string",
                                            "description": "List of QOS names"
                                        }
                                    },
                                    "fairshare": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "Number of shares allocated to this association"
                                    }
                                },
                                "required": []
                            },
                            "clusters": {
                                "type": "array",
                                "description": "CSV clusters list",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "required": [
                            "accounts"
                        ]
                    },
                    "account": {
                        "type": "object",
                        "description": "Account organization and description",
                        "properties": {
                            "description": {
                                "type": "string",
                                "description": "An arbitrary string describing an account"
                            },
                            "organization": {
                                "type": "string",
                                "description": "Organization to which the account belongs"
                            }
                        },
                        "required": []
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": []
            },
            "v0.0.40_openapi_accounts_add_cond_resp_str": {
                "type": "object",
                "properties": {
                    "added_accounts": {
                        "type": "string",
                        "description": "added_accounts"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "added_accounts"
                ]
            },
            "v0.0.40_openapi_accounts_add_cond_resp": {
                "type": "object",
                "properties": {
                    "association_condition": {
                        "$ref": "#/components/schemas/v0.0.40_accounts_add_cond",
                        "description": "CSV list of accounts, association limits and options, CSV list of clusters"
                    },
                    "account": {
                        "$ref": "#/components/schemas/v0.0.40_account_short",
                        "description": "Account organization and description"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": []
            },
            "v0.0.40_accounts_add_cond": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "$ref": "#/components/schemas/v0.0.40_string_list",
                        "description": "CSV accounts list"
                    },
                    "association": {
                        "$ref": "#/components/schemas/v0.0.40_assoc_rec_set",
                        "description": "Association limits and options"
                    },
                    "clusters": {
                        "$ref": "#/components/schemas/v0.0.40_string_list",
                        "description": "CSV clusters list"
                    }
                },
                "required": [
                    "accounts"
                ]
            },
            "v0.0.40_account_short": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "An arbitrary string describing an account"
                    },
                    "organization": {
                        "type": "string",
                        "description": "Organization to which the account belongs"
                    }
                },
                "required": []
            },
            "v0.0.41_openapi_slurmdbd_stats_resp": {
                "type": "object",
                "properties": {
                    "statistics": {
                        "type": "object",
                        "description": "statistics",
                        "properties": {
                            "time_start": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "rollups": {
                                "type": "object",
                                "properties": {
                                    "hourly": {
                                        "type": "object",
                                        "properties": {
                                            "count": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "number of hourly rollups since last_run"
                                            },
                                            "last_run": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": "Last time hourly rollup ran (UNIX timestamp)"
                                            },
                                            "duration": {
                                                "type": "object",
                                                "properties": {
                                                    "last": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "total time spent doing last daily rollup (seconds)"
                                                    },
                                                    "max": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "longest hourly rollup time (seconds)"
                                                    },
                                                    "time": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "total time spent doing hourly rollups (seconds)"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "daily": {
                                        "type": "object",
                                        "properties": {
                                            "count": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "number of daily rollups since last_run"
                                            },
                                            "last_run": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": "Last time daily rollup ran (UNIX timestamp)"
                                            },
                                            "duration": {
                                                "type": "object",
                                                "properties": {
                                                    "last": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "total time spent doing daily daily rollup (seconds)"
                                                    },
                                                    "max": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "longest daily rollup time (seconds)"
                                                    },
                                                    "time": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "total time spent doing daily rollups (seconds)"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "monthly": {
                                        "type": "object",
                                        "properties": {
                                            "count": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "number of monthly rollups since last_run"
                                            },
                                            "last_run": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": "Last time monthly rollup ran (UNIX timestamp)"
                                            },
                                            "duration": {
                                                "type": "object",
                                                "properties": {
                                                    "last": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "total time spent doing monthly daily rollup (seconds)"
                                                    },
                                                    "max": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "longest monthly rollup time (seconds)"
                                                    },
                                                    "time": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "total time spent doing monthly rollups (seconds)"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "required": [
                                    "hourly/count",
                                    "daily/count",
                                    "monthly/count",
                                    "hourly/last_run",
                                    "daily/last_run",
                                    "monthly/last_run",
                                    "hourly/duration/last",
                                    "daily/duration/last",
                                    "monthly/duration/last",
                                    "hourly/duration/max",
                                    "daily/duration/max",
                                    "monthly/duration/max",
                                    "hourly/duration/time",
                                    "daily/duration/time",
                                    "monthly/duration/time"
                                ]
                            },
                            "RPCs": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "rpc": {
                                            "type": "string"
                                        },
                                        "count": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "time": {
                                            "type": "object",
                                            "properties": {
                                                "average": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                }
                                            }
                                        }
                                    },
                                    "required": []
                                }
                            },
                            "users": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "string"
                                        },
                                        "count": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "time": {
                                            "type": "object",
                                            "properties": {
                                                "average": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                }
                                            }
                                        }
                                    },
                                    "required": []
                                }
                            }
                        },
                        "required": []
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "statistics"
                ]
            },
            "v0.0.40_openapi_slurmdbd_stats_resp": {
                "type": "object",
                "properties": {
                    "statistics": {
                        "$ref": "#/components/schemas/v0.0.40_stats_rec",
                        "description": "statistics"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "statistics"
                ]
            },
            "v0.0.40_stats_rec": {
                "type": "object",
                "properties": {
                    "time_start": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "rollups": {
                        "$ref": "#/components/schemas/v0.0.40_rollup_stats"
                    },
                    "RPCs": {
                        "$ref": "#/components/schemas/v0.0.40_stats_rpc_list"
                    },
                    "users": {
                        "$ref": "#/components/schemas/v0.0.40_stats_user_list"
                    }
                },
                "required": []
            },
            "v0.0.40_rollup_stats": {
                "type": "array",
                "description": "list of recorded rollup statistics",
                "items": {
                    "type": "object",
                    "description": "recorded rollup statistics",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "type",
                            "enum": [
                                "internal",
                                "user",
                                "unknown"
                            ]
                        },
                        "last run": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Last time rollup ran (UNIX timestamp)"
                        },
                        "max_cycle": {
                            "type": "integer",
                            "format": "int64",
                            "description": "longest rollup time (seconds)"
                        },
                        "total_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "total time spent doing rollups (seconds)"
                        },
                        "total_cycles": {
                            "type": "integer",
                            "format": "int64",
                            "description": "number of rollups since last_run"
                        },
                        "mean_cycles": {
                            "type": "integer",
                            "format": "int64",
                            "description": "average time for rollup (seconds)"
                        }
                    }
                }
            },
            "v0.0.40_stats_rpc_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_stats_rpc"
                }
            },
            "v0.0.40_stats_rpc": {
                "type": "object",
                "properties": {
                    "rpc": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "time": {
                        "type": "object",
                        "properties": {
                            "average": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "total": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.40_stats_user_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_stats_user"
                }
            },
            "v0.0.40_stats_user": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "time": {
                        "type": "object",
                        "properties": {
                            "average": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "total": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.41_openapi_shares_resp": {
                "type": "object",
                "properties": {
                    "shares": {
                        "type": "object",
                        "description": "fairshare info",
                        "properties": {
                            "shares": {
                                "type": "array",
                                "description": "Assocation shares",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "assocation id"
                                        },
                                        "cluster": {
                                            "type": "string",
                                            "description": "cluster name"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "share name"
                                        },
                                        "parent": {
                                            "type": "string",
                                            "description": "parent name"
                                        },
                                        "partition": {
                                            "type": "string",
                                            "description": "partition name"
                                        },
                                        "shares_normalized": {
                                            "type": "object",
                                            "description": "normalized shares",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "number",
                                                    "format": "double",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "shares": {
                                            "type": "object",
                                            "description": "number of shares allocated",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "tres": {
                                            "type": "object",
                                            "properties": {
                                                "run_seconds": {
                                                    "type": "array",
                                                    "description": "currently running tres-secs = grp_used_tres_run_secs",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "description": "TRES name"
                                                            },
                                                            "value": {
                                                                "type": "object",
                                                                "description": "TRES value",
                                                                "properties": {
                                                                    "set": {
                                                                        "type": "boolean",
                                                                        "description": "True if number has been set. False if number is unset"
                                                                    },
                                                                    "infinite": {
                                                                        "type": "boolean",
                                                                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                    },
                                                                    "number": {
                                                                        "type": "integer",
                                                                        "format": "int64",
                                                                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                    }
                                                                },
                                                                "required": []
                                                            }
                                                        },
                                                        "required": []
                                                    }
                                                },
                                                "group_minutes": {
                                                    "type": "array",
                                                    "description": "tres-minute limit",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "description": "TRES name"
                                                            },
                                                            "value": {
                                                                "type": "object",
                                                                "description": "TRES value",
                                                                "properties": {
                                                                    "set": {
                                                                        "type": "boolean",
                                                                        "description": "True if number has been set. False if number is unset"
                                                                    },
                                                                    "infinite": {
                                                                        "type": "boolean",
                                                                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                                    },
                                                                    "number": {
                                                                        "type": "integer",
                                                                        "format": "int64",
                                                                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                                    }
                                                                },
                                                                "required": []
                                                            }
                                                        },
                                                        "required": []
                                                    }
                                                },
                                                "usage": {
                                                    "type": "array",
                                                    "description": "measure of each tres usage",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "description": "TRES name"
                                                            },
                                                            "value": {
                                                                "type": "number",
                                                                "description": "TRES value"
                                                            }
                                                        },
                                                        "required": []
                                                    }
                                                }
                                            }
                                        },
                                        "effective_usage": {
                                            "type": "number",
                                            "format": "double",
                                            "description": "effective, normalized usage"
                                        },
                                        "usage_normalized": {
                                            "type": "object",
                                            "description": "normalized usage",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "number",
                                                    "format": "double",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "usage": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "measure of tresbillableunits usage"
                                        },
                                        "fairshare": {
                                            "type": "object",
                                            "properties": {
                                                "factor": {
                                                    "type": "number",
                                                    "format": "double",
                                                    "description": "fairshare factor"
                                                },
                                                "level": {
                                                    "type": "number",
                                                    "format": "double",
                                                    "description": "fairshare factor at this level. stored on an assoc as a long double, but that is not needed for display in sshare"
                                                }
                                            }
                                        },
                                        "type": {
                                            "type": "array",
                                            "description": "user or account association",
                                            "items": {
                                                "enum": [
                                                    "USER",
                                                    "ASSOCIATION"
                                                ],
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": []
                                }
                            },
                            "total_shares": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Total number of shares"
                            }
                        },
                        "required": []
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "shares"
                ]
            },
            "v0.0.40_openapi_shares_resp": {
                "type": "object",
                "properties": {
                    "shares": {
                        "$ref": "#/components/schemas/v0.0.40_shares_resp_msg",
                        "description": "fairshare info"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "shares"
                ]
            },
            "v0.0.40_shares_resp_msg": {
                "type": "object",
                "properties": {
                    "shares": {
                        "$ref": "#/components/schemas/v0.0.40_assoc_shares_obj_list",
                        "description": "Assocation shares"
                    },
                    "total_shares": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Total number of shares"
                    }
                },
                "required": []
            },
            "v0.0.40_assoc_shares_obj_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_assoc_shares_obj_wrap"
                }
            },
            "v0.0.40_assoc_shares_obj_wrap": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "assocation id"
                    },
                    "cluster": {
                        "type": "string",
                        "description": "cluster name"
                    },
                    "name": {
                        "type": "string",
                        "description": "share name"
                    },
                    "parent": {
                        "type": "string",
                        "description": "parent name"
                    },
                    "partition": {
                        "type": "string",
                        "description": "partition name"
                    },
                    "shares_normalized": {
                        "$ref": "#/components/schemas/v0.0.40_float64_no_val",
                        "description": "normalized shares"
                    },
                    "shares": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val",
                        "description": "number of shares allocated"
                    },
                    "tres": {
                        "type": "object",
                        "properties": {
                            "run_seconds": {
                                "$ref": "#/components/schemas/v0.0.40_shares_uint64_tres_list",
                                "description": "currently running tres-secs = grp_used_tres_run_secs"
                            },
                            "group_minutes": {
                                "$ref": "#/components/schemas/v0.0.40_shares_uint64_tres_list",
                                "description": "tres-minute limit"
                            },
                            "usage": {
                                "$ref": "#/components/schemas/v0.0.40_shares_float128_tres_list",
                                "description": "measure of each tres usage"
                            }
                        }
                    },
                    "effective_usage": {
                        "type": "number",
                        "format": "double",
                        "description": "effective, normalized usage"
                    },
                    "usage_normalized": {
                        "$ref": "#/components/schemas/v0.0.40_float64_no_val",
                        "description": "normalized usage"
                    },
                    "usage": {
                        "type": "integer",
                        "format": "int64",
                        "description": "measure of tresbillableunits usage"
                    },
                    "fairshare": {
                        "type": "object",
                        "properties": {
                            "factor": {
                                "type": "number",
                                "format": "double",
                                "description": "fairshare factor"
                            },
                            "level": {
                                "type": "number",
                                "format": "double",
                                "description": "fairshare factor at this level. stored on an assoc as a long double, but that is not needed for display in sshare"
                            }
                        }
                    },
                    "type": {
                        "type": "array",
                        "description": "user or account association",
                        "items": {
                            "enum": [
                                "USER",
                                "ASSOCIATION"
                            ],
                            "type": "string"
                        }
                    }
                },
                "required": []
            },
            "v0.0.40_shares_uint64_tres_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_shares_uint64_tres"
                }
            },
            "v0.0.40_shares_uint64_tres": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "TRES name"
                    },
                    "value": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val",
                        "description": "TRES value"
                    }
                },
                "required": []
            },
            "v0.0.40_shares_float128_tres_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_shares_float128_tres"
                }
            },
            "v0.0.40_shares_float128_tres": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "TRES name"
                    },
                    "value": {
                        "type": "number",
                        "description": "TRES value"
                    }
                },
                "required": []
            },
            "v0.0.41_openapi_diag_resp": {
                "type": "object",
                "properties": {
                    "statistics": {
                        "type": "object",
                        "description": "statistics",
                        "properties": {
                            "parts_packed": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "req_time": {
                                "type": "object",
                                "description": "64 bit integer number with flags",
                                "properties": {
                                    "set": {
                                        "type": "boolean",
                                        "description": "True if number has been set. False if number is unset"
                                    },
                                    "infinite": {
                                        "type": "boolean",
                                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                    },
                                    "number": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                    }
                                },
                                "required": []
                            },
                            "req_time_start": {
                                "type": "object",
                                "description": "64 bit integer number with flags",
                                "properties": {
                                    "set": {
                                        "type": "boolean",
                                        "description": "True if number has been set. False if number is unset"
                                    },
                                    "infinite": {
                                        "type": "boolean",
                                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                    },
                                    "number": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                    }
                                },
                                "required": []
                            },
                            "server_thread_count": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "agent_queue_size": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "agent_count": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "agent_thread_count": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "dbd_agent_queue_size": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "gettimeofday_latency": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "schedule_cycle_max": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "schedule_cycle_last": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "schedule_cycle_sum": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "schedule_cycle_total": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "schedule_cycle_mean": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "schedule_cycle_mean_depth": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "schedule_cycle_per_minute": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "schedule_cycle_depth": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "schedule_exit": {
                                "type": "object",
                                "properties": {
                                    "end_job_queue": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "default_queue_depth": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "max_job_start": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "max_rpc_cnt": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "max_sched_time": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "licenses": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                },
                                "required": []
                            },
                            "schedule_queue_length": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "jobs_submitted": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "jobs_started": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "jobs_completed": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "jobs_canceled": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "jobs_failed": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "jobs_pending": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "jobs_running": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "job_states_ts": {
                                "type": "object",
                                "description": "64 bit integer number with flags",
                                "properties": {
                                    "set": {
                                        "type": "boolean",
                                        "description": "True if number has been set. False if number is unset"
                                    },
                                    "infinite": {
                                        "type": "boolean",
                                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                    },
                                    "number": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                    }
                                },
                                "required": []
                            },
                            "bf_backfilled_jobs": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "bf_last_backfilled_jobs": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "bf_backfilled_het_jobs": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "bf_cycle_counter": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "bf_cycle_mean": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "bf_depth_mean": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "bf_depth_mean_try": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "bf_cycle_sum": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "bf_cycle_last": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "bf_cycle_max": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "bf_exit": {
                                "type": "object",
                                "properties": {
                                    "end_job_queue": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "bf_max_job_start": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "bf_max_job_test": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "bf_max_time": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "bf_node_space_size": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "state_changed": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                },
                                "required": []
                            },
                            "bf_last_depth": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "bf_last_depth_try": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "bf_depth_sum": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "bf_depth_try_sum": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "bf_queue_len": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "bf_queue_len_mean": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "bf_queue_len_sum": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "bf_table_size": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "bf_table_size_sum": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "bf_table_size_mean": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "bf_when_last_cycle": {
                                "type": "object",
                                "description": "64 bit integer number with flags",
                                "properties": {
                                    "set": {
                                        "type": "boolean",
                                        "description": "True if number has been set. False if number is unset"
                                    },
                                    "infinite": {
                                        "type": "boolean",
                                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                    },
                                    "number": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                    }
                                },
                                "required": []
                            },
                            "bf_active": {
                                "type": "boolean"
                            },
                            "rpcs_by_message_type": {
                                "type": "array",
                                "description": "RPCs by type",
                                "items": {
                                    "type": "object",
                                    "description": "RPCs by type",
                                    "properties": {
                                        "type_id": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Message type as integer"
                                        },
                                        "message_type": {
                                            "type": "string",
                                            "description": "Message type as string"
                                        },
                                        "count": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Number of RPCs received"
                                        },
                                        "queued": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Number of RPCs queued"
                                        },
                                        "dropped": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "Number of RPCs dropped"
                                        },
                                        "cycle_last": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Number of RPCs processed within the last RPC queue cycle"
                                        },
                                        "cycle_max": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Maximum number of RPCs processed within a RPC queue cycle since start"
                                        },
                                        "total_time": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "Total time spent processing RPC in seconds"
                                        },
                                        "average_time": {
                                            "type": "object",
                                            "description": "Average time spent processing RPC in seconds",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        }
                                    },
                                    "required": [
                                        "type_id",
                                        "message_type",
                                        "count",
                                        "queued",
                                        "dropped",
                                        "cycle_last",
                                        "cycle_max",
                                        "total_time",
                                        "average_time"
                                    ]
                                }
                            },
                            "rpcs_by_user": {
                                "type": "array",
                                "description": "RPCs by user",
                                "items": {
                                    "type": "object",
                                    "description": "RPCs by user",
                                    "properties": {
                                        "user_id": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "user id (numeric)"
                                        },
                                        "user": {
                                            "type": "string",
                                            "description": "user name"
                                        },
                                        "count": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Number of RPCs received"
                                        },
                                        "total_time": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "Total time spent processing RPC in seconds"
                                        },
                                        "average_time": {
                                            "type": "object",
                                            "description": "Average time spent processing RPC in seconds",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        }
                                    },
                                    "required": [
                                        "user_id",
                                        "user",
                                        "count",
                                        "total_time",
                                        "average_time"
                                    ]
                                }
                            },
                            "pending_rpcs": {
                                "type": "array",
                                "description": "Pending RPC statistics",
                                "items": {
                                    "type": "object",
                                    "description": "Pending RPCs",
                                    "properties": {
                                        "type_id": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Message type as integer"
                                        },
                                        "message_type": {
                                            "type": "string",
                                            "description": "Message type as string"
                                        },
                                        "count": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Number of pending RPCs queued"
                                        }
                                    },
                                    "required": [
                                        "type_id",
                                        "message_type",
                                        "count"
                                    ]
                                }
                            },
                            "pending_rpcs_by_hostlist": {
                                "type": "array",
                                "description": "Pending RPCs hostlists",
                                "items": {
                                    "type": "object",
                                    "description": "Pending RPCs by hostlist",
                                    "properties": {
                                        "type_id": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Message type as integer"
                                        },
                                        "message_type": {
                                            "type": "string",
                                            "description": "Message type as string"
                                        },
                                        "count": {
                                            "type": "array",
                                            "description": "Number of RPCs received",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": [
                                        "type_id",
                                        "message_type",
                                        "count"
                                    ]
                                }
                            }
                        },
                        "required": []
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "statistics"
                ]
            },
            "v0.0.40_openapi_diag_resp": {
                "type": "object",
                "properties": {
                    "statistics": {
                        "$ref": "#/components/schemas/v0.0.40_stats_msg",
                        "description": "statistics"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "statistics"
                ]
            },
            "v0.0.40_stats_msg": {
                "type": "object",
                "properties": {
                    "parts_packed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "req_time": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "req_time_start": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "server_thread_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "agent_queue_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "agent_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "agent_thread_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dbd_agent_queue_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "gettimeofday_latency": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "schedule_cycle_max": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "schedule_cycle_last": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "schedule_cycle_total": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "schedule_cycle_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "schedule_cycle_mean_depth": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "schedule_cycle_per_minute": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "schedule_queue_length": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "schedule_exit": {
                        "$ref": "#/components/schemas/v0.0.40_schedule_exit_fields"
                    },
                    "jobs_submitted": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_started": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_completed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_canceled": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_failed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_pending": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_running": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "job_states_ts": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "bf_backfilled_jobs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_last_backfilled_jobs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_backfilled_het_jobs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_cycle_counter": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_cycle_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_depth_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_depth_mean_try": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_cycle_sum": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_cycle_last": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_last_depth": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_last_depth_try": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_depth_sum": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_depth_try_sum": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_queue_len": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_queue_len_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_queue_len_sum": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_table_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_table_size_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_when_last_cycle": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "bf_active": {
                        "type": "boolean"
                    },
                    "bf_exit": {
                        "$ref": "#/components/schemas/v0.0.40_bf_exit_fields"
                    },
                    "rpcs_by_message_type": {
                        "$ref": "#/components/schemas/v0.0.40_stats_msg_rpcs_by_type"
                    },
                    "rpcs_by_user": {
                        "$ref": "#/components/schemas/v0.0.40_stats_msg_rpcs_by_user"
                    }
                },
                "required": []
            },
            "v0.0.40_schedule_exit_fields": {
                "type": "object",
                "properties": {
                    "end_job_queue": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "default_queue_depth": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "max_job_start": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "max_rpc_cnt": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "max_sched_time": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "licenses": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "required": []
            },
            "v0.0.40_bf_exit_fields": {
                "type": "object",
                "properties": {
                    "end_job_queue": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_max_job_start": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_max_job_test": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_max_time": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_node_space_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "state_changed": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "required": []
            },
            "v0.0.40_stats_msg_rpcs_by_type": {
                "type": "array",
                "description": "RPCs by message type",
                "items": {
                    "type": "object",
                    "description": "RPC",
                    "properties": {
                        "message_type": {
                            "type": "string",
                            "description": "Message type as string"
                        },
                        "type_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Message type as integer"
                        },
                        "count": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number of RPCs received"
                        },
                        "average_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Average time spent processing RPC in seconds"
                        },
                        "total_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Total time spent processing RPC in seconds"
                        }
                    }
                }
            },
            "v0.0.40_stats_msg_rpcs_by_user": {
                "type": "array",
                "description": "RPCs by user",
                "items": {
                    "type": "object",
                    "description": "user",
                    "properties": {
                        "user": {
                            "type": "string",
                            "description": "user name"
                        },
                        "user_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "user id (numeric)"
                        },
                        "count": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number of RPCs received"
                        },
                        "average_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Average time spent processing RPC in seconds"
                        },
                        "total_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Total time spent processing RPC in seconds"
                        }
                    }
                }
            },
            "v0.0.41_openapi_ping_array_resp": {
                "type": "object",
                "properties": {
                    "pings": {
                        "type": "array",
                        "description": "pings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "hostname": {
                                    "type": "string"
                                },
                                "pinged": {
                                    "type": "string"
                                },
                                "latency": {
                                    "type": "integer",
                                    "format": "int64"
                                },
                                "mode": {
                                    "type": "string"
                                }
                            },
                            "required": []
                        }
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "pings"
                ]
            },
            "v0.0.40_openapi_ping_array_resp": {
                "type": "object",
                "properties": {
                    "pings": {
                        "$ref": "#/components/schemas/v0.0.40_controller_ping_array",
                        "description": "pings"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "pings"
                ]
            },
            "v0.0.40_controller_ping_array": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_controller_ping"
                }
            },
            "v0.0.40_controller_ping": {
                "type": "object",
                "properties": {
                    "hostname": {
                        "type": "string"
                    },
                    "pinged": {
                        "type": "string"
                    },
                    "latency": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "mode": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.41_openapi_licenses_resp": {
                "type": "object",
                "properties": {
                    "licenses": {
                        "type": "array",
                        "description": "list of licenses",
                        "items": {
                            "type": "object",
                            "properties": {
                                "LicenseName": {
                                    "type": "string"
                                },
                                "Total": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "Used": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "Free": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "Remote": {
                                    "type": "boolean"
                                },
                                "Reserved": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "LastConsumed": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "LastDeficit": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "LastUpdate": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            },
                            "required": []
                        }
                    },
                    "last_update": {
                        "type": "object",
                        "description": "time of last licenses change (UNIX timestamp)",
                        "properties": {
                            "set": {
                                "type": "boolean",
                                "description": "True if number has been set. False if number is unset"
                            },
                            "infinite": {
                                "type": "boolean",
                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                            },
                            "number": {
                                "type": "integer",
                                "format": "int64",
                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                            }
                        },
                        "required": []
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "licenses",
                    "last_update"
                ]
            },
            "v0.0.40_openapi_licenses_resp": {
                "type": "object",
                "properties": {
                    "licenses": {
                        "$ref": "#/components/schemas/v0.0.40_licenses",
                        "description": "list of licenses"
                    },
                    "last_update": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val",
                        "description": "time of last licenses change (UNIX timestamp)"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "licenses",
                    "last_update"
                ]
            },
            "v0.0.40_licenses": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_license"
                }
            },
            "v0.0.40_license": {
                "type": "object",
                "properties": {
                    "LicenseName": {
                        "type": "string"
                    },
                    "Total": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Used": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Free": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Remote": {
                        "type": "boolean"
                    },
                    "Reserved": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "LastConsumed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "LastDeficit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "LastUpdate": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": []
            },
            "v0.0.41_openapi_job_submit_response": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "object",
                        "description": "Job submission",
                        "properties": {
                            "job_id": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "step_id": {
                                "type": "string"
                            },
                            "error_code": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "error": {
                                "type": "string"
                            },
                            "job_submit_user_msg": {
                                "type": "string"
                            }
                        },
                        "required": [],
                        "deprecated": true
                    },
                    "job_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "submited JobId"
                    },
                    "step_id": {
                        "type": "string",
                        "description": "submited StepID"
                    },
                    "job_submit_user_msg": {
                        "type": "string",
                        "description": "job submision user message"
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": []
            },
            "v0.0.41_job_submit_req": {
                "type": "object",
                "properties": {
                    "script": {
                        "type": "string",
                        "description": "Deprecated. Populate script field in jobs[0] or job.",
                        "deprecated": true
                    },
                    "jobs": {
                        "type": "array",
                        "description": "HetJob description",
                        "items": {
                            "$ref": "#/components/schemas/v0.0.41_job_desc_msg"
                        }
                    },
                    "job": {
                        "$ref": "#/components/schemas/v0.0.41_job_desc_msg",
                        "description": "Job description"
                    }
                },
                "required": []
            },
            "v0.0.41_job_desc_msg": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "account_gather_frequency": {
                        "type": "string"
                    },
                    "admin_comment": {
                        "type": "string"
                    },
                    "allocation_node_list": {
                        "type": "string"
                    },
                    "allocation_node_port": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "argv": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "array": {
                        "type": "string"
                    },
                    "batch_features": {
                        "type": "string"
                    },
                    "begin_time": {
                        "type": "object",
                        "description": "64 bit integer number with flags",
                        "properties": {
                            "set": {
                                "type": "boolean",
                                "description": "True if number has been set. False if number is unset"
                            },
                            "infinite": {
                                "type": "boolean",
                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                            },
                            "number": {
                                "type": "integer",
                                "format": "int64",
                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                            }
                        },
                        "required": []
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "KILL_INVALID_DEPENDENCY",
                                "NO_KILL_INVALID_DEPENDENCY",
                                "HAS_STATE_DIRECTORY",
                                "TESTING_BACKFILL",
                                "GRES_BINDING_ENFORCED",
                                "TEST_NOW_ONLY",
                                "SEND_JOB_ENVIRONMENT",
                                "SPREAD_JOB",
                                "PREFER_MINIMUM_NODE_COUNT",
                                "JOB_KILL_HURRY",
                                "SKIP_TRES_STRING_ACCOUNTING",
                                "SIBLING_CLUSTER_UPDATE_ONLY",
                                "HETEROGENEOUS_JOB",
                                "EXACT_TASK_COUNT_REQUESTED",
                                "EXACT_CPU_COUNT_REQUESTED",
                                "TESTING_WHOLE_NODE_BACKFILL",
                                "TOP_PRIORITY_JOB",
                                "ACCRUE_COUNT_CLEARED",
                                "GRED_BINDING_DISABLED",
                                "JOB_WAS_RUNNING",
                                "JOB_ACCRUE_TIME_RESET",
                                "CRON_JOB",
                                "EXACT_MEMORY_REQUESTED",
                                "USING_DEFAULT_ACCOUNT",
                                "USING_DEFAULT_PARTITION",
                                "USING_DEFAULT_QOS",
                                "USING_DEFAULT_WCKEY",
                                "DEPENDENT",
                                "MAGNETIC",
                                "PARTITION_ASSIGNED",
                                "BACKFILL_ATTEMPTED",
                                "SCHEDULING_ATTEMPTED",
                                "STEPMGR_ENABLED"
                            ],
                            "type": "string"
                        }
                    },
                    "burst_buffer": {
                        "type": "string"
                    },
                    "clusters": {
                        "type": "string"
                    },
                    "cluster_constraint": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "contiguous": {
                        "type": "boolean"
                    },
                    "container": {
                        "type": "string"
                    },
                    "container_id": {
                        "type": "string"
                    },
                    "core_specification": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "thread_specification": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cpu_binding": {
                        "type": "string"
                    },
                    "cpu_binding_flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "CPU_BIND_TO_THREADS",
                                "CPU_BIND_TO_CORES",
                                "CPU_BIND_TO_SOCKETS",
                                "CPU_BIND_TO_LDOMS",
                                "CPU_BIND_NONE",
                                "CPU_BIND_RANK",
                                "CPU_BIND_MAP",
                                "CPU_BIND_MASK",
                                "CPU_BIND_LDRANK",
                                "CPU_BIND_LDMAP",
                                "CPU_BIND_LDMASK",
                                "VERBOSE",
                                "CPU_BIND_ONE_THREAD_PER_CORE"
                            ],
                            "type": "string"
                        }
                    },
                    "cpu_frequency": {
                        "type": "string"
                    },
                    "cpus_per_tres": {
                        "type": "string"
                    },
                    "crontab": {
                        "type": "object",
                        "description": "crontab entry",
                        "properties": {
                            "flags": {
                                "type": "array",
                                "items": {
                                    "enum": [
                                        "WILD_MINUTE",
                                        "WILD_HOUR",
                                        "WILD_DAY_OF_MONTH",
                                        "WILD_MONTH",
                                        "WILD_DAY_OF_WEEK"
                                    ],
                                    "type": "string"
                                }
                            },
                            "minute": {
                                "type": "string"
                            },
                            "hour": {
                                "type": "string"
                            },
                            "day_of_month": {
                                "type": "string"
                            },
                            "month": {
                                "type": "string"
                            },
                            "day_of_week": {
                                "type": "string"
                            },
                            "specification": {
                                "type": "string"
                            },
                            "command": {
                                "type": "string"
                            },
                            "line": {
                                "type": "object",
                                "properties": {
                                    "start": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "end": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "deadline": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "delay_boot": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dependency": {
                        "type": "string"
                    },
                    "end_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "environment": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rlimits": {
                        "type": "object",
                        "properties": {
                            "cpu": {
                                "type": "object",
                                "description": "Per-process CPU limit, in seconds.",
                                "properties": {
                                    "set": {
                                        "type": "boolean",
                                        "description": "True if number has been set. False if number is unset"
                                    },
                                    "infinite": {
                                        "type": "boolean",
                                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                    },
                                    "number": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                    }
                                },
                                "required": []
                            },
                            "fsize": {
                                "type": "object",
                                "description": "Largest file that can be created, in bytes.",
                                "properties": {
                                    "set": {
                                        "type": "boolean",
                                        "description": "True if number has been set. False if number is unset"
                                    },
                                    "infinite": {
                                        "type": "boolean",
                                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                    },
                                    "number": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                    }
                                },
                                "required": []
                            },
                            "data": {
                                "type": "object",
                                "description": "Maximum size of data segment, in bytes. ",
                                "properties": {
                                    "set": {
                                        "type": "boolean",
                                        "description": "True if number has been set. False if number is unset"
                                    },
                                    "infinite": {
                                        "type": "boolean",
                                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                    },
                                    "number": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                    }
                                },
                                "required": []
                            },
                            "stack": {
                                "type": "object",
                                "description": "Maximum size of stack segment, in bytes.",
                                "properties": {
                                    "set": {
                                        "type": "boolean",
                                        "description": "True if number has been set. False if number is unset"
                                    },
                                    "infinite": {
                                        "type": "boolean",
                                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                    },
                                    "number": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                    }
                                },
                                "required": []
                            },
                            "core": {
                                "type": "object",
                                "description": "Largest core file that can be created, in bytes.",
                                "properties": {
                                    "set": {
                                        "type": "boolean",
                                        "description": "True if number has been set. False if number is unset"
                                    },
                                    "infinite": {
                                        "type": "boolean",
                                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                    },
                                    "number": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                    }
                                },
                                "required": []
                            },
                            "rss": {
                                "type": "object",
                                "description": "Largest resident set size, in bytes. This affects swapping; processes that are exceeding their resident set size will be more likely to have physical memory taken from them.",
                                "properties": {
                                    "set": {
                                        "type": "boolean",
                                        "description": "True if number has been set. False if number is unset"
                                    },
                                    "infinite": {
                                        "type": "boolean",
                                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                    },
                                    "number": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                    }
                                },
                                "required": []
                            },
                            "nproc": {
                                "type": "object",
                                "description": "Number of processes.",
                                "properties": {
                                    "set": {
                                        "type": "boolean",
                                        "description": "True if number has been set. False if number is unset"
                                    },
                                    "infinite": {
                                        "type": "boolean",
                                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                    },
                                    "number": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                    }
                                },
                                "required": []
                            },
                            "nofile": {
                                "type": "object",
                                "description": "Number of open files.",
                                "properties": {
                                    "set": {
                                        "type": "boolean",
                                        "description": "True if number has been set. False if number is unset"
                                    },
                                    "infinite": {
                                        "type": "boolean",
                                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                    },
                                    "number": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                    }
                                },
                                "required": []
                            },
                            "memlock": {
                                "type": "object",
                                "description": "Locked-in-memory address space",
                                "properties": {
                                    "set": {
                                        "type": "boolean",
                                        "description": "True if number has been set. False if number is unset"
                                    },
                                    "infinite": {
                                        "type": "boolean",
                                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                    },
                                    "number": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                    }
                                },
                                "required": []
                            },
                            "as": {
                                "type": "object",
                                "description": "Address space limit.",
                                "properties": {
                                    "set": {
                                        "type": "boolean",
                                        "description": "True if number has been set. False if number is unset"
                                    },
                                    "infinite": {
                                        "type": "boolean",
                                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                    },
                                    "number": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                    }
                                },
                                "required": []
                            }
                        }
                    },
                    "excluded_nodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "extra": {
                        "type": "string"
                    },
                    "constraints": {
                        "type": "string"
                    },
                    "group_id": {
                        "type": "string"
                    },
                    "hetjob_group": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "immediate": {
                        "type": "boolean"
                    },
                    "job_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "kill_on_node_fail": {
                        "type": "boolean"
                    },
                    "licenses": {
                        "type": "string"
                    },
                    "mail_type": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "BEGIN",
                                "END",
                                "FAIL",
                                "REQUEUE",
                                "TIME=100%",
                                "TIME=90%",
                                "TIME=80%",
                                "TIME=50%",
                                "STAGE_OUT",
                                "ARRAY_TASKS",
                                "INVALID_DEPENDENCY"
                            ],
                            "type": "string"
                        }
                    },
                    "mail_user": {
                        "type": "string"
                    },
                    "mcs_label": {
                        "type": "string"
                    },
                    "memory_binding": {
                        "type": "string"
                    },
                    "memory_binding_type": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "NONE",
                                "RANK",
                                "MAP",
                                "MASK",
                                "LOCAL",
                                "VERBOSE",
                                "SORT",
                                "PREFER"
                            ],
                            "type": "string"
                        }
                    },
                    "memory_per_tres": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "nice": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "open_mode": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "APPEND",
                                "TRUNCATE"
                            ],
                            "type": "string"
                        }
                    },
                    "reserve_ports": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "overcommit": {
                        "type": "boolean"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "distribution_plane_size": {
                        "type": "object",
                        "description": "16 bit integer number with flags",
                        "properties": {
                            "set": {
                                "type": "boolean",
                                "description": "True if number has been set. False if number is unset"
                            },
                            "infinite": {
                                "type": "boolean",
                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                            },
                            "number": {
                                "type": "integer",
                                "format": "int32",
                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                            }
                        },
                        "required": []
                    },
                    "power_flags": {
                        "type": "array",
                        "items": {},
                        "deprecated": true
                    },
                    "prefer": {
                        "type": "string"
                    },
                    "hold": {
                        "type": "boolean",
                        "description": "Hold (true) or release (false) job"
                    },
                    "priority": {
                        "type": "object",
                        "description": "Request specific job priority",
                        "properties": {
                            "set": {
                                "type": "boolean",
                                "description": "True if number has been set. False if number is unset"
                            },
                            "infinite": {
                                "type": "boolean",
                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                            },
                            "number": {
                                "type": "integer",
                                "format": "int32",
                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                            }
                        },
                        "required": []
                    },
                    "profile": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "NOT_SET",
                                "NONE",
                                "ENERGY",
                                "LUSTRE",
                                "NETWORK",
                                "TASK"
                            ],
                            "type": "string"
                        }
                    },
                    "qos": {
                        "type": "string"
                    },
                    "reboot": {
                        "type": "boolean"
                    },
                    "required_nodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "requeue": {
                        "type": "boolean"
                    },
                    "reservation": {
                        "type": "string"
                    },
                    "resv_mpi_ports": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of reserve communication ports. Can only be used if slurmstepd step manager is enabled."
                    },
                    "script": {
                        "type": "string",
                        "description": "Job batch script. Only first component in a HetJob is populated or honored."
                    },
                    "shared": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "none",
                                "oversubscribe",
                                "user",
                                "mcs",
                                "topo"
                            ],
                            "type": "string"
                        }
                    },
                    "exclusive": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "true",
                                "false",
                                "user",
                                "mcs",
                                "topo"
                            ],
                            "type": "string"
                        },
                        "deprecated": true
                    },
                    "oversubscribe": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "site_factor": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "spank_environment": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "distribution": {
                        "type": "string"
                    },
                    "time_limit": {
                        "type": "object",
                        "description": "32 bit integer number with flags",
                        "properties": {
                            "set": {
                                "type": "boolean",
                                "description": "True if number has been set. False if number is unset"
                            },
                            "infinite": {
                                "type": "boolean",
                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                            },
                            "number": {
                                "type": "integer",
                                "format": "int32",
                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                            }
                        },
                        "required": []
                    },
                    "time_minimum": {
                        "type": "object",
                        "description": "32 bit integer number with flags",
                        "properties": {
                            "set": {
                                "type": "boolean",
                                "description": "True if number has been set. False if number is unset"
                            },
                            "infinite": {
                                "type": "boolean",
                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                            },
                            "number": {
                                "type": "integer",
                                "format": "int32",
                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                            }
                        },
                        "required": []
                    },
                    "tres_bind": {
                        "type": "string"
                    },
                    "tres_freq": {
                        "type": "string"
                    },
                    "tres_per_job": {
                        "type": "string"
                    },
                    "tres_per_node": {
                        "type": "string"
                    },
                    "tres_per_socket": {
                        "type": "string"
                    },
                    "tres_per_task": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "wait_all_nodes": {
                        "type": "boolean"
                    },
                    "kill_warning_flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "BATCH_JOB",
                                "ARRAY_TASK",
                                "FULL_STEPS_ONLY",
                                "FULL_JOB",
                                "FEDERATION_REQUEUE",
                                "HURRY",
                                "OUT_OF_MEMORY",
                                "NO_SIBLING_JOBS",
                                "RESERVATION_JOB",
                                "VERBOSE",
                                "CRON_JOBS",
                                "WARNING_SENT"
                            ],
                            "type": "string"
                        }
                    },
                    "kill_warning_signal": {
                        "type": "string"
                    },
                    "kill_warning_delay": {
                        "type": "object",
                        "description": "16 bit integer number with flags",
                        "properties": {
                            "set": {
                                "type": "boolean",
                                "description": "True if number has been set. False if number is unset"
                            },
                            "infinite": {
                                "type": "boolean",
                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                            },
                            "number": {
                                "type": "integer",
                                "format": "int32",
                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                            }
                        },
                        "required": []
                    },
                    "current_working_directory": {
                        "type": "string"
                    },
                    "cpus_per_task": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maximum_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "nodes": {
                        "type": "string"
                    },
                    "minimum_nodes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maximum_nodes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_boards_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_sockets_per_board": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sockets_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "threads_per_core": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_socket": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_core": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_board": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ntasks_per_tres": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_cpus_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "memory_per_cpu": {
                        "type": "object",
                        "description": "64 bit integer number with flags",
                        "properties": {
                            "set": {
                                "type": "boolean",
                                "description": "True if number has been set. False if number is unset"
                            },
                            "infinite": {
                                "type": "boolean",
                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                            },
                            "number": {
                                "type": "integer",
                                "format": "int64",
                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                            }
                        },
                        "required": []
                    },
                    "memory_per_node": {
                        "type": "object",
                        "description": "64 bit integer number with flags",
                        "properties": {
                            "set": {
                                "type": "boolean",
                                "description": "True if number has been set. False if number is unset"
                            },
                            "infinite": {
                                "type": "boolean",
                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                            },
                            "number": {
                                "type": "integer",
                                "format": "int64",
                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                            }
                        },
                        "required": []
                    },
                    "temporary_disk_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "selinux_context": {
                        "type": "string"
                    },
                    "required_switches": {
                        "type": "object",
                        "description": "32 bit integer number with flags",
                        "properties": {
                            "set": {
                                "type": "boolean",
                                "description": "True if number has been set. False if number is unset"
                            },
                            "infinite": {
                                "type": "boolean",
                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                            },
                            "number": {
                                "type": "integer",
                                "format": "int32",
                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                            }
                        },
                        "required": []
                    },
                    "segment_size": {
                        "type": "object",
                        "description": "Segment size for topology/block",
                        "properties": {
                            "set": {
                                "type": "boolean",
                                "description": "True if number has been set. False if number is unset"
                            },
                            "infinite": {
                                "type": "boolean",
                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                            },
                            "number": {
                                "type": "integer",
                                "format": "int32",
                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                            }
                        },
                        "required": []
                    },
                    "standard_error": {
                        "type": "string"
                    },
                    "standard_input": {
                        "type": "string"
                    },
                    "standard_output": {
                        "type": "string"
                    },
                    "wait_for_switch": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "wckey": {
                        "type": "string"
                    },
                    "x11": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "FORWARD_ALL_NODES",
                                "BATCH_NODE",
                                "FIRST_NODE",
                                "LAST_NODE"
                            ],
                            "type": "string"
                        }
                    },
                    "x11_magic_cookie": {
                        "type": "string"
                    },
                    "x11_target_host": {
                        "type": "string"
                    },
                    "x11_target_port": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "required": []
            },
            "v0.0.40_openapi_job_submit_response": {
                "type": "object",
                "properties": {
                    "result": {
                        "$ref": "#/components/schemas/v0.0.40_job_submit_response_msg",
                        "description": "Job submission"
                    },
                    "job_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "submited JobId"
                    },
                    "step_id": {
                        "type": "string",
                        "description": "submited StepID"
                    },
                    "job_submit_user_msg": {
                        "type": "string",
                        "description": "job submision user message"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": []
            },
            "v0.0.40_job_submit_response_msg": {
                "type": "object",
                "properties": {
                    "job_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "step_id": {
                        "type": "string"
                    },
                    "error_code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "error": {
                        "type": "string"
                    },
                    "job_submit_user_msg": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.40_job_submit_req": {
                "type": "object",
                "properties": {
                    "script": {
                        "type": "string",
                        "description": "Batch job script. Batch script must be specified in first component of jobs or in job if this field is not populated."
                    },
                    "jobs": {
                        "$ref": "#/components/schemas/v0.0.40_job_desc_msg_list",
                        "description": "HetJob description"
                    },
                    "job": {
                        "$ref": "#/components/schemas/v0.0.40_job_desc_msg",
                        "description": "Job description"
                    }
                },
                "required": []
            },
            "v0.0.40_job_desc_msg_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_job_desc_msg"
                }
            },
            "v0.0.40_job_desc_msg": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "account_gather_frequency": {
                        "type": "string"
                    },
                    "admin_comment": {
                        "type": "string"
                    },
                    "allocation_node_list": {
                        "type": "string"
                    },
                    "allocation_node_port": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "argv": {
                        "$ref": "#/components/schemas/v0.0.40_string_array"
                    },
                    "array": {
                        "type": "string"
                    },
                    "batch_features": {
                        "type": "string"
                    },
                    "begin_time": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "KILL_INVALID_DEPENDENCY",
                                "NO_KILL_INVALID_DEPENDENCY",
                                "HAS_STATE_DIRECTORY",
                                "TESTING_BACKFILL",
                                "GRES_BINDING_ENFORCED",
                                "TEST_NOW_ONLY",
                                "SEND_JOB_ENVIRONMENT",
                                "SPREAD_JOB",
                                "PREFER_MINIMUM_NODE_COUNT",
                                "JOB_KILL_HURRY",
                                "SKIP_TRES_STRING_ACCOUNTING",
                                "SIBLING_CLUSTER_UPDATE_ONLY",
                                "HETEROGENEOUS_JOB",
                                "EXACT_TASK_COUNT_REQUESTED",
                                "EXACT_CPU_COUNT_REQUESTED",
                                "TESTING_WHOLE_NODE_BACKFILL",
                                "TOP_PRIORITY_JOB",
                                "ACCRUE_COUNT_CLEARED",
                                "GRED_BINDING_DISABLED",
                                "JOB_WAS_RUNNING",
                                "JOB_ACCRUE_TIME_RESET",
                                "CRON_JOB",
                                "EXACT_MEMORY_REQUESTED",
                                "USING_DEFAULT_ACCOUNT",
                                "USING_DEFAULT_PARTITION",
                                "USING_DEFAULT_QOS",
                                "USING_DEFAULT_WCKEY",
                                "DEPENDENT",
                                "MAGNETIC",
                                "PARTITION_ASSIGNED",
                                "BACKFILL_ATTEMPTED",
                                "SCHEDULING_ATTEMPTED",
                                "SAVE_BATCH_SCRIPT",
                                "GRES_ONE_TASK_PER_SHARING",
                                "GRES_MULTIPLE_TASKS_PER_SHARING",
                                "GRES_ALLOW_TASK_SHARING"
                            ],
                            "type": "string"
                        }
                    },
                    "burst_buffer": {
                        "type": "string"
                    },
                    "clusters": {
                        "type": "string"
                    },
                    "cluster_constraint": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "contiguous": {
                        "type": "boolean"
                    },
                    "container": {
                        "type": "string"
                    },
                    "container_id": {
                        "type": "string"
                    },
                    "cores_per_socket": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "core_specification": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "thread_specification": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cpu_binding": {
                        "type": "string"
                    },
                    "cpu_binding_flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "CPU_BIND_TO_THREADS",
                                "CPU_BIND_TO_CORES",
                                "CPU_BIND_TO_SOCKETS",
                                "CPU_BIND_TO_LDOMS",
                                "CPU_BIND_NONE",
                                "CPU_BIND_RANK",
                                "CPU_BIND_MAP",
                                "CPU_BIND_MASK",
                                "CPU_BIND_LDRANK",
                                "CPU_BIND_LDMAP",
                                "CPU_BIND_LDMASK",
                                "VERBOSE",
                                "CPU_BIND_ONE_THREAD_PER_CORE"
                            ],
                            "type": "string"
                        }
                    },
                    "cpu_frequency": {
                        "type": "string"
                    },
                    "cpus_per_tres": {
                        "type": "string"
                    },
                    "crontab": {
                        "$ref": "#/components/schemas/v0.0.40_cron_entry",
                        "description": "crontab entry"
                    },
                    "deadline": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "delay_boot": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dependency": {
                        "type": "string"
                    },
                    "end_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "environment": {
                        "$ref": "#/components/schemas/v0.0.40_string_array"
                    },
                    "rlimits": {
                        "type": "object",
                        "properties": {
                            "cpu": {
                                "$ref": "#/components/schemas/v0.0.40_uint64_no_val",
                                "description": "Per-process CPU limit, in seconds."
                            },
                            "fsize": {
                                "$ref": "#/components/schemas/v0.0.40_uint64_no_val",
                                "description": "Largest file that can be created, in bytes."
                            },
                            "data": {
                                "$ref": "#/components/schemas/v0.0.40_uint64_no_val",
                                "description": "Maximum size of data segment, in bytes. "
                            },
                            "stack": {
                                "$ref": "#/components/schemas/v0.0.40_uint64_no_val",
                                "description": "Maximum size of stack segment, in bytes."
                            },
                            "core": {
                                "$ref": "#/components/schemas/v0.0.40_uint64_no_val",
                                "description": "Largest core file that can be created, in bytes."
                            },
                            "rss": {
                                "$ref": "#/components/schemas/v0.0.40_uint64_no_val",
                                "description": "Largest resident set size, in bytes. This affects swapping; processes that are exceeding their resident set size will be more likely to have physical memory taken from them."
                            },
                            "nproc": {
                                "$ref": "#/components/schemas/v0.0.40_uint64_no_val",
                                "description": "Number of processes."
                            },
                            "nofile": {
                                "$ref": "#/components/schemas/v0.0.40_uint64_no_val",
                                "description": "Number of open files."
                            },
                            "memlock": {
                                "$ref": "#/components/schemas/v0.0.40_uint64_no_val",
                                "description": "Locked-in-memory address space"
                            },
                            "as": {
                                "$ref": "#/components/schemas/v0.0.40_uint64_no_val",
                                "description": "Address space limit."
                            }
                        }
                    },
                    "excluded_nodes": {
                        "$ref": "#/components/schemas/v0.0.40_csv_string"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "constraints": {
                        "type": "string"
                    },
                    "group_id": {
                        "type": "string"
                    },
                    "hetjob_group": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "immediate": {
                        "type": "boolean"
                    },
                    "job_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "kill_on_node_fail": {
                        "type": "boolean"
                    },
                    "licenses": {
                        "type": "string"
                    },
                    "mail_type": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "BEGIN",
                                "END",
                                "FAIL",
                                "REQUEUE",
                                "TIME=100%",
                                "TIME=90%",
                                "TIME=80%",
                                "TIME=50%",
                                "STAGE_OUT",
                                "ARRAY_TASKS",
                                "INVALID_DEPENDENCY"
                            ],
                            "type": "string"
                        }
                    },
                    "mail_user": {
                        "type": "string"
                    },
                    "mcs_label": {
                        "type": "string"
                    },
                    "memory_binding": {
                        "type": "string"
                    },
                    "memory_binding_type": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "NONE",
                                "RANK",
                                "MAP",
                                "MASK",
                                "LOCAL",
                                "VERBOSE",
                                "SORT",
                                "PREFER"
                            ],
                            "type": "string"
                        }
                    },
                    "memory_per_tres": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "nice": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "open_mode": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "APPEND",
                                "TRUNCATE"
                            ],
                            "type": "string"
                        }
                    },
                    "reserve_ports": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "overcommit": {
                        "type": "boolean"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "distribution_plane_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "power_flags": {
                        "$ref": "#/components/schemas/v0.0.40_power_flags"
                    },
                    "prefer": {
                        "type": "string"
                    },
                    "hold": {
                        "type": "boolean",
                        "description": "Job held"
                    },
                    "priority": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val",
                        "description": "Request specific job priority"
                    },
                    "profile": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "NOT_SET",
                                "NONE",
                                "ENERGY",
                                "LUSTRE",
                                "NETWORK",
                                "TASK"
                            ],
                            "type": "string"
                        }
                    },
                    "qos": {
                        "type": "string"
                    },
                    "reboot": {
                        "type": "boolean"
                    },
                    "required_nodes": {
                        "$ref": "#/components/schemas/v0.0.40_csv_string"
                    },
                    "requeue": {
                        "type": "boolean"
                    },
                    "reservation": {
                        "type": "string"
                    },
                    "script": {
                        "type": "string",
                        "description": "Job batch script. Only first component in a HetJob is populated or honored."
                    },
                    "shared": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "none",
                                "oversubscribe",
                                "user",
                                "mcs"
                            ],
                            "type": "string"
                        }
                    },
                    "exclusive": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "true",
                                "false",
                                "user",
                                "mcs"
                            ],
                            "type": "string"
                        }
                    },
                    "oversubscribe": {
                        "type": "boolean"
                    },
                    "site_factor": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "spank_environment": {
                        "$ref": "#/components/schemas/v0.0.40_string_array"
                    },
                    "distribution": {
                        "type": "string"
                    },
                    "time_limit": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "time_minimum": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "tres_bind": {
                        "type": "string"
                    },
                    "tres_freq": {
                        "type": "string"
                    },
                    "tres_per_job": {
                        "type": "string"
                    },
                    "tres_per_node": {
                        "type": "string"
                    },
                    "tres_per_socket": {
                        "type": "string"
                    },
                    "tres_per_task": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "wait_all_nodes": {
                        "type": "boolean"
                    },
                    "kill_warning_flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "BATCH_JOB",
                                "ARRAY_TASK",
                                "FULL_STEPS_ONLY",
                                "FULL_JOB",
                                "FEDERATION_REQUEUE",
                                "HURRY",
                                "OUT_OF_MEMORY",
                                "NO_SIBLING_JOBS",
                                "RESERVATION_JOB",
                                "NO_CRON_JOBS",
                                "VERBOSE",
                                "CRON_JOBS",
                                "WARNING_SENT"
                            ],
                            "type": "string"
                        }
                    },
                    "kill_warning_signal": {
                        "type": "string"
                    },
                    "kill_warning_delay": {
                        "$ref": "#/components/schemas/v0.0.40_uint16_no_val"
                    },
                    "current_working_directory": {
                        "type": "string"
                    },
                    "cpus_per_task": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maximum_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "nodes": {
                        "type": "string"
                    },
                    "minimum_nodes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maximum_nodes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_boards_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_sockets_per_board": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sockets_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "threads_per_core": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_socket": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_core": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_board": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ntasks_per_tres": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_cpus_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "memory_per_cpu": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "memory_per_node": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "temporary_disk_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "selinux_context": {
                        "type": "string"
                    },
                    "required_switches": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "standard_error": {
                        "type": "string"
                    },
                    "standard_input": {
                        "type": "string"
                    },
                    "standard_output": {
                        "type": "string"
                    },
                    "wait_for_switch": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "wckey": {
                        "type": "string"
                    },
                    "x11": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "FORWARD_ALL_NODES",
                                "BATCH_NODE",
                                "FIRST_NODE",
                                "LAST_NODE"
                            ],
                            "type": "string"
                        }
                    },
                    "x11_magic_cookie": {
                        "type": "string"
                    },
                    "x11_target_host": {
                        "type": "string"
                    },
                    "x11_target_port": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "required": []
            },
            "v0.0.40_cron_entry": {
                "type": "object",
                "properties": {
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "WILD_MINUTE",
                                "WILD_HOUR",
                                "WILD_DAY_OF_MONTH",
                                "WILD_MONTH",
                                "WILD_DAY_OF_WEEK"
                            ],
                            "type": "string"
                        }
                    },
                    "minute": {
                        "type": "string"
                    },
                    "hour": {
                        "type": "string"
                    },
                    "day_of_month": {
                        "type": "string"
                    },
                    "month": {
                        "type": "string"
                    },
                    "day_of_week": {
                        "type": "string"
                    },
                    "specification": {
                        "type": "string"
                    },
                    "command": {
                        "type": "string"
                    },
                    "line": {
                        "type": "object",
                        "properties": {
                            "start": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "end": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.40_csv_string": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.40_power_flags": {
                "type": "array",
                "description": "removed field",
                "items": {},
                "deprecated": true
            },
            "v0.0.41_openapi_job_alloc_resp": {
                "type": "object",
                "properties": {
                    "job_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "submited JobId"
                    },
                    "job_submit_user_msg": {
                        "type": "string",
                        "description": "job submission user message"
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": []
            },
            "v0.0.41_job_alloc_req": {
                "type": "object",
                "properties": {
                    "hetjob": {
                        "type": "array",
                        "description": "HetJob description",
                        "items": {
                            "$ref": "#/components/schemas/v0.0.41_job_desc_msg"
                        }
                    },
                    "job": {
                        "$ref": "#/components/schemas/v0.0.41_job_desc_msg",
                        "description": "Job description"
                    }
                },
                "required": []
            },
            "v0.0.41_openapi_job_info_resp": {
                "type": "object",
                "properties": {
                    "jobs": {
                        "type": "array",
                        "description": "list of jobs",
                        "items": {
                            "type": "object",
                            "properties": {
                                "account": {
                                    "type": "string"
                                },
                                "accrue_time": {
                                    "type": "object",
                                    "description": "64 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "admin_comment": {
                                    "type": "string"
                                },
                                "allocating_node": {
                                    "type": "string"
                                },
                                "array_job_id": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "array_task_id": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "array_max_tasks": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "array_task_string": {
                                    "type": "string"
                                },
                                "association_id": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "batch_features": {
                                    "type": "string"
                                },
                                "batch_flag": {
                                    "type": "boolean"
                                },
                                "batch_host": {
                                    "type": "string"
                                },
                                "flags": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "KILL_INVALID_DEPENDENCY",
                                            "NO_KILL_INVALID_DEPENDENCY",
                                            "HAS_STATE_DIRECTORY",
                                            "TESTING_BACKFILL",
                                            "GRES_BINDING_ENFORCED",
                                            "TEST_NOW_ONLY",
                                            "SEND_JOB_ENVIRONMENT",
                                            "SPREAD_JOB",
                                            "PREFER_MINIMUM_NODE_COUNT",
                                            "JOB_KILL_HURRY",
                                            "SKIP_TRES_STRING_ACCOUNTING",
                                            "SIBLING_CLUSTER_UPDATE_ONLY",
                                            "HETEROGENEOUS_JOB",
                                            "EXACT_TASK_COUNT_REQUESTED",
                                            "EXACT_CPU_COUNT_REQUESTED",
                                            "TESTING_WHOLE_NODE_BACKFILL",
                                            "TOP_PRIORITY_JOB",
                                            "ACCRUE_COUNT_CLEARED",
                                            "GRED_BINDING_DISABLED",
                                            "JOB_WAS_RUNNING",
                                            "JOB_ACCRUE_TIME_RESET",
                                            "CRON_JOB",
                                            "EXACT_MEMORY_REQUESTED",
                                            "USING_DEFAULT_ACCOUNT",
                                            "USING_DEFAULT_PARTITION",
                                            "USING_DEFAULT_QOS",
                                            "USING_DEFAULT_WCKEY",
                                            "DEPENDENT",
                                            "MAGNETIC",
                                            "PARTITION_ASSIGNED",
                                            "BACKFILL_ATTEMPTED",
                                            "SCHEDULING_ATTEMPTED",
                                            "STEPMGR_ENABLED"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "burst_buffer": {
                                    "type": "string"
                                },
                                "burst_buffer_state": {
                                    "type": "string"
                                },
                                "cluster": {
                                    "type": "string"
                                },
                                "cluster_features": {
                                    "type": "string"
                                },
                                "command": {
                                    "type": "string"
                                },
                                "comment": {
                                    "type": "string"
                                },
                                "container": {
                                    "type": "string"
                                },
                                "container_id": {
                                    "type": "string"
                                },
                                "contiguous": {
                                    "type": "boolean"
                                },
                                "core_spec": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "thread_spec": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "cores_per_socket": {
                                    "type": "object",
                                    "description": "16 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "billable_tres": {
                                    "type": "object",
                                    "description": "64 bit floating point number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "number",
                                            "format": "double",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "cpus_per_task": {
                                    "type": "object",
                                    "description": "16 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "cpu_frequency_minimum": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "cpu_frequency_maximum": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "cpu_frequency_governor": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "cpus_per_tres": {
                                    "type": "string"
                                },
                                "cron": {
                                    "type": "string"
                                },
                                "deadline": {
                                    "type": "object",
                                    "description": "64 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "delay_boot": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "dependency": {
                                    "type": "string"
                                },
                                "derived_exit_code": {
                                    "type": "object",
                                    "description": "return code returned by process",
                                    "properties": {
                                        "status": {
                                            "type": "array",
                                            "description": "Status given by return code",
                                            "items": {
                                                "enum": [
                                                    "INVALID",
                                                    "PENDING",
                                                    "SUCCESS",
                                                    "ERROR",
                                                    "SIGNALED",
                                                    "CORE_DUMPED"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "return_code": {
                                            "type": "object",
                                            "description": "Process return code (numeric)",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "signal": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "object",
                                                    "description": "Signal sent to process (numeric)",
                                                    "properties": {
                                                        "set": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set. False if number is unset"
                                                        },
                                                        "infinite": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                        },
                                                        "number": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                        }
                                                    },
                                                    "required": []
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "description": "Signal sent to process"
                                                }
                                            }
                                        }
                                    },
                                    "required": []
                                },
                                "eligible_time": {
                                    "type": "object",
                                    "description": "64 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "end_time": {
                                    "type": "object",
                                    "description": "64 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "excluded_nodes": {
                                    "type": "string"
                                },
                                "exit_code": {
                                    "type": "object",
                                    "description": "return code returned by process",
                                    "properties": {
                                        "status": {
                                            "type": "array",
                                            "description": "Status given by return code",
                                            "items": {
                                                "enum": [
                                                    "INVALID",
                                                    "PENDING",
                                                    "SUCCESS",
                                                    "ERROR",
                                                    "SIGNALED",
                                                    "CORE_DUMPED"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "return_code": {
                                            "type": "object",
                                            "description": "Process return code (numeric)",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "signal": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "object",
                                                    "description": "Signal sent to process (numeric)",
                                                    "properties": {
                                                        "set": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set. False if number is unset"
                                                        },
                                                        "infinite": {
                                                            "type": "boolean",
                                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                        },
                                                        "number": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                        }
                                                    },
                                                    "required": []
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "description": "Signal sent to process"
                                                }
                                            }
                                        }
                                    },
                                    "required": []
                                },
                                "extra": {
                                    "type": "string"
                                },
                                "failed_node": {
                                    "type": "string"
                                },
                                "features": {
                                    "type": "string"
                                },
                                "federation_origin": {
                                    "type": "string"
                                },
                                "federation_siblings_active": {
                                    "type": "string"
                                },
                                "federation_siblings_viable": {
                                    "type": "string"
                                },
                                "gres_detail": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "group_id": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "group_name": {
                                    "type": "string"
                                },
                                "het_job_id": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "het_job_id_set": {
                                    "type": "string"
                                },
                                "het_job_offset": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "job_id": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "job_resources": {
                                    "type": "object",
                                    "properties": {
                                        "select_type": {
                                            "type": "array",
                                            "description": "Scheduling consumption resource selection type",
                                            "items": {
                                                "enum": [
                                                    "CPU",
                                                    "SOCKET",
                                                    "CORE",
                                                    "BOARD",
                                                    "MEMORY",
                                                    "ONE_TASK_PER_CORE",
                                                    "PACK_NODES",
                                                    "CORE_DEFAULT_DIST_BLOCK",
                                                    "LLN",
                                                    "LINEAR"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "nodes": {
                                            "type": "object",
                                            "properties": {
                                                "count": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "Number of nodes assigned to job"
                                                },
                                                "select_type": {
                                                    "type": "array",
                                                    "description": "Node scheduling selection request",
                                                    "items": {
                                                        "enum": [
                                                            "AVAILABLE",
                                                            "ONE_ROW",
                                                            "RESERVED"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "list": {
                                                    "type": "string",
                                                    "description": "host list for job"
                                                },
                                                "whole": {
                                                    "type": "boolean",
                                                    "description": "Job allocated full nodes"
                                                },
                                                "allocation": {
                                                    "type": "array",
                                                    "description": "resource allocations by node",
                                                    "items": {
                                                        "type": "object",
                                                        "description": "Job resources for a node",
                                                        "properties": {
                                                            "index": {
                                                                "type": "integer",
                                                                "format": "int32",
                                                                "description": "Node index"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "description": "Node name"
                                                            },
                                                            "cpus": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "count": {
                                                                        "type": "integer",
                                                                        "format": "int32",
                                                                        "description": "Total number of CPUs assigned to job"
                                                                    },
                                                                    "used": {
                                                                        "type": "integer",
                                                                        "format": "int32",
                                                                        "description": "Total number of CPUs used by job"
                                                                    }
                                                                }
                                                            },
                                                            "memory": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "used": {
                                                                        "type": "integer",
                                                                        "format": "int64",
                                                                        "description": "Total memory (MiB) used by job"
                                                                    },
                                                                    "allocated": {
                                                                        "type": "integer",
                                                                        "format": "int64",
                                                                        "description": "Total memory (MiB) allocated to job"
                                                                    }
                                                                }
                                                            },
                                                            "sockets": {
                                                                "type": "array",
                                                                "description": "Socket allocations in node",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "index": {
                                                                            "type": "integer",
                                                                            "format": "int32",
                                                                            "description": "Core index"
                                                                        },
                                                                        "cores": {
                                                                            "type": "array",
                                                                            "description": "Core in socket",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "index": {
                                                                                        "type": "integer",
                                                                                        "format": "int32",
                                                                                        "description": "Core index"
                                                                                    },
                                                                                    "status": {
                                                                                        "type": "array",
                                                                                        "description": "Core status",
                                                                                        "items": {
                                                                                            "enum": [
                                                                                                "INVALID",
                                                                                                "UNALLOCATED",
                                                                                                "ALLOCATED",
                                                                                                "IN_USE"
                                                                                            ],
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "index",
                                                                                    "status"
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "index",
                                                                        "cores"
                                                                    ]
                                                                }
                                                            }
                                                        },
                                                        "required": [
                                                            "index",
                                                            "name",
                                                            "cpus/count",
                                                            "cpus/used",
                                                            "memory/used",
                                                            "memory/allocated",
                                                            "sockets"
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "cpus": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Number of processors in the allocation"
                                        },
                                        "threads_per_core": {
                                            "type": "object",
                                            "description": "Number of processor threads per CPU core",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        }
                                    },
                                    "required": [
                                        "select_type",
                                        "nodes/count",
                                        "nodes/select_type",
                                        "nodes/list",
                                        "cpus",
                                        "threads_per_core",
                                        "nodes/whole",
                                        "nodes/allocation"
                                    ]
                                },
                                "job_size_str": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "job_state": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "PENDING",
                                            "RUNNING",
                                            "SUSPENDED",
                                            "COMPLETED",
                                            "CANCELLED",
                                            "FAILED",
                                            "TIMEOUT",
                                            "NODE_FAIL",
                                            "PREEMPTED",
                                            "BOOT_FAIL",
                                            "DEADLINE",
                                            "OUT_OF_MEMORY",
                                            "LAUNCH_FAILED",
                                            "UPDATE_DB",
                                            "REQUEUED",
                                            "REQUEUE_HOLD",
                                            "SPECIAL_EXIT",
                                            "RESIZING",
                                            "CONFIGURING",
                                            "COMPLETING",
                                            "STOPPED",
                                            "RECONFIG_FAIL",
                                            "POWER_UP_NODE",
                                            "REVOKED",
                                            "REQUEUE_FED",
                                            "RESV_DEL_HOLD",
                                            "SIGNALING",
                                            "STAGE_OUT"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "last_sched_evaluation": {
                                    "type": "object",
                                    "description": "64 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "licenses": {
                                    "type": "string"
                                },
                                "mail_type": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "BEGIN",
                                            "END",
                                            "FAIL",
                                            "REQUEUE",
                                            "TIME=100%",
                                            "TIME=90%",
                                            "TIME=80%",
                                            "TIME=50%",
                                            "STAGE_OUT",
                                            "ARRAY_TASKS",
                                            "INVALID_DEPENDENCY"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "mail_user": {
                                    "type": "string"
                                },
                                "max_cpus": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "max_nodes": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "mcs_label": {
                                    "type": "string"
                                },
                                "memory_per_tres": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "network": {
                                    "type": "string"
                                },
                                "nodes": {
                                    "type": "string"
                                },
                                "nice": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "tasks_per_core": {
                                    "type": "object",
                                    "description": "16 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "tasks_per_tres": {
                                    "type": "object",
                                    "description": "16 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "tasks_per_node": {
                                    "type": "object",
                                    "description": "16 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "tasks_per_socket": {
                                    "type": "object",
                                    "description": "16 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "tasks_per_board": {
                                    "type": "object",
                                    "description": "16 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "cpus": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "node_count": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "tasks": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "partition": {
                                    "type": "string"
                                },
                                "prefer": {
                                    "type": "string"
                                },
                                "memory_per_cpu": {
                                    "type": "object",
                                    "description": "64 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "memory_per_node": {
                                    "type": "object",
                                    "description": "64 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "minimum_cpus_per_node": {
                                    "type": "object",
                                    "description": "16 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "minimum_tmp_disk_per_node": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "power": {
                                    "type": "object",
                                    "properties": {
                                        "flags": {
                                            "type": "array",
                                            "items": {},
                                            "deprecated": true
                                        }
                                    }
                                },
                                "preempt_time": {
                                    "type": "object",
                                    "description": "64 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "preemptable_time": {
                                    "type": "object",
                                    "description": "64 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "pre_sus_time": {
                                    "type": "object",
                                    "description": "64 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "hold": {
                                    "type": "boolean",
                                    "description": "Hold (true) or release (false) job"
                                },
                                "priority": {
                                    "type": "object",
                                    "description": "Request specific job priority",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "profile": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "NOT_SET",
                                            "NONE",
                                            "ENERGY",
                                            "LUSTRE",
                                            "NETWORK",
                                            "TASK"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "qos": {
                                    "type": "string"
                                },
                                "reboot": {
                                    "type": "boolean"
                                },
                                "required_nodes": {
                                    "type": "string"
                                },
                                "minimum_switches": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "requeue": {
                                    "type": "boolean"
                                },
                                "resize_time": {
                                    "type": "object",
                                    "description": "64 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "restart_cnt": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "resv_name": {
                                    "type": "string"
                                },
                                "scheduled_nodes": {
                                    "type": "string"
                                },
                                "selinux_context": {
                                    "type": "string"
                                },
                                "shared": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "none",
                                            "oversubscribe",
                                            "user",
                                            "mcs",
                                            "topo"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "exclusive": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "true",
                                            "false",
                                            "user",
                                            "mcs",
                                            "topo"
                                        ],
                                        "type": "string"
                                    },
                                    "deprecated": true
                                },
                                "oversubscribe": {
                                    "type": "boolean",
                                    "deprecated": true
                                },
                                "show_flags": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "ALL",
                                            "DETAIL",
                                            "MIXED",
                                            "LOCAL",
                                            "SIBLING",
                                            "FEDERATION",
                                            "FUTURE"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "sockets_per_board": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "sockets_per_node": {
                                    "type": "object",
                                    "description": "16 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "start_time": {
                                    "type": "object",
                                    "description": "64 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "state_description": {
                                    "type": "string"
                                },
                                "state_reason": {
                                    "type": "string"
                                },
                                "standard_error": {
                                    "type": "string"
                                },
                                "standard_input": {
                                    "type": "string"
                                },
                                "standard_output": {
                                    "type": "string"
                                },
                                "submit_time": {
                                    "type": "object",
                                    "description": "64 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "suspend_time": {
                                    "type": "object",
                                    "description": "64 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "system_comment": {
                                    "type": "string"
                                },
                                "time_limit": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "time_minimum": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "threads_per_core": {
                                    "type": "object",
                                    "description": "16 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "tres_bind": {
                                    "type": "string"
                                },
                                "tres_freq": {
                                    "type": "string"
                                },
                                "tres_per_job": {
                                    "type": "string"
                                },
                                "tres_per_node": {
                                    "type": "string"
                                },
                                "tres_per_socket": {
                                    "type": "string"
                                },
                                "tres_per_task": {
                                    "type": "string"
                                },
                                "tres_req_str": {
                                    "type": "string"
                                },
                                "tres_alloc_str": {
                                    "type": "string"
                                },
                                "user_id": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "user_name": {
                                    "type": "string"
                                },
                                "maximum_switch_wait_time": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "wckey": {
                                    "type": "string"
                                },
                                "current_working_directory": {
                                    "type": "string"
                                }
                            },
                            "required": []
                        }
                    },
                    "last_backfill": {
                        "type": "object",
                        "description": "time of last backfill scheduler run (UNIX timestamp)",
                        "properties": {
                            "set": {
                                "type": "boolean",
                                "description": "True if number has been set. False if number is unset"
                            },
                            "infinite": {
                                "type": "boolean",
                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                            },
                            "number": {
                                "type": "integer",
                                "format": "int64",
                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                            }
                        },
                        "required": []
                    },
                    "last_update": {
                        "type": "object",
                        "description": "time of last job change (UNIX timestamp)",
                        "properties": {
                            "set": {
                                "type": "boolean",
                                "description": "True if number has been set. False if number is unset"
                            },
                            "infinite": {
                                "type": "boolean",
                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                            },
                            "number": {
                                "type": "integer",
                                "format": "int64",
                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                            }
                        },
                        "required": []
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "jobs",
                    "last_backfill",
                    "last_update"
                ]
            },
            "v0.0.41_openapi_kill_jobs_resp": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "array",
                        "description": "resultant status of signal request",
                        "items": {
                            "type": "object",
                            "description": "List of jobs signal responses",
                            "properties": {
                                "error": {
                                    "type": "object",
                                    "properties": {
                                        "string": {
                                            "type": "string",
                                            "description": "String error encountered signaling job"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Numeric error encountered signaling job"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Error message why signaling job failed"
                                        }
                                    }
                                },
                                "step_id": {
                                    "type": "string",
                                    "description": "Job or Step ID that signaling failed"
                                },
                                "job_id": {
                                    "type": "object",
                                    "description": "Job ID that signaling failed",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "federation": {
                                    "type": "object",
                                    "properties": {
                                        "sibling": {
                                            "type": "string",
                                            "description": "Name of federation sibling (may be empty for non-federation)"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "error/string",
                                "error/code",
                                "error/message",
                                "step_id",
                                "job_id",
                                "federation/sibling"
                            ]
                        }
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "status"
                ]
            },
            "v0.0.40_openapi_job_info_resp": {
                "type": "object",
                "properties": {
                    "jobs": {
                        "$ref": "#/components/schemas/v0.0.40_job_info_msg",
                        "description": "list of jobs"
                    },
                    "last_backfill": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val",
                        "description": "time of last backfill scheduler run (UNIX timestamp)"
                    },
                    "last_update": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val",
                        "description": "time of last job change (UNIX timestamp)"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "jobs",
                    "last_backfill",
                    "last_update"
                ]
            },
            "v0.0.40_job_info_msg": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_job_info"
                }
            },
            "v0.0.40_job_info": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "accrue_time": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "admin_comment": {
                        "type": "string"
                    },
                    "allocating_node": {
                        "type": "string"
                    },
                    "array_job_id": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "array_task_id": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "array_max_tasks": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "array_task_string": {
                        "type": "string"
                    },
                    "association_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "batch_features": {
                        "type": "string"
                    },
                    "batch_flag": {
                        "type": "boolean"
                    },
                    "batch_host": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "KILL_INVALID_DEPENDENCY",
                                "NO_KILL_INVALID_DEPENDENCY",
                                "HAS_STATE_DIRECTORY",
                                "TESTING_BACKFILL",
                                "GRES_BINDING_ENFORCED",
                                "TEST_NOW_ONLY",
                                "SEND_JOB_ENVIRONMENT",
                                "SPREAD_JOB",
                                "PREFER_MINIMUM_NODE_COUNT",
                                "JOB_KILL_HURRY",
                                "SKIP_TRES_STRING_ACCOUNTING",
                                "SIBLING_CLUSTER_UPDATE_ONLY",
                                "HETEROGENEOUS_JOB",
                                "EXACT_TASK_COUNT_REQUESTED",
                                "EXACT_CPU_COUNT_REQUESTED",
                                "TESTING_WHOLE_NODE_BACKFILL",
                                "TOP_PRIORITY_JOB",
                                "ACCRUE_COUNT_CLEARED",
                                "GRED_BINDING_DISABLED",
                                "JOB_WAS_RUNNING",
                                "JOB_ACCRUE_TIME_RESET",
                                "CRON_JOB",
                                "EXACT_MEMORY_REQUESTED",
                                "USING_DEFAULT_ACCOUNT",
                                "USING_DEFAULT_PARTITION",
                                "USING_DEFAULT_QOS",
                                "USING_DEFAULT_WCKEY",
                                "DEPENDENT",
                                "MAGNETIC",
                                "PARTITION_ASSIGNED",
                                "BACKFILL_ATTEMPTED",
                                "SCHEDULING_ATTEMPTED",
                                "SAVE_BATCH_SCRIPT",
                                "GRES_ONE_TASK_PER_SHARING",
                                "GRES_MULTIPLE_TASKS_PER_SHARING",
                                "GRES_ALLOW_TASK_SHARING"
                            ],
                            "type": "string"
                        }
                    },
                    "burst_buffer": {
                        "type": "string"
                    },
                    "burst_buffer_state": {
                        "type": "string"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "cluster_features": {
                        "type": "string"
                    },
                    "command": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "container": {
                        "type": "string"
                    },
                    "container_id": {
                        "type": "string"
                    },
                    "contiguous": {
                        "type": "boolean"
                    },
                    "core_spec": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "thread_spec": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cores_per_socket": {
                        "$ref": "#/components/schemas/v0.0.40_uint16_no_val"
                    },
                    "billable_tres": {
                        "$ref": "#/components/schemas/v0.0.40_float64_no_val"
                    },
                    "cpus_per_task": {
                        "$ref": "#/components/schemas/v0.0.40_uint16_no_val"
                    },
                    "cpu_frequency_minimum": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "cpu_frequency_maximum": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "cpu_frequency_governor": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "cpus_per_tres": {
                        "type": "string"
                    },
                    "cron": {
                        "type": "string"
                    },
                    "deadline": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "delay_boot": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "dependency": {
                        "type": "string"
                    },
                    "derived_exit_code": {
                        "$ref": "#/components/schemas/v0.0.40_process_exit_code_verbose",
                        "description": "return code returned by process"
                    },
                    "eligible_time": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "end_time": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "excluded_nodes": {
                        "type": "string"
                    },
                    "exit_code": {
                        "$ref": "#/components/schemas/v0.0.40_process_exit_code_verbose",
                        "description": "return code returned by process"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "failed_node": {
                        "type": "string"
                    },
                    "features": {
                        "type": "string"
                    },
                    "federation_origin": {
                        "type": "string"
                    },
                    "federation_siblings_active": {
                        "type": "string"
                    },
                    "federation_siblings_viable": {
                        "type": "string"
                    },
                    "gres_detail": {
                        "$ref": "#/components/schemas/v0.0.40_job_info_gres_detail"
                    },
                    "group_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "group_name": {
                        "type": "string"
                    },
                    "het_job_id": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "het_job_id_set": {
                        "type": "string"
                    },
                    "het_job_offset": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "job_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "job_resources": {
                        "$ref": "#/components/schemas/v0.0.40_job_res"
                    },
                    "job_size_str": {
                        "$ref": "#/components/schemas/v0.0.40_csv_string"
                    },
                    "job_state": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "PENDING",
                                "RUNNING",
                                "SUSPENDED",
                                "COMPLETED",
                                "CANCELLED",
                                "FAILED",
                                "TIMEOUT",
                                "NODE_FAIL",
                                "PREEMPTED",
                                "BOOT_FAIL",
                                "DEADLINE",
                                "OUT_OF_MEMORY",
                                "LAUNCH_FAILED",
                                "UPDATE_DB",
                                "REQUEUED",
                                "REQUEUE_HOLD",
                                "SPECIAL_EXIT",
                                "RESIZING",
                                "CONFIGURING",
                                "COMPLETING",
                                "STOPPED",
                                "RECONFIG_FAIL",
                                "POWER_UP_NODE",
                                "REVOKED",
                                "REQUEUE_FED",
                                "RESV_DEL_HOLD",
                                "SIGNALING",
                                "STAGE_OUT"
                            ],
                            "type": "string"
                        }
                    },
                    "last_sched_evaluation": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "licenses": {
                        "type": "string"
                    },
                    "mail_type": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "BEGIN",
                                "END",
                                "FAIL",
                                "REQUEUE",
                                "TIME=100%",
                                "TIME=90%",
                                "TIME=80%",
                                "TIME=50%",
                                "STAGE_OUT",
                                "ARRAY_TASKS",
                                "INVALID_DEPENDENCY"
                            ],
                            "type": "string"
                        }
                    },
                    "mail_user": {
                        "type": "string"
                    },
                    "max_cpus": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "max_nodes": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "mcs_label": {
                        "type": "string"
                    },
                    "memory_per_tres": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "nodes": {
                        "type": "string"
                    },
                    "nice": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_core": {
                        "$ref": "#/components/schemas/v0.0.40_uint16_no_val"
                    },
                    "tasks_per_tres": {
                        "$ref": "#/components/schemas/v0.0.40_uint16_no_val"
                    },
                    "tasks_per_node": {
                        "$ref": "#/components/schemas/v0.0.40_uint16_no_val"
                    },
                    "tasks_per_socket": {
                        "$ref": "#/components/schemas/v0.0.40_uint16_no_val"
                    },
                    "tasks_per_board": {
                        "$ref": "#/components/schemas/v0.0.40_uint16_no_val"
                    },
                    "cpus": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "node_count": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "tasks": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "prefer": {
                        "type": "string"
                    },
                    "memory_per_cpu": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "memory_per_node": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "minimum_cpus_per_node": {
                        "$ref": "#/components/schemas/v0.0.40_uint16_no_val"
                    },
                    "minimum_tmp_disk_per_node": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "power": {
                        "type": "object",
                        "properties": {
                            "flags": {
                                "$ref": "#/components/schemas/v0.0.40_power_flags"
                            }
                        }
                    },
                    "preempt_time": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "preemptable_time": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "pre_sus_time": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "hold": {
                        "type": "boolean",
                        "description": "Job held"
                    },
                    "priority": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val",
                        "description": "Request specific job priority"
                    },
                    "profile": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "NOT_SET",
                                "NONE",
                                "ENERGY",
                                "LUSTRE",
                                "NETWORK",
                                "TASK"
                            ],
                            "type": "string"
                        }
                    },
                    "qos": {
                        "type": "string"
                    },
                    "reboot": {
                        "type": "boolean"
                    },
                    "required_nodes": {
                        "type": "string"
                    },
                    "minimum_switches": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "requeue": {
                        "type": "boolean"
                    },
                    "resize_time": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "restart_cnt": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "resv_name": {
                        "type": "string"
                    },
                    "scheduled_nodes": {
                        "type": "string"
                    },
                    "selinux_context": {
                        "type": "string"
                    },
                    "shared": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "none",
                                "oversubscribe",
                                "user",
                                "mcs"
                            ],
                            "type": "string"
                        }
                    },
                    "exclusive": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "true",
                                "false",
                                "user",
                                "mcs"
                            ],
                            "type": "string"
                        }
                    },
                    "oversubscribe": {
                        "type": "boolean"
                    },
                    "show_flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ],
                            "type": "string"
                        }
                    },
                    "sockets_per_board": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sockets_per_node": {
                        "$ref": "#/components/schemas/v0.0.40_uint16_no_val"
                    },
                    "start_time": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "state_description": {
                        "type": "string"
                    },
                    "state_reason": {
                        "type": "string"
                    },
                    "standard_error": {
                        "type": "string"
                    },
                    "standard_input": {
                        "type": "string"
                    },
                    "standard_output": {
                        "type": "string"
                    },
                    "submit_time": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "suspend_time": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "system_comment": {
                        "type": "string"
                    },
                    "time_limit": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "time_minimum": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "threads_per_core": {
                        "$ref": "#/components/schemas/v0.0.40_uint16_no_val"
                    },
                    "tres_bind": {
                        "type": "string"
                    },
                    "tres_freq": {
                        "type": "string"
                    },
                    "tres_per_job": {
                        "type": "string"
                    },
                    "tres_per_node": {
                        "type": "string"
                    },
                    "tres_per_socket": {
                        "type": "string"
                    },
                    "tres_per_task": {
                        "type": "string"
                    },
                    "tres_req_str": {
                        "type": "string"
                    },
                    "tres_alloc_str": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "user_name": {
                        "type": "string"
                    },
                    "maximum_switch_wait_time": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "wckey": {
                        "type": "string"
                    },
                    "current_working_directory": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.40_job_info_gres_detail": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.40_job_res": {
                "type": "object",
                "properties": {
                    "nodes": {
                        "type": "string"
                    },
                    "allocated_cores": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "allocated_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "allocated_hosts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "allocated_nodes": {
                        "$ref": "#/components/schemas/v0.0.40_job_res_nodes"
                    }
                },
                "required": []
            },
            "v0.0.40_job_res_nodes": {
                "type": "array",
                "description": "job node resources",
                "items": {}
            },
            "v0.0.40_openapi_kill_jobs_resp": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/v0.0.40_kill_jobs_resp_msg",
                        "description": "resultant status of signal request"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "status"
                ]
            },
            "v0.0.40_kill_jobs_resp_msg": {
                "type": "array",
                "description": "List of jobs signal responses",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_kill_jobs_resp_job",
                    "description": "List of jobs signal responses"
                }
            },
            "v0.0.40_kill_jobs_resp_job": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "string": {
                                "type": "string",
                                "description": "String error encountered signaling job"
                            },
                            "code": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Numeric error encountered signaling job"
                            },
                            "message": {
                                "type": "string",
                                "description": "Error message why signaling job failed"
                            }
                        }
                    },
                    "step_id": {
                        "type": "string",
                        "description": "Job or Step ID that signaling failed"
                    },
                    "job_id": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val",
                        "description": "Job ID that signaling failed"
                    },
                    "federation": {
                        "type": "object",
                        "properties": {
                            "sibling": {
                                "type": "string",
                                "description": "Name of federation sibling (may be empty for non-federation)"
                            }
                        }
                    }
                },
                "required": [
                    "error/string",
                    "error/code",
                    "error/message",
                    "step_id",
                    "job_id",
                    "federation/sibling"
                ]
            },
            "v0.0.41_openapi_job_post_response": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "array",
                        "description": "Job update results",
                        "items": {
                            "type": "object",
                            "properties": {
                                "job_id": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "JobId for updated Job"
                                },
                                "step_id": {
                                    "type": "string",
                                    "description": "StepId for updated Job"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Verbose update status or error"
                                },
                                "error_code": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Verbose update status or error"
                                },
                                "why": {
                                    "type": "string",
                                    "description": "Update response message"
                                }
                            },
                            "required": []
                        }
                    },
                    "job_id": {
                        "type": "string",
                        "description": "First updated JobId - Use results instead",
                        "deprecated": true
                    },
                    "step_id": {
                        "type": "string",
                        "description": "First updated StepID - Use results instead",
                        "deprecated": true
                    },
                    "job_submit_user_msg": {
                        "type": "string",
                        "description": "First updated Job submision user message - Use results instead",
                        "deprecated": true
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": []
            },
            "v0.0.40_openapi_job_post_response": {
                "type": "object",
                "properties": {
                    "results": {
                        "$ref": "#/components/schemas/v0.0.40_job_array_response_array",
                        "description": "Job update results"
                    },
                    "job_id": {
                        "type": "string",
                        "description": "First updated JobId - Use results instead"
                    },
                    "step_id": {
                        "type": "string",
                        "description": "First updated StepID - Use results instead"
                    },
                    "job_submit_user_msg": {
                        "type": "string",
                        "description": "First updated Job submision user message - Use results instead"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": []
            },
            "v0.0.40_job_array_response_array": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_job_array_response_msg_entry"
                }
            },
            "v0.0.40_job_array_response_msg_entry": {
                "type": "object",
                "properties": {
                    "job_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "JobId for updated Job"
                    },
                    "step_id": {
                        "type": "string",
                        "description": "StepId for updated Job"
                    },
                    "error": {
                        "type": "string",
                        "description": "Verbose update status or error"
                    },
                    "error_code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Verbose update status or error"
                    },
                    "why": {
                        "type": "string",
                        "description": "Update response message"
                    }
                },
                "required": []
            },
            "v0.0.41_openapi_nodes_resp": {
                "type": "object",
                "properties": {
                    "nodes": {
                        "type": "array",
                        "description": "list of nodes",
                        "items": {
                            "type": "object",
                            "properties": {
                                "architecture": {
                                    "type": "string"
                                },
                                "burstbuffer_network_address": {
                                    "type": "string"
                                },
                                "boards": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "boot_time": {
                                    "type": "object",
                                    "description": "64 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "cluster_name": {
                                    "type": "string"
                                },
                                "cores": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "specialized_cores": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "cpu_binding": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "cpu_load": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "free_mem": {
                                    "type": "object",
                                    "description": "64 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "cpus": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "effective_cpus": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "specialized_cpus": {
                                    "type": "string"
                                },
                                "energy": {
                                    "type": "object",
                                    "properties": {
                                        "average_watts": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "base_consumed_energy": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "consumed_energy": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "current_watts": {
                                            "type": "object",
                                            "description": "32 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "previous_consumed_energy": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "last_collected": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    },
                                    "required": []
                                },
                                "external_sensors": {
                                    "type": "object",
                                    "properties": {},
                                    "deprecated": true
                                },
                                "extra": {
                                    "type": "string"
                                },
                                "power": {
                                    "type": "object",
                                    "properties": {},
                                    "deprecated": true
                                },
                                "features": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "active_features": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "gpu_spec": {
                                    "type": "string"
                                },
                                "gres": {
                                    "type": "string"
                                },
                                "gres_drained": {
                                    "type": "string"
                                },
                                "gres_used": {
                                    "type": "string"
                                },
                                "instance_id": {
                                    "type": "string"
                                },
                                "instance_type": {
                                    "type": "string"
                                },
                                "last_busy": {
                                    "type": "object",
                                    "description": "64 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "mcs_label": {
                                    "type": "string"
                                },
                                "specialized_memory": {
                                    "type": "integer",
                                    "format": "int64"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "next_state_after_reboot": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "INVALID",
                                            "UNKNOWN",
                                            "DOWN",
                                            "IDLE",
                                            "ALLOCATED",
                                            "ERROR",
                                            "MIXED",
                                            "FUTURE",
                                            "RESERVED",
                                            "UNDRAIN",
                                            "CLOUD",
                                            "RESUME",
                                            "DRAIN",
                                            "COMPLETING",
                                            "NOT_RESPONDING",
                                            "POWERED_DOWN",
                                            "FAIL",
                                            "POWERING_UP",
                                            "MAINTENANCE",
                                            "REBOOT_REQUESTED",
                                            "REBOOT_CANCELED",
                                            "POWERING_DOWN",
                                            "DYNAMIC_FUTURE",
                                            "REBOOT_ISSUED",
                                            "PLANNED",
                                            "INVALID_REG",
                                            "POWER_DOWN",
                                            "POWER_UP",
                                            "POWER_DRAIN",
                                            "DYNAMIC_NORM"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "address": {
                                    "type": "string"
                                },
                                "hostname": {
                                    "type": "string"
                                },
                                "state": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "INVALID",
                                            "UNKNOWN",
                                            "DOWN",
                                            "IDLE",
                                            "ALLOCATED",
                                            "ERROR",
                                            "MIXED",
                                            "FUTURE",
                                            "RESERVED",
                                            "UNDRAIN",
                                            "CLOUD",
                                            "RESUME",
                                            "DRAIN",
                                            "COMPLETING",
                                            "NOT_RESPONDING",
                                            "POWERED_DOWN",
                                            "FAIL",
                                            "POWERING_UP",
                                            "MAINTENANCE",
                                            "REBOOT_REQUESTED",
                                            "REBOOT_CANCELED",
                                            "POWERING_DOWN",
                                            "DYNAMIC_FUTURE",
                                            "REBOOT_ISSUED",
                                            "PLANNED",
                                            "INVALID_REG",
                                            "POWER_DOWN",
                                            "POWER_UP",
                                            "POWER_DRAIN",
                                            "DYNAMIC_NORM"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "operating_system": {
                                    "type": "string"
                                },
                                "owner": {
                                    "type": "string"
                                },
                                "partitions": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "port": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "real_memory": {
                                    "type": "integer",
                                    "format": "int64"
                                },
                                "res_cores_per_gpu": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "comment": {
                                    "type": "string"
                                },
                                "reason": {
                                    "type": "string"
                                },
                                "reason_changed_at": {
                                    "type": "object",
                                    "description": "64 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "reason_set_by_user": {
                                    "type": "string"
                                },
                                "resume_after": {
                                    "type": "object",
                                    "description": "64 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "reservation": {
                                    "type": "string"
                                },
                                "alloc_memory": {
                                    "type": "integer",
                                    "format": "int64"
                                },
                                "alloc_cpus": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "alloc_idle_cpus": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "tres_used": {
                                    "type": "string"
                                },
                                "tres_weighted": {
                                    "type": "number",
                                    "format": "double"
                                },
                                "slurmd_start_time": {
                                    "type": "object",
                                    "description": "64 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "sockets": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "threads": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "temporary_disk": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "weight": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "tres": {
                                    "type": "string"
                                },
                                "version": {
                                    "type": "string"
                                }
                            },
                            "required": []
                        }
                    },
                    "last_update": {
                        "type": "object",
                        "description": "time of last node change (UNIX timestamp)",
                        "properties": {
                            "set": {
                                "type": "boolean",
                                "description": "True if number has been set. False if number is unset"
                            },
                            "infinite": {
                                "type": "boolean",
                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                            },
                            "number": {
                                "type": "integer",
                                "format": "int64",
                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                            }
                        },
                        "required": []
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "nodes",
                    "last_update"
                ]
            },
            "v0.0.40_openapi_nodes_resp": {
                "type": "object",
                "properties": {
                    "nodes": {
                        "$ref": "#/components/schemas/v0.0.40_nodes",
                        "description": "list of nodes"
                    },
                    "last_update": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val",
                        "description": "time of last node change (UNIX timestamp)"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "nodes",
                    "last_update"
                ]
            },
            "v0.0.40_nodes": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_node"
                }
            },
            "v0.0.40_node": {
                "type": "object",
                "properties": {
                    "architecture": {
                        "type": "string"
                    },
                    "burstbuffer_network_address": {
                        "type": "string"
                    },
                    "boards": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "boot_time": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "cluster_name": {
                        "type": "string"
                    },
                    "cores": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "specialized_cores": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cpu_binding": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cpu_load": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "free_mem": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "effective_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "specialized_cpus": {
                        "type": "string"
                    },
                    "energy": {
                        "$ref": "#/components/schemas/v0.0.40_acct_gather_energy"
                    },
                    "external_sensors": {
                        "$ref": "#/components/schemas/v0.0.40_ext_sensors_data"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "power": {
                        "$ref": "#/components/schemas/v0.0.40_power_mgmt_data"
                    },
                    "features": {
                        "$ref": "#/components/schemas/v0.0.40_csv_string"
                    },
                    "active_features": {
                        "$ref": "#/components/schemas/v0.0.40_csv_string"
                    },
                    "gres": {
                        "type": "string"
                    },
                    "gres_drained": {
                        "type": "string"
                    },
                    "gres_used": {
                        "type": "string"
                    },
                    "instance_id": {
                        "type": "string"
                    },
                    "instance_type": {
                        "type": "string"
                    },
                    "last_busy": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "mcs_label": {
                        "type": "string"
                    },
                    "specialized_memory": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "next_state_after_reboot": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "INVALID",
                                "UNKNOWN",
                                "DOWN",
                                "IDLE",
                                "ALLOCATED",
                                "ERROR",
                                "MIXED",
                                "FUTURE",
                                "RESERVED",
                                "UNDRAIN",
                                "CLOUD",
                                "RESUME",
                                "DRAIN",
                                "COMPLETING",
                                "NOT_RESPONDING",
                                "POWERED_DOWN",
                                "FAIL",
                                "POWERING_UP",
                                "MAINTENANCE",
                                "REBOOT_REQUESTED",
                                "REBOOT_CANCELED",
                                "POWERING_DOWN",
                                "DYNAMIC_FUTURE",
                                "REBOOT_ISSUED",
                                "PLANNED",
                                "INVALID_REG",
                                "POWER_DOWN",
                                "POWER_UP",
                                "POWER_DRAIN",
                                "DYNAMIC_NORM"
                            ],
                            "type": "string"
                        }
                    },
                    "address": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "state": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "INVALID",
                                "UNKNOWN",
                                "DOWN",
                                "IDLE",
                                "ALLOCATED",
                                "ERROR",
                                "MIXED",
                                "FUTURE",
                                "RESERVED",
                                "UNDRAIN",
                                "CLOUD",
                                "RESUME",
                                "DRAIN",
                                "COMPLETING",
                                "NOT_RESPONDING",
                                "POWERED_DOWN",
                                "FAIL",
                                "POWERING_UP",
                                "MAINTENANCE",
                                "REBOOT_REQUESTED",
                                "REBOOT_CANCELED",
                                "POWERING_DOWN",
                                "DYNAMIC_FUTURE",
                                "REBOOT_ISSUED",
                                "PLANNED",
                                "INVALID_REG",
                                "POWER_DOWN",
                                "POWER_UP",
                                "POWER_DRAIN",
                                "DYNAMIC_NORM"
                            ],
                            "type": "string"
                        }
                    },
                    "operating_system": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "partitions": {
                        "$ref": "#/components/schemas/v0.0.40_csv_string"
                    },
                    "port": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "real_memory": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "reason_changed_at": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "reason_set_by_user": {
                        "type": "string"
                    },
                    "resume_after": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "reservation": {
                        "type": "string"
                    },
                    "alloc_memory": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "alloc_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "alloc_idle_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tres_used": {
                        "type": "string"
                    },
                    "tres_weighted": {
                        "type": "number",
                        "format": "double"
                    },
                    "slurmd_start_time": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "sockets": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "threads": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "temporary_disk": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "weight": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tres": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.40_acct_gather_energy": {
                "type": "object",
                "properties": {
                    "average_watts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "base_consumed_energy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "consumed_energy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "current_watts": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "previous_consumed_energy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "last_collected": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": []
            },
            "v0.0.40_ext_sensors_data": {
                "type": "object",
                "description": "removed field",
                "properties": {},
                "deprecated": true
            },
            "v0.0.40_power_mgmt_data": {
                "type": "object",
                "description": "removed field",
                "properties": {},
                "deprecated": true
            },
            "v0.0.41_update_node_msg": {
                "type": "object",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "arbitrary comment"
                    },
                    "cpu_bind": {
                        "type": "integer",
                        "format": "int32",
                        "description": "default CPU binding type"
                    },
                    "extra": {
                        "type": "string",
                        "description": "arbitrary string"
                    },
                    "features": {
                        "type": "array",
                        "description": "new available feature for node",
                        "items": {
                            "type": "string"
                        }
                    },
                    "features_act": {
                        "type": "array",
                        "description": "new active feature for node",
                        "items": {
                            "type": "string"
                        }
                    },
                    "gres": {
                        "type": "string",
                        "description": "new generic resources for node"
                    },
                    "address": {
                        "type": "array",
                        "description": "communication name",
                        "items": {
                            "type": "string"
                        }
                    },
                    "hostname": {
                        "type": "array",
                        "description": "node's hostname",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "array",
                        "description": "node to update",
                        "items": {
                            "type": "string"
                        }
                    },
                    "state": {
                        "type": "array",
                        "description": "assign new node state",
                        "items": {
                            "enum": [
                                "INVALID",
                                "UNKNOWN",
                                "DOWN",
                                "IDLE",
                                "ALLOCATED",
                                "ERROR",
                                "MIXED",
                                "FUTURE",
                                "RESERVED",
                                "UNDRAIN",
                                "CLOUD",
                                "RESUME",
                                "DRAIN",
                                "COMPLETING",
                                "NOT_RESPONDING",
                                "POWERED_DOWN",
                                "FAIL",
                                "POWERING_UP",
                                "MAINTENANCE",
                                "REBOOT_REQUESTED",
                                "REBOOT_CANCELED",
                                "POWERING_DOWN",
                                "DYNAMIC_FUTURE",
                                "REBOOT_ISSUED",
                                "PLANNED",
                                "INVALID_REG",
                                "POWER_DOWN",
                                "POWER_UP",
                                "POWER_DRAIN",
                                "DYNAMIC_NORM"
                            ],
                            "type": "string"
                        }
                    },
                    "reason": {
                        "type": "string",
                        "description": "reason for node being DOWN or DRAINING"
                    },
                    "reason_uid": {
                        "type": "string",
                        "description": "user ID of sending (needed if user root is sending message)"
                    },
                    "resume_after": {
                        "type": "object",
                        "description": "automatically resume DOWN or DRAINED node after this amount of seconds",
                        "properties": {
                            "set": {
                                "type": "boolean",
                                "description": "True if number has been set. False if number is unset"
                            },
                            "infinite": {
                                "type": "boolean",
                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                            },
                            "number": {
                                "type": "integer",
                                "format": "int32",
                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                            }
                        },
                        "required": []
                    },
                    "weight": {
                        "type": "object",
                        "description": "new weight for node",
                        "properties": {
                            "set": {
                                "type": "boolean",
                                "description": "True if number has been set. False if number is unset"
                            },
                            "infinite": {
                                "type": "boolean",
                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                            },
                            "number": {
                                "type": "integer",
                                "format": "int32",
                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                            }
                        },
                        "required": []
                    }
                },
                "required": []
            },
            "v0.0.40_update_node_msg": {
                "type": "object",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "arbitrary comment"
                    },
                    "cpu_bind": {
                        "type": "integer",
                        "format": "int32",
                        "description": "default CPU binding type"
                    },
                    "extra": {
                        "type": "string",
                        "description": "arbitrary string"
                    },
                    "features": {
                        "$ref": "#/components/schemas/v0.0.40_csv_string",
                        "description": "new available feature for node"
                    },
                    "features_act": {
                        "$ref": "#/components/schemas/v0.0.40_csv_string",
                        "description": "new active feature for node"
                    },
                    "gres": {
                        "type": "string",
                        "description": "new generic resources for node"
                    },
                    "address": {
                        "$ref": "#/components/schemas/v0.0.40_hostlist_string",
                        "description": "communication name"
                    },
                    "hostname": {
                        "$ref": "#/components/schemas/v0.0.40_hostlist_string",
                        "description": "node's hostname"
                    },
                    "name": {
                        "$ref": "#/components/schemas/v0.0.40_hostlist_string",
                        "description": "node to update"
                    },
                    "state": {
                        "type": "array",
                        "description": "assign new node state",
                        "items": {
                            "enum": [
                                "INVALID",
                                "UNKNOWN",
                                "DOWN",
                                "IDLE",
                                "ALLOCATED",
                                "ERROR",
                                "MIXED",
                                "FUTURE",
                                "RESERVED",
                                "UNDRAIN",
                                "CLOUD",
                                "RESUME",
                                "DRAIN",
                                "COMPLETING",
                                "NOT_RESPONDING",
                                "POWERED_DOWN",
                                "FAIL",
                                "POWERING_UP",
                                "MAINTENANCE",
                                "REBOOT_REQUESTED",
                                "REBOOT_CANCELED",
                                "POWERING_DOWN",
                                "DYNAMIC_FUTURE",
                                "REBOOT_ISSUED",
                                "PLANNED",
                                "INVALID_REG",
                                "POWER_DOWN",
                                "POWER_UP",
                                "POWER_DRAIN",
                                "DYNAMIC_NORM"
                            ],
                            "type": "string"
                        }
                    },
                    "reason": {
                        "type": "string",
                        "description": "reason for node being DOWN or DRAINING"
                    },
                    "reason_uid": {
                        "type": "string",
                        "description": "user ID of sending (needed if user root is sending message)"
                    },
                    "resume_after": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val",
                        "description": "automatically resume DOWN or DRAINED node after this amount of seconds"
                    },
                    "weight": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val",
                        "description": "new weight for node"
                    }
                },
                "required": []
            },
            "v0.0.40_hostlist_string": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.41_openapi_partition_resp": {
                "type": "object",
                "properties": {
                    "partitions": {
                        "type": "array",
                        "description": "list of partitions",
                        "items": {
                            "type": "object",
                            "properties": {
                                "nodes": {
                                    "type": "object",
                                    "properties": {
                                        "allowed_allocation": {
                                            "type": "string"
                                        },
                                        "configured": {
                                            "type": "string"
                                        },
                                        "total": {
                                            "type": "integer",
                                            "format": "int32"
                                        }
                                    }
                                },
                                "accounts": {
                                    "type": "object",
                                    "properties": {
                                        "allowed": {
                                            "type": "string"
                                        },
                                        "deny": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "groups": {
                                    "type": "object",
                                    "properties": {
                                        "allowed": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "qos": {
                                    "type": "object",
                                    "properties": {
                                        "allowed": {
                                            "type": "string"
                                        },
                                        "deny": {
                                            "type": "string"
                                        },
                                        "assigned": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "alternate": {
                                    "type": "string"
                                },
                                "tres": {
                                    "type": "object",
                                    "properties": {
                                        "billing_weights": {
                                            "type": "string"
                                        },
                                        "configured": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "cluster": {
                                    "type": "string"
                                },
                                "select_type": {
                                    "type": "array",
                                    "description": "Scheduler consumable resource selection types",
                                    "items": {
                                        "enum": [
                                            "CPU",
                                            "SOCKET",
                                            "CORE",
                                            "BOARD",
                                            "MEMORY",
                                            "ONE_TASK_PER_CORE",
                                            "PACK_NODES",
                                            "CORE_DEFAULT_DIST_BLOCK",
                                            "LLN",
                                            "LINEAR"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "cpus": {
                                    "type": "object",
                                    "properties": {
                                        "task_binding": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "total": {
                                            "type": "integer",
                                            "format": "int32"
                                        }
                                    }
                                },
                                "defaults": {
                                    "type": "object",
                                    "properties": {
                                        "memory_per_cpu": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "partition_memory_per_cpu": {
                                            "type": "object",
                                            "description": "64 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "partition_memory_per_node": {
                                            "type": "object",
                                            "description": "64 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "time": {
                                            "type": "object",
                                            "description": "32 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "job": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "grace_time": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "maximums": {
                                    "type": "object",
                                    "properties": {
                                        "cpus_per_node": {
                                            "type": "object",
                                            "description": "32 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "cpus_per_socket": {
                                            "type": "object",
                                            "description": "32 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "memory_per_cpu": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "partition_memory_per_cpu": {
                                            "type": "object",
                                            "description": "64 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "partition_memory_per_node": {
                                            "type": "object",
                                            "description": "64 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "nodes": {
                                            "type": "object",
                                            "description": "32 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "shares": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "oversubscribe": {
                                            "type": "object",
                                            "properties": {
                                                "jobs": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "flags": {
                                                    "type": "array",
                                                    "items": {
                                                        "enum": [
                                                            "force"
                                                        ],
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "time": {
                                            "type": "object",
                                            "description": "32 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "over_time_limit": {
                                            "type": "object",
                                            "description": "16 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        }
                                    }
                                },
                                "minimums": {
                                    "type": "object",
                                    "properties": {
                                        "nodes": {
                                            "type": "integer",
                                            "format": "int32"
                                        }
                                    }
                                },
                                "name": {
                                    "type": "string"
                                },
                                "node_sets": {
                                    "type": "string"
                                },
                                "priority": {
                                    "type": "object",
                                    "properties": {
                                        "job_factor": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "tier": {
                                            "type": "integer",
                                            "format": "int32"
                                        }
                                    }
                                },
                                "timeouts": {
                                    "type": "object",
                                    "properties": {
                                        "resume": {
                                            "type": "object",
                                            "description": "16 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        },
                                        "suspend": {
                                            "type": "object",
                                            "description": "16 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        }
                                    }
                                },
                                "partition": {
                                    "type": "object",
                                    "properties": {
                                        "state": {
                                            "type": "array",
                                            "items": {
                                                "enum": [
                                                    "INACTIVE",
                                                    "UNKNOWN",
                                                    "UP",
                                                    "DOWN",
                                                    "DRAIN"
                                                ],
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "suspend_time": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                }
                            },
                            "required": []
                        }
                    },
                    "last_update": {
                        "type": "object",
                        "description": "time of last partition change (UNIX timestamp)",
                        "properties": {
                            "set": {
                                "type": "boolean",
                                "description": "True if number has been set. False if number is unset"
                            },
                            "infinite": {
                                "type": "boolean",
                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                            },
                            "number": {
                                "type": "integer",
                                "format": "int64",
                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                            }
                        },
                        "required": []
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "partitions",
                    "last_update"
                ]
            },
            "v0.0.40_openapi_partition_resp": {
                "type": "object",
                "properties": {
                    "partitions": {
                        "$ref": "#/components/schemas/v0.0.40_partition_info_msg",
                        "description": "list of partitions"
                    },
                    "last_update": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val",
                        "description": "time of last partition change (UNIX timestamp)"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "partitions",
                    "last_update"
                ]
            },
            "v0.0.40_partition_info_msg": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_partition_info"
                }
            },
            "v0.0.40_partition_info": {
                "type": "object",
                "properties": {
                    "nodes": {
                        "type": "object",
                        "properties": {
                            "allowed_allocation": {
                                "type": "string"
                            },
                            "configured": {
                                "type": "string"
                            },
                            "total": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "accounts": {
                        "type": "object",
                        "properties": {
                            "allowed": {
                                "type": "string"
                            },
                            "deny": {
                                "type": "string"
                            }
                        }
                    },
                    "groups": {
                        "type": "object",
                        "properties": {
                            "allowed": {
                                "type": "string"
                            }
                        }
                    },
                    "qos": {
                        "type": "object",
                        "properties": {
                            "allowed": {
                                "type": "string"
                            },
                            "deny": {
                                "type": "string"
                            },
                            "assigned": {
                                "type": "string"
                            }
                        }
                    },
                    "alternate": {
                        "type": "string"
                    },
                    "tres": {
                        "type": "object",
                        "properties": {
                            "billing_weights": {
                                "type": "string"
                            },
                            "configured": {
                                "type": "string"
                            }
                        }
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "cpus": {
                        "type": "object",
                        "properties": {
                            "task_binding": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "total": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "defaults": {
                        "type": "object",
                        "properties": {
                            "memory_per_cpu": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "partition_memory_per_cpu": {
                                "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                            },
                            "partition_memory_per_node": {
                                "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                            },
                            "time": {
                                "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                            },
                            "job": {
                                "type": "string"
                            }
                        }
                    },
                    "grace_time": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maximums": {
                        "type": "object",
                        "properties": {
                            "cpus_per_node": {
                                "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                            },
                            "cpus_per_socket": {
                                "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                            },
                            "memory_per_cpu": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "partition_memory_per_cpu": {
                                "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                            },
                            "partition_memory_per_node": {
                                "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                            },
                            "nodes": {
                                "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                            },
                            "shares": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "oversubscribe": {
                                "type": "object",
                                "properties": {
                                    "jobs": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "flags": {
                                        "type": "array",
                                        "items": {
                                            "enum": [
                                                "force"
                                            ],
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "time": {
                                "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                            },
                            "over_time_limit": {
                                "$ref": "#/components/schemas/v0.0.40_uint16_no_val"
                            }
                        }
                    },
                    "minimums": {
                        "type": "object",
                        "properties": {
                            "nodes": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "node_sets": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "object",
                        "properties": {
                            "job_factor": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "tier": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "timeouts": {
                        "type": "object",
                        "properties": {
                            "resume": {
                                "$ref": "#/components/schemas/v0.0.40_uint16_no_val"
                            },
                            "suspend": {
                                "$ref": "#/components/schemas/v0.0.40_uint16_no_val"
                            }
                        }
                    },
                    "partition": {
                        "type": "object",
                        "properties": {
                            "state": {
                                "type": "array",
                                "items": {
                                    "enum": [
                                        "INACTIVE",
                                        "UNKNOWN",
                                        "UP",
                                        "DOWN",
                                        "DRAIN"
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "suspend_time": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    }
                },
                "required": []
            },
            "v0.0.41_openapi_reservation_resp": {
                "type": "object",
                "properties": {
                    "reservations": {
                        "type": "array",
                        "description": "list of reservations",
                        "items": {
                            "type": "object",
                            "properties": {
                                "accounts": {
                                    "type": "string"
                                },
                                "burst_buffer": {
                                    "type": "string"
                                },
                                "core_count": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "core_specializations": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "node": {
                                                "type": "string"
                                            },
                                            "core": {
                                                "type": "string"
                                            }
                                        },
                                        "required": []
                                    }
                                },
                                "end_time": {
                                    "type": "object",
                                    "description": "64 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "features": {
                                    "type": "string"
                                },
                                "flags": {
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "MAINT",
                                            "NO_MAINT",
                                            "DAILY",
                                            "NO_DAILY",
                                            "WEEKLY",
                                            "NO_WEEKLY",
                                            "IGNORE_JOBS",
                                            "NO_IGNORE_JOBS",
                                            "ANY_NODES",
                                            "STATIC",
                                            "NO_STATIC",
                                            "PART_NODES",
                                            "NO_PART_NODES",
                                            "OVERLAP",
                                            "SPEC_NODES",
                                            "TIME_FLOAT",
                                            "REPLACE",
                                            "ALL_NODES",
                                            "PURGE_COMP",
                                            "WEEKDAY",
                                            "NO_WEEKDAY",
                                            "WEEKEND",
                                            "NO_WEEKEND",
                                            "FLEX",
                                            "NO_FLEX",
                                            "DURATION_PLUS",
                                            "DURATION_MINUS",
                                            "NO_HOLD_JOBS_AFTER_END",
                                            "NO_PURGE_COMP",
                                            "MAGNETIC",
                                            "SKIP",
                                            "HOURLY",
                                            "NO_HOURLY",
                                            "USER_DELETE",
                                            "NO_USER_DELETE",
                                            "REOCCURRING"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "groups": {
                                    "type": "string"
                                },
                                "licenses": {
                                    "type": "string"
                                },
                                "max_start_delay": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "node_count": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "node_list": {
                                    "type": "string"
                                },
                                "partition": {
                                    "type": "string"
                                },
                                "purge_completed": {
                                    "type": "object",
                                    "properties": {
                                        "time": {
                                            "type": "object",
                                            "description": "32 bit integer number with flags",
                                            "properties": {
                                                "set": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set. False if number is unset"
                                                },
                                                "infinite": {
                                                    "type": "boolean",
                                                    "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                                },
                                                "number": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                                }
                                            },
                                            "required": []
                                        }
                                    }
                                },
                                "start_time": {
                                    "type": "object",
                                    "description": "64 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": []
                                },
                                "watts": {
                                    "type": "object",
                                    "description": "32 bit integer number with flags",
                                    "properties": {
                                        "set": {
                                            "type": "boolean",
                                            "description": "True if number has been set. False if number is unset"
                                        },
                                        "infinite": {
                                            "type": "boolean",
                                            "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                                        },
                                        "number": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                                        }
                                    },
                                    "required": [],
                                    "deprecated": true
                                },
                                "tres": {
                                    "type": "string"
                                },
                                "users": {
                                    "type": "string"
                                }
                            },
                            "required": []
                        }
                    },
                    "last_update": {
                        "type": "object",
                        "description": "time of last reservation change (UNIX timestamp)",
                        "properties": {
                            "set": {
                                "type": "boolean",
                                "description": "True if number has been set. False if number is unset"
                            },
                            "infinite": {
                                "type": "boolean",
                                "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored."
                            },
                            "number": {
                                "type": "integer",
                                "format": "int64",
                                "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                            }
                        },
                        "required": []
                    },
                    "meta": {
                        "type": "object",
                        "description": "Slurm meta values",
                        "properties": {
                            "plugin": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Slurm plugin type (if applicable)"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Slurm plugin name (if applicable)"
                                    },
                                    "data_parser": {
                                        "type": "string",
                                        "description": "Slurm data_parser plugin"
                                    },
                                    "accounting_storage": {
                                        "type": "string",
                                        "description": "Slurm accounting plugin"
                                    }
                                }
                            },
                            "client": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "description": "Client source description"
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "Client user (if known)"
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "Client group (if known)"
                                    }
                                }
                            },
                            "command": {
                                "type": "array",
                                "description": "CLI command (if applicable)",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "slurm": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "type": "string",
                                                "description": "Slurm release major version"
                                            },
                                            "micro": {
                                                "type": "string",
                                                "description": "Slurm release micro version"
                                            },
                                            "minor": {
                                                "type": "string",
                                                "description": "Slurm release minor version"
                                            }
                                        }
                                    },
                                    "release": {
                                        "type": "string",
                                        "description": "Slurm release string"
                                    },
                                    "cluster": {
                                        "type": "string",
                                        "description": "Slurm cluster name"
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "errors": {
                        "type": "array",
                        "description": "Query errors",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form error description"
                                },
                                "error_number": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Slurm numeric error identifier"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Short form error description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of error or where error was first detected"
                                }
                            },
                            "required": []
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Query warnings",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Long form warning description"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Source of warning or where warning was first detected"
                                }
                            },
                            "required": []
                        }
                    }
                },
                "required": [
                    "reservations",
                    "last_update"
                ]
            },
            "v0.0.40_openapi_reservation_resp": {
                "type": "object",
                "properties": {
                    "reservations": {
                        "$ref": "#/components/schemas/v0.0.40_reservation_info_msg",
                        "description": "list of reservations"
                    },
                    "last_update": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val",
                        "description": "time of last reservation change (UNIX timestamp)"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_meta",
                        "description": "Slurm meta values"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_errors",
                        "description": "Query errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.40_openapi_warnings",
                        "description": "Query warnings"
                    }
                },
                "required": [
                    "reservations",
                    "last_update"
                ]
            },
            "v0.0.40_reservation_info_msg": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_reservation_info"
                }
            },
            "v0.0.40_reservation_info": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "string"
                    },
                    "burst_buffer": {
                        "type": "string"
                    },
                    "core_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "core_specializations": {
                        "$ref": "#/components/schemas/v0.0.40_reservation_info_core_spec"
                    },
                    "end_time": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "features": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "MAINT",
                                "NO_MAINT",
                                "DAILY",
                                "NO_DAILY",
                                "WEEKLY",
                                "NO_WEEKLY",
                                "IGNORE_JOBS",
                                "NO_IGNORE_JOBS",
                                "ANY_NODES",
                                "STATIC",
                                "NO_STATIC",
                                "PART_NODES",
                                "NO_PART_NODES",
                                "OVERLAP",
                                "SPEC_NODES",
                                "TIME_FLOAT",
                                "REPLACE",
                                "ALL_NODES",
                                "PURGE_COMP",
                                "WEEKDAY",
                                "NO_WEEKDAY",
                                "WEEKEND",
                                "NO_WEEKEND",
                                "FLEX",
                                "NO_FLEX",
                                "DURATION_PLUS",
                                "DURATION_MINUS",
                                "NO_HOLD_JOBS_AFTER_END",
                                "NO_PURGE_COMP",
                                "MAGNETIC",
                                "SKIP",
                                "HOURLY",
                                "NO_HOURLY",
                                "REOCCURRING"
                            ],
                            "type": "string"
                        }
                    },
                    "groups": {
                        "type": "string"
                    },
                    "licenses": {
                        "type": "string"
                    },
                    "max_start_delay": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "node_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "node_list": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "purge_completed": {
                        "type": "object",
                        "properties": {
                            "time": {
                                "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                            }
                        }
                    },
                    "start_time": {
                        "$ref": "#/components/schemas/v0.0.40_uint64_no_val"
                    },
                    "watts": {
                        "$ref": "#/components/schemas/v0.0.40_uint32_no_val"
                    },
                    "tres": {
                        "type": "string"
                    },
                    "users": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.40_reservation_info_core_spec": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.40_reservation_core_spec"
                }
            },
            "v0.0.40_reservation_core_spec": {
                "type": "object",
                "properties": {
                    "node": {
                        "type": "string"
                    },
                    "core": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "dbv0.0.39_diag": {
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/dbv0.0.39_warnings"
                    },
                    "statistics": {
                        "$ref": "#/components/schemas/v0.0.39_stats_rec_ptr"
                    }
                }
            },
            "dbv0.0.39_account_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/dbv0.0.39_warnings"
                    },
                    "accounts": {
                        "$ref": "#/components/schemas/v0.0.39_account_list"
                    }
                }
            },
            "dbv0.0.39_wckey_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/dbv0.0.39_errors"
                    },
                    "wckeys": {
                        "$ref": "#/components/schemas/v0.0.39_wckey_list"
                    }
                }
            },
            "dbv0.0.39_user_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/dbv0.0.39_warnings"
                    },
                    "users": {
                        "$ref": "#/components/schemas/v0.0.39_user_list"
                    }
                }
            },
            "dbv0.0.39_associations_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/dbv0.0.39_warnings"
                    },
                    "associations": {
                        "$ref": "#/components/schemas/v0.0.39_assoc_list"
                    }
                }
            },
            "dbv0.0.39_qos_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/dbv0.0.39_meta"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/dbv0.0.39_warnings"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/dbv0.0.39_errors"
                    },
                    "qos": {
                        "$ref": "#/components/schemas/v0.0.39_qos_list"
                    }
                }
            },
            "dbv0.0.39_tres_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/dbv0.0.39_warnings"
                    },
                    "tres": {
                        "$ref": "#/components/schemas/v0.0.39_tres_list"
                    }
                }
            },
            "dbv0.0.39_job_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/dbv0.0.39_warnings"
                    },
                    "jobs": {
                        "$ref": "#/components/schemas/v0.0.39_job_list"
                    }
                }
            },
            "dbv0.0.39_clusters_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/dbv0.0.39_warnings"
                    },
                    "clusters": {
                        "$ref": "#/components/schemas/v0.0.39_cluster_rec_list"
                    }
                }
            },
            "dbv0.0.39_config_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/dbv0.0.39_warnings"
                    },
                    "tres": {
                        "$ref": "#/components/schemas/v0.0.39_tres_list"
                    },
                    "accounts": {
                        "$ref": "#/components/schemas/v0.0.39_account_list"
                    },
                    "associations": {
                        "$ref": "#/components/schemas/v0.0.39_assoc_list"
                    },
                    "users": {
                        "$ref": "#/components/schemas/v0.0.39_user_list"
                    },
                    "qos": {
                        "$ref": "#/components/schemas/v0.0.39_qos_list"
                    },
                    "wckeys": {
                        "$ref": "#/components/schemas/v0.0.39_wckey_list"
                    },
                    "clusters": {
                        "$ref": "#/components/schemas/v0.0.39_cluster_rec_list"
                    }
                }
            },
            "status": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.39_warnings"
                    }
                }
            },
            "dbv0.0.39_warnings": {
                "type": "array",
                "description": "Slurm warnings",
                "items": {
                    "$ref": "#/components/schemas/dbv0.0.39_warning"
                }
            },
            "dbv0.0.39_warning": {
                "properties": {
                    "warning": {
                        "description": "Earning message",
                        "type": "string"
                    },
                    "source": {
                        "description": "Where error occurred in the source",
                        "type": "string"
                    },
                    "description": {
                        "description": "Explanation of cause of error",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "dbv0.0.39_errors": {
                "type": "array",
                "description": "Slurm errors",
                "items": {
                    "$ref": "#/components/schemas/dbv0.0.39_error"
                }
            },
            "dbv0.0.39_error": {
                "properties": {
                    "error_number": {
                        "description": "Slurm internal error number",
                        "type": "integer"
                    },
                    "error": {
                        "description": "Error message",
                        "type": "string"
                    },
                    "source": {
                        "description": "Where error occurred in the source",
                        "type": "string"
                    },
                    "description": {
                        "description": "Explanation of cause of error",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "dbv0.0.39_meta": {
                "type": "object",
                "properties": {
                    "plugin": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": ""
                            },
                            "name": {
                                "type": "string",
                                "description": ""
                            }
                        }
                    },
                    "Slurm": {
                        "type": "object",
                        "description": "Slurm information",
                        "properties": {
                            "version": {
                                "type": "object",
                                "properties": {
                                    "major": {
                                        "type": "integer",
                                        "description": ""
                                    },
                                    "micro": {
                                        "type": "integer",
                                        "description": ""
                                    },
                                    "minor": {
                                        "type": "integer",
                                        "description": ""
                                    }
                                }
                            },
                            "release": {
                                "type": "string",
                                "description": "version specifier"
                            }
                        }
                    }
                }
            },
            "dbv0.0.39_update_users": {
                "properties": {
                    "users": {
                        "$ref": "#/components/schemas/v0.0.39_user_list"
                    }
                },
                "type": "object"
            },
            "dbv0.0.39_update_qos": {
                "properties": {
                    "qos": {
                        "$ref": "#/components/schemas/v0.0.39_qos_list"
                    }
                },
                "type": "object"
            },
            "dbv0.0.39_response_associations_delete": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/dbv0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/dbv0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/dbv0.0.39_warnings"
                    },
                    "removed_associations": {
                        "type": "array",
                        "description": "the associations",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "dbv0.0.39_tres_update": {
                "type": "object",
                "properties": {
                    "tres": {
                        "$ref": "#/components/schemas/v0.0.39_tres_list"
                    }
                }
            },
            "dbv0.0.39_set_config": {
                "type": "object",
                "properties": {
                    "clusters": {
                        "$ref": "#/components/schemas/v0.0.39_cluster_rec_list"
                    },
                    "TRES": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v0.0.39_tres_list"
                        }
                    },
                    "accounts": {
                        "$ref": "#/components/schemas/v0.0.39_account_list"
                    },
                    "users": {
                        "$ref": "#/components/schemas/v0.0.39_user_list"
                    },
                    "qos": {
                        "$ref": "#/components/schemas/v0.0.39_qos_list"
                    },
                    "wckeys": {
                        "$ref": "#/components/schemas/v0.0.39_wckey_list"
                    },
                    "associations": {
                        "$ref": "#/components/schemas/v0.0.39_assoc_list"
                    }
                }
            },
            "v0.0.39_stats_rec_ptr": {
                "$ref": "#/components/schemas/v0.0.39_stats_rec"
            },
            "v0.0.39_stats_rec": {
                "type": "object",
                "properties": {
                    "time_start": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "rollups": {
                        "$ref": "#/components/schemas/v0.0.39_rollup_stats_ptr"
                    },
                    "RPCs": {
                        "$ref": "#/components/schemas/v0.0.39_stats_rpc_list"
                    },
                    "users": {
                        "$ref": "#/components/schemas/v0.0.39_stats_user_list"
                    }
                },
                "required": []
            },
            "v0.0.39_rollup_stats_ptr": {
                "$ref": "#/components/schemas/v0.0.39_rollup_stats"
            },
            "v0.0.39_rollup_stats": {
                "type": "array",
                "description": "list of recorded rollup statistics",
                "items": {
                    "type": "object",
                    "description": "recorded rollup statistics",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "type",
                            "enum": [
                                "internal",
                                "user",
                                "unknown"
                            ]
                        },
                        "last run": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Last time rollup ran (UNIX timestamp)"
                        },
                        "max_cycle": {
                            "type": "integer",
                            "format": "int64",
                            "description": "longest rollup time (seconds)"
                        },
                        "total_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "total time spent doing rollups (seconds)"
                        },
                        "total_cycles": {
                            "type": "integer",
                            "format": "int64",
                            "description": "number of rollups since last_run"
                        },
                        "mean_cycles": {
                            "type": "integer",
                            "format": "int64",
                            "description": "average time for rollup (seconds)"
                        }
                    }
                }
            },
            "v0.0.39_stats_rpc_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_stats_rpc"
                }
            },
            "v0.0.39_stats_rpc": {
                "type": "object",
                "properties": {
                    "rpc": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "time": {
                        "type": "object",
                        "properties": {
                            "average": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "total": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.39_stats_user_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_stats_user"
                }
            },
            "v0.0.39_stats_user": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "time": {
                        "type": "object",
                        "properties": {
                            "average": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "total": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.39_account_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_account"
                }
            },
            "v0.0.39_account": {
                "type": "object",
                "properties": {
                    "associations": {
                        "$ref": "#/components/schemas/v0.0.39_assoc_short_list"
                    },
                    "coordinators": {
                        "$ref": "#/components/schemas/v0.0.39_coord_list"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organization": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "DELETED"
                            ]
                        }
                    }
                },
                "required": [
                    "description",
                    "name",
                    "organization"
                ]
            },
            "v0.0.39_assoc_short_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_assoc_short"
                }
            },
            "v0.0.39_assoc_short": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    }
                },
                "required": [
                    "user"
                ]
            },
            "v0.0.39_coord_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_coord"
                }
            },
            "v0.0.39_coord": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "direct": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "v0.0.39_wckey_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_wckey"
                }
            },
            "v0.0.39_wckey": {
                "type": "object",
                "properties": {
                    "accounting": {
                        "$ref": "#/components/schemas/v0.0.39_accounting_list"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "DELETED"
                            ]
                        }
                    }
                },
                "required": [
                    "cluster",
                    "name",
                    "user"
                ]
            },
            "v0.0.39_accounting_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_accounting"
                }
            },
            "v0.0.39_accounting": {
                "type": "object",
                "properties": {
                    "allocated": {
                        "type": "object",
                        "properties": {
                            "seconds": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "start": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TRES": {
                        "$ref": "#/components/schemas/v0.0.39_tres"
                    }
                },
                "required": []
            },
            "v0.0.39_tres": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "v0.0.39_user_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_user"
                }
            },
            "v0.0.39_user": {
                "type": "object",
                "properties": {
                    "administrator_level": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "Not Set",
                                "None",
                                "Operator",
                                "Administrator"
                            ]
                        }
                    },
                    "associations": {
                        "$ref": "#/components/schemas/v0.0.39_assoc_short_list"
                    },
                    "coordinators": {
                        "$ref": "#/components/schemas/v0.0.39_coord_list"
                    },
                    "default": {
                        "type": "object",
                        "properties": {
                            "account": {
                                "type": "string"
                            },
                            "wckey": {
                                "type": "string"
                            }
                        }
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "NONE",
                                "DELETED"
                            ]
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "old_name": {
                        "type": "string"
                    },
                    "wckeys": {
                        "$ref": "#/components/schemas/v0.0.39_wckey_list"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "v0.0.39_assoc_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_assoc"
                }
            },
            "v0.0.39_assoc": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "default": {
                        "type": "object",
                        "properties": {
                            "qos": {
                                "type": "string"
                            }
                        }
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "DELETED"
                            ]
                        }
                    },
                    "max": {
                        "type": "object",
                        "properties": {
                            "jobs": {
                                "type": "object",
                                "properties": {
                                    "per": {
                                        "type": "object",
                                        "properties": {
                                            "count": {
                                                "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                                            },
                                            "accruing": {
                                                "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                                            },
                                            "submitted": {
                                                "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                                            },
                                            "wall_clock": {
                                                "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                                            }
                                        }
                                    },
                                    "active": {
                                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                                    },
                                    "accruing": {
                                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                                    },
                                    "total": {
                                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                                    }
                                }
                            },
                            "tres": {
                                "type": "object",
                                "properties": {
                                    "total": {
                                        "$ref": "#/components/schemas/v0.0.39_tres_str"
                                    },
                                    "minutes": {
                                        "type": "object",
                                        "properties": {
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "job": {
                                                        "$ref": "#/components/schemas/v0.0.39_tres_str"
                                                    }
                                                }
                                            },
                                            "total": {
                                                "$ref": "#/components/schemas/v0.0.39_tres_str"
                                            }
                                        }
                                    },
                                    "group": {
                                        "type": "object",
                                        "properties": {
                                            "minutes": {
                                                "$ref": "#/components/schemas/v0.0.39_tres_str"
                                            },
                                            "active": {
                                                "$ref": "#/components/schemas/v0.0.39_tres_str"
                                            }
                                        }
                                    },
                                    "per": {
                                        "type": "object",
                                        "properties": {
                                            "job": {
                                                "$ref": "#/components/schemas/v0.0.39_tres_str"
                                            },
                                            "node": {
                                                "$ref": "#/components/schemas/v0.0.39_tres_str"
                                            }
                                        }
                                    }
                                }
                            },
                            "per": {
                                "type": "object",
                                "properties": {
                                    "account": {
                                        "type": "object",
                                        "properties": {
                                            "wall_clock": {
                                                "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "is_default": {
                        "type": "boolean"
                    },
                    "min": {
                        "type": "object",
                        "properties": {
                            "priority_threshold": {
                                "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                            }
                        }
                    },
                    "parent_account": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "priority": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "qos": {
                        "$ref": "#/components/schemas/v0.0.39_qos_string_id_list"
                    },
                    "shares_raw": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "usage": {
                        "$ref": "#/components/schemas/v0.0.39_assoc_usage_ptr"
                    },
                    "user": {
                        "type": "string"
                    }
                },
                "required": [
                    "user"
                ]
            },
            "v0.0.39_uint32_no_val": {
                "type": "object",
                "description": "Integer number with flags",
                "properties": {
                    "set": {
                        "type": "boolean",
                        "description": "True if number has been set. False if number is unset",
                        "default": false
                    },
                    "infinite": {
                        "type": "boolean",
                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
                        "default": 0
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64",
                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                    }
                }
            },
            "v0.0.39_tres_str": {
                "$ref": "#/components/schemas/v0.0.39_tres_list"
            },
            "v0.0.39_tres_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_tres"
                }
            },
            "v0.0.39_qos_string_id_list": {
                "type": "array",
                "description": "List of QOS names",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.39_assoc_usage_ptr": {
                "$ref": "#/components/schemas/v0.0.39_assoc_usage"
            },
            "v0.0.39_assoc_usage": {
                "type": "object",
                "properties": {
                    "accrue_job_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "group_used_wallclock": {
                        "type": "number",
                        "format": "double"
                    },
                    "fairshare_factor": {
                        "type": "number",
                        "format": "double"
                    },
                    "fairshare_shares": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "normalized_priority": {
                        "type": "number",
                        "format": "double"
                    },
                    "normalized_shares": {
                        "type": "number",
                        "format": "double"
                    },
                    "effective_normalized_usage": {
                        "type": "number"
                    },
                    "normalized_usage": {
                        "type": "number"
                    },
                    "raw_usage": {
                        "type": "number"
                    },
                    "active_jobs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "job_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fairshare_level": {
                        "type": "number"
                    }
                },
                "required": []
            },
            "v0.0.39_qos_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_qos"
                }
            },
            "v0.0.39_qos": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "NOT_SET",
                                "ADD",
                                "REMOVE",
                                "PARTITION_MINIMUM_NODE",
                                "PARTITION_MAXIMUM_NODE",
                                "PARTITION_TIME_LIMIT",
                                "ENFORCE_USAGE_THRESHOLD",
                                "NO_RESERVE",
                                "REQUIRED_RESERVATION",
                                "DENY_LIMIT",
                                "OVERRIDE_PARTITION_QOS",
                                "NO_DECAY",
                                "USAGE_FACTOR_SAFE"
                            ]
                        }
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "limits": {
                        "type": "object",
                        "properties": {
                            "grace_time": {
                                "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                            },
                            "max": {
                                "type": "object",
                                "properties": {
                                    "active_jobs": {
                                        "type": "object",
                                        "properties": {
                                            "accruing": {
                                                "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                                            },
                                            "count": {
                                                "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                                            }
                                        }
                                    },
                                    "tres": {
                                        "type": "object",
                                        "properties": {
                                            "total": {
                                                "$ref": "#/components/schemas/v0.0.39_tres_str"
                                            },
                                            "minutes": {
                                                "type": "object",
                                                "properties": {
                                                    "per": {
                                                        "type": "object",
                                                        "properties": {
                                                            "qos": {
                                                                "$ref": "#/components/schemas/v0.0.39_tres_str"
                                                            },
                                                            "job": {
                                                                "$ref": "#/components/schemas/v0.0.39_tres_str"
                                                            },
                                                            "account": {
                                                                "$ref": "#/components/schemas/v0.0.39_tres_str"
                                                            },
                                                            "user": {
                                                                "$ref": "#/components/schemas/v0.0.39_tres_str"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "account": {
                                                        "$ref": "#/components/schemas/v0.0.39_tres_str"
                                                    },
                                                    "job": {
                                                        "$ref": "#/components/schemas/v0.0.39_tres_str"
                                                    },
                                                    "node": {
                                                        "$ref": "#/components/schemas/v0.0.39_tres_str"
                                                    },
                                                    "user": {
                                                        "$ref": "#/components/schemas/v0.0.39_tres_str"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "wall_clock": {
                                        "type": "object",
                                        "properties": {
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "qos": {
                                                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                                                    },
                                                    "job": {
                                                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "jobs": {
                                        "type": "object",
                                        "properties": {
                                            "active_jobs": {
                                                "type": "object",
                                                "properties": {
                                                    "per": {
                                                        "type": "object",
                                                        "properties": {
                                                            "account": {
                                                                "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                                                            },
                                                            "user": {
                                                                "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "account": {
                                                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                                                    },
                                                    "user": {
                                                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "accruing": {
                                        "type": "object",
                                        "properties": {
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "account": {
                                                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                                                    },
                                                    "user": {
                                                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "factor": {
                                "type": "number",
                                "format": "double"
                            },
                            "min": {
                                "type": "object",
                                "properties": {
                                    "priority_threshold": {
                                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                                    },
                                    "tres": {
                                        "type": "object",
                                        "properties": {
                                            "per": {
                                                "type": "object",
                                                "properties": {
                                                    "job": {
                                                        "$ref": "#/components/schemas/v0.0.39_tres_str"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "preempt": {
                        "type": "object",
                        "properties": {
                            "list": {
                                "$ref": "#/components/schemas/v0.0.39_qos_preempt_list"
                            },
                            "mode": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "description": "flags",
                                    "enum": [
                                        "DISABLED",
                                        "SUSPEND",
                                        "REQUEUE",
                                        "CANCEL",
                                        "GANG"
                                    ]
                                }
                            },
                            "exempt_time": {
                                "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                            }
                        }
                    },
                    "priority": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "usage_factor": {
                        "$ref": "#/components/schemas/v0.0.39_float64_no_val"
                    },
                    "usage_threshold": {
                        "$ref": "#/components/schemas/v0.0.39_float64_no_val"
                    }
                },
                "required": []
            },
            "v0.0.39_qos_preempt_list": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.39_float64_no_val": {
                "type": "object",
                "description": "64 bit floating point number with flags",
                "properties": {
                    "set": {
                        "type": "boolean",
                        "description": "True if number has been set. False if number is unset",
                        "default": false
                    },
                    "infinite": {
                        "type": "boolean",
                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
                        "default": 0.0
                    },
                    "number": {
                        "type": "number",
                        "format": "double",
                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                    }
                }
            },
            "v0.0.39_job_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_job"
                }
            },
            "v0.0.39_job": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "object",
                        "properties": {
                            "administrator": {
                                "type": "string"
                            },
                            "job": {
                                "type": "string"
                            },
                            "system": {
                                "type": "string"
                            }
                        }
                    },
                    "allocation_nodes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "array": {
                        "type": "object",
                        "properties": {
                            "job_id": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "limits": {
                                "type": "object",
                                "properties": {
                                    "max": {
                                        "type": "object",
                                        "properties": {
                                            "running": {
                                                "type": "object",
                                                "properties": {
                                                    "tasks": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "task_id": {
                                "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                            },
                            "task": {
                                "type": "string"
                            }
                        }
                    },
                    "association": {
                        "$ref": "#/components/schemas/v0.0.39_job_assoc_id"
                    },
                    "block": {
                        "type": "string"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "constraints": {
                        "type": "string"
                    },
                    "container": {
                        "type": "string"
                    },
                    "derived_exit_code": {
                        "$ref": "#/components/schemas/v0.0.39_job_exit_code"
                    },
                    "time": {
                        "type": "object",
                        "properties": {
                            "elapsed": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "eligible": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "end": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "start": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "submission": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "suspended": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "system": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                }
                            },
                            "limit": {
                                "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                            },
                            "total": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                }
                            },
                            "user": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                }
                            }
                        }
                    },
                    "exit_code": {
                        "$ref": "#/components/schemas/v0.0.39_job_exit_code"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "failed_node": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "NONE",
                                "CLEAR_SCHEDULING",
                                "NOT_SET",
                                "STARTED_ON_SUBMIT",
                                "STARTED_ON_SCHEDULE",
                                "STARTED_ON_BACKFILL",
                                "START_RECEIVED"
                            ]
                        }
                    },
                    "group": {
                        "type": "string"
                    },
                    "het": {
                        "type": "object",
                        "properties": {
                            "job_id": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "job_offset": {
                                "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                            }
                        }
                    },
                    "job_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "licenses": {
                        "type": "string"
                    },
                    "mcs": {
                        "type": "object",
                        "properties": {
                            "label": {
                                "type": "string"
                            }
                        }
                    },
                    "nodes": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "hold": {
                        "type": "boolean",
                        "description": "Hold (true) or release (false) job"
                    },
                    "priority": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val",
                        "description": "Request specific job priority"
                    },
                    "qos": {
                        "type": "string"
                    },
                    "required": {
                        "type": "object",
                        "properties": {
                            "CPUs": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "memory_per_cpu": {
                                "$ref": "#/components/schemas/v0.0.39_mem_per_cpus"
                            },
                            "memory_per_node": {
                                "$ref": "#/components/schemas/v0.0.39_mem_per_node"
                            },
                            "memory": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    },
                    "kill_request_user": {
                        "type": "string"
                    },
                    "reservation": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    },
                    "script": {
                        "type": "string"
                    },
                    "state": {
                        "type": "object",
                        "properties": {
                            "current": {
                                "type": "string"
                            },
                            "reason": {
                                "type": "string"
                            }
                        }
                    },
                    "steps": {
                        "$ref": "#/components/schemas/v0.0.39_step_list"
                    },
                    "submit_line": {
                        "type": "string"
                    },
                    "tres": {
                        "type": "object",
                        "properties": {
                            "allocated": {
                                "$ref": "#/components/schemas/v0.0.39_tres_str"
                            },
                            "requested": {
                                "$ref": "#/components/schemas/v0.0.39_tres_str"
                            }
                        }
                    },
                    "used_gres": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    },
                    "wckey": {
                        "$ref": "#/components/schemas/v0.0.39_wckey_tag"
                    },
                    "working_directory": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.39_job_assoc_id": {
                "$ref": "#/components/schemas/v0.0.39_assoc_short_ptr"
            },
            "v0.0.39_assoc_short_ptr": {
                "$ref": "#/components/schemas/v0.0.39_assoc_short"
            },
            "v0.0.39_job_exit_code": {
                "type": "object",
                "description": "job exit details",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "exit status"
                    },
                    "return_code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "return code (numeric)"
                    },
                    "signal": {
                        "type": "object",
                        "description": "Job exited due to signal",
                        "properties": {
                            "signal_id": {
                                "type": "integer",
                                "format": "int32",
                                "description": "signal numeric ID"
                            },
                            "name": {
                                "type": "string",
                                "description": "signal name"
                            }
                        }
                    }
                }
            },
            "v0.0.39_mem_per_cpus": {
                "$ref": "#/components/schemas/v0.0.39_uint64_no_val"
            },
            "v0.0.39_uint64_no_val": {
                "type": "object",
                "description": "Integer number with flags",
                "properties": {
                    "set": {
                        "type": "boolean",
                        "description": "True if number has been set. False if number is unset",
                        "default": false
                    },
                    "infinite": {
                        "type": "boolean",
                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
                        "default": 0
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64",
                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                    }
                }
            },
            "v0.0.39_mem_per_node": {
                "$ref": "#/components/schemas/v0.0.39_uint64_no_val"
            },
            "v0.0.39_step_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_step"
                }
            },
            "v0.0.39_step": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "object",
                        "properties": {
                            "elapsed": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "end": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "start": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "suspended": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "system": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            },
                            "total": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            },
                            "user": {
                                "type": "object",
                                "properties": {
                                    "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "microseconds": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    },
                    "exit_code": {
                        "$ref": "#/components/schemas/v0.0.39_job_exit_code"
                    },
                    "nodes": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "range": {
                                "type": "string"
                            },
                            "list": {
                                "$ref": "#/components/schemas/v0.0.39_step_nodes"
                            }
                        }
                    },
                    "tasks": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "pid": {
                        "type": "string"
                    },
                    "CPU": {
                        "type": "object",
                        "properties": {
                            "requested_frequency": {
                                "type": "object",
                                "properties": {
                                    "min": {
                                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                                    },
                                    "max": {
                                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                                    }
                                }
                            },
                            "governor": {
                                "type": "string"
                            }
                        }
                    },
                    "kill_request_user": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "statistics": {
                        "type": "object",
                        "properties": {
                            "CPU": {
                                "type": "object",
                                "properties": {
                                    "actual_frequency": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                }
                            },
                            "energy": {
                                "type": "object",
                                "properties": {
                                    "consumed": {
                                        "$ref": "#/components/schemas/v0.0.39_uint64_no_val"
                                    }
                                }
                            }
                        }
                    },
                    "step": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "$ref": "#/components/schemas/v0.0.39_slurm_step_id"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    },
                    "task": {
                        "type": "object",
                        "properties": {
                            "distribution": {
                                "type": "string"
                            }
                        }
                    },
                    "tres": {
                        "type": "object",
                        "properties": {
                            "requested": {
                                "type": "object",
                                "properties": {
                                    "max": {
                                        "$ref": "#/components/schemas/v0.0.39_step_tres_req_max"
                                    },
                                    "min": {
                                        "$ref": "#/components/schemas/v0.0.39_step_tres_req_min"
                                    },
                                    "average": {
                                        "$ref": "#/components/schemas/v0.0.39_tres_str"
                                    },
                                    "total": {
                                        "$ref": "#/components/schemas/v0.0.39_tres_str"
                                    }
                                }
                            },
                            "consumed": {
                                "type": "object",
                                "properties": {
                                    "max": {
                                        "$ref": "#/components/schemas/v0.0.39_step_tres_usage_max"
                                    },
                                    "min": {
                                        "$ref": "#/components/schemas/v0.0.39_step_tres_usage_min"
                                    },
                                    "average": {
                                        "$ref": "#/components/schemas/v0.0.39_tres_str"
                                    },
                                    "total": {
                                        "$ref": "#/components/schemas/v0.0.39_tres_str"
                                    }
                                }
                            },
                            "allocated": {
                                "$ref": "#/components/schemas/v0.0.39_tres_str"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.39_slurm_step_id": {
                "type": "object",
                "description": "step details",
                "properties": {
                    "job_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "JobID"
                    },
                    "step_het_component": {
                        "type": "integer",
                        "format": "int32",
                        "description": "HetStep"
                    },
                    "step_id": {
                        "type": "string"
                    }
                }
            },
            "v0.0.39_step_nodes": {
                "$ref": "#/components/schemas/v0.0.39_hostlist"
            },
            "v0.0.39_hostlist": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.39_step_tres_req_max": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_tres"
                }
            },
            "v0.0.39_step_tres_req_min": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_tres"
                }
            },
            "v0.0.39_step_tres_usage_max": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_tres"
                }
            },
            "v0.0.39_step_tres_usage_min": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_tres"
                }
            },
            "v0.0.39_wckey_tag": {
                "type": "object",
                "description": "wckey details",
                "properties": {
                    "wckey": {
                        "type": "string",
                        "description": "wckey"
                    },
                    "flags": {
                        "type": "array",
                        "description": "active flags",
                        "items": {
                            "type": "string",
                            "description": "flag",
                            "enum": [
                                "ASSIGNED_DEFAULT"
                            ]
                        }
                    }
                }
            },
            "v0.0.39_cluster_rec_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_cluster_rec"
                }
            },
            "v0.0.39_cluster_rec": {
                "type": "object",
                "properties": {
                    "controller": {
                        "type": "object",
                        "properties": {
                            "host": {
                                "type": "string"
                            },
                            "port": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "REGISTERING",
                                "MULTIPLE_SLURMD",
                                "FRONT_END",
                                "FEDERATION",
                                "EXTERNAL"
                            ]
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodes": {
                        "type": "string"
                    },
                    "select_plugin": {
                        "type": "string"
                    },
                    "associations": {
                        "type": "object",
                        "properties": {
                            "root": {
                                "$ref": "#/components/schemas/v0.0.39_assoc_short_ptr"
                            }
                        }
                    },
                    "rpc_version": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tres": {
                        "$ref": "#/components/schemas/v0.0.39_tres_str"
                    }
                },
                "required": []
            },
            "v0.0.39_diag": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.39_warnings"
                    },
                    "statistics": {
                        "$ref": "#/components/schemas/v0.0.39_stats_msg"
                    }
                }
            },
            "v0.0.39_licenses_info": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.39_warnings"
                    },
                    "licenses": {
                        "$ref": "#/components/schemas/v0.0.39_licenses"
                    }
                }
            },
            "v0.0.39_pings": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.39_warnings"
                    },
                    "pings": {
                        "$ref": "#/components/schemas/v0.0.39_controller_ping_array"
                    }
                }
            },
            "v0.0.39_partitions_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.39_warnings"
                    },
                    "partitions": {
                        "$ref": "#/components/schemas/v0.0.39_partition_info_array"
                    }
                }
            },
            "v0.0.39_reservations_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.39_warnings"
                    },
                    "reservations": {
                        "$ref": "#/components/schemas/v0.0.39_reservation_info_array"
                    }
                }
            },
            "v0.0.39_warnings": {
                "type": "array",
                "description": "Slurm warnings",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_warning"
                }
            },
            "v0.0.39_warning": {
                "properties": {
                    "warning": {
                        "description": "Earning message",
                        "type": "string"
                    },
                    "source": {
                        "description": "Where error occurred in the source",
                        "type": "string"
                    },
                    "description": {
                        "description": "Explanation of cause of error",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "v0.0.39_errors": {
                "type": "array",
                "description": "Slurm errors",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_error"
                }
            },
            "v0.0.39_error": {
                "properties": {
                    "error_number": {
                        "description": "Slurm internal error number",
                        "type": "integer"
                    },
                    "error": {
                        "description": "Error message",
                        "type": "string"
                    },
                    "source": {
                        "description": "Where error occurred in the source",
                        "type": "string"
                    },
                    "description": {
                        "description": "Explanation of cause of error",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "v0.0.39_job_update_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.39_warnings"
                    },
                    "results": {
                        "$ref": "#/components/schemas/v0.0.39_job_array_response_msg_ptr"
                    }
                }
            },
            "v0.0.39_job_submission_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.39_warnings"
                    },
                    "job_id": {
                        "description": "new job ID",
                        "type": "integer"
                    },
                    "step_id": {
                        "description": "new job step ID",
                        "type": "string"
                    },
                    "job_submit_user_msg": {
                        "description": "Message to user from job_submit plugin",
                        "type": "string"
                    }
                }
            },
            "v0.0.39_jobs_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.39_warnings"
                    },
                    "jobs": {
                        "$ref": "#/components/schemas/v0.0.39_job_info_msg"
                    }
                }
            },
            "v0.0.39_job_submission": {
                "properties": {
                    "script": {
                        "type": "string",
                        "description": "Executable script (full contents) to run in batch step for all job components"
                    },
                    "job": {
                        "$ref": "#/components/schemas/v0.0.39_job_desc_msg"
                    },
                    "jobs": {
                        "$ref": "#/components/schemas/v0.0.39_job_desc_msg_list"
                    }
                }
            },
            "v0.0.39_nodes_response": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/v0.0.39_meta"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/v0.0.39_errors"
                    },
                    "warnings": {
                        "$ref": "#/components/schemas/v0.0.39_warnings"
                    },
                    "nodes": {
                        "$ref": "#/components/schemas/v0.0.39_nodes"
                    }
                }
            },
            "v0.0.39_meta": {
                "type": "object",
                "properties": {
                    "plugin": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": ""
                            },
                            "name": {
                                "type": "string",
                                "description": ""
                            }
                        }
                    },
                    "Slurm": {
                        "type": "object",
                        "description": "Slurm information",
                        "properties": {
                            "version": {
                                "type": "object",
                                "properties": {
                                    "major": {
                                        "type": "integer",
                                        "description": ""
                                    },
                                    "micro": {
                                        "type": "integer",
                                        "description": ""
                                    },
                                    "minor": {
                                        "type": "integer",
                                        "description": ""
                                    }
                                }
                            },
                            "release": {
                                "type": "string",
                                "description": "version specifier"
                            }
                        }
                    }
                }
            },
            "v0.0.39_job_desc_msg": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "account_gather_frequency": {
                        "type": "string"
                    },
                    "admin_comment": {
                        "type": "string"
                    },
                    "allocation_node_list": {
                        "type": "string"
                    },
                    "allocation_node_port": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "argv": {
                        "$ref": "#/components/schemas/v0.0.39_job_desc_msg_argv"
                    },
                    "array": {
                        "type": "string"
                    },
                    "batch_features": {
                        "type": "string"
                    },
                    "begin_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "KILL_INVALID_DEPENDENCY",
                                "NO_KILL_INVALID_DEPENDENCY",
                                "HAS_STATE_DIRECTORY",
                                "TESTING_BACKFILL",
                                "GRES_BINDING_ENFORCED",
                                "TEST_NOW_ONLY",
                                "SEND_JOB_ENVIRONMENT",
                                "SPREAD_JOB",
                                "PREFER_MINIMUM_NODE_COUNT",
                                "JOB_KILL_HURRY",
                                "SKIP_TRES_STRING_ACCOUNTING",
                                "SIBLING_CLUSTER_UPDATE_ONLY",
                                "HETEROGENEOUS_JOB",
                                "EXACT_TASK_COUNT_REQUESTED",
                                "EXACT_CPU_COUNT_REQUESTED",
                                "TESTING_WHOLE_NODE_BACKFILL",
                                "TOP_PRIORITY_JOB",
                                "ACCRUE_COUNT_CLEARED",
                                "GRED_BINDING_DISABLED",
                                "JOB_WAS_RUNNING",
                                "JOB_ACCRUE_TIME_RESET",
                                "CRON_JOB",
                                "EXACT_MEMORY_REQUESTED",
                                "USING_DEFAULT_ACCOUNT",
                                "USING_DEFAULT_PARTITION",
                                "USING_DEFAULT_QOS",
                                "USING_DEFAULT_WCKEY",
                                "DEPENDENT",
                                "MAGNETIC",
                                "PARTITION_ASSIGNED",
                                "BACKFILL_ATTEMPTED",
                                "SCHEDULING_ATTEMPTED",
                                "SAVE_BATCH_SCRIPT"
                            ]
                        }
                    },
                    "burst_buffer": {
                        "type": "string"
                    },
                    "clusters": {
                        "type": "string"
                    },
                    "cluster_constraint": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "contiguous": {
                        "type": "boolean"
                    },
                    "container": {
                        "type": "string"
                    },
                    "container_id": {
                        "type": "string"
                    },
                    "core_specification": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "thread_specification": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cpu_binding": {
                        "type": "string"
                    },
                    "cpu_binding_flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "CPU_BIND_TO_THREADS",
                                "CPU_BIND_TO_CORES",
                                "CPU_BIND_TO_SOCKETS",
                                "CPU_BIND_TO_LDOMS",
                                "CPU_AUTO_BIND_TO_THREADS",
                                "CPU_AUTO_BIND_TO_CORES",
                                "CPU_AUTO_BIND_TO_SOCKETS",
                                "CPU_BIND_NONE",
                                "CPU_BIND_RANK",
                                "CPU_BIND_MAP",
                                "CPU_BIND_MASK",
                                "CPU_BIND_LDRANK",
                                "CPU_BIND_LDMAP",
                                "CPU_BIND_LDMASK",
                                "VERBOSE",
                                "CPU_BIND_ONE_THREAD_PER_CORE",
                                "SLURMD_OFF_SPEC",
                                "CPU_BIND_OFF"
                            ]
                        }
                    },
                    "cpu_frequency": {
                        "type": "string"
                    },
                    "cpus_per_tres": {
                        "type": "string"
                    },
                    "crontab": {
                        "$ref": "#/components/schemas/v0.0.39_job_desc_msg_cron_entry"
                    },
                    "deadline": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "delay_boot": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dependency": {
                        "type": "string"
                    },
                    "end_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "environment": {
                        "$ref": "#/components/schemas/v0.0.39_job_desc_msg_env"
                    },
                    "excluded_nodes": {
                        "$ref": "#/components/schemas/v0.0.39_csv_string"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "constraints": {
                        "type": "string"
                    },
                    "group_id": {
                        "type": "string"
                    },
                    "hetjob_group": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "immediate": {
                        "type": "boolean"
                    },
                    "job_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "kill_on_node_fail": {
                        "type": "boolean"
                    },
                    "licenses": {
                        "type": "string"
                    },
                    "mail_type": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "BEGIN",
                                "END",
                                "FAIL",
                                "REQUEUE",
                                "TIME=100%",
                                "TIME=90%",
                                "TIME=80%",
                                "TIME=50%",
                                "STAGE_OUT",
                                "ARRAY_TASKS",
                                "INVALID_DEPENDENCY"
                            ]
                        }
                    },
                    "mail_user": {
                        "type": "string"
                    },
                    "mcs_label": {
                        "type": "string"
                    },
                    "memory_binding": {
                        "type": "string"
                    },
                    "memory_binding_type": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "NONE",
                                "RANK",
                                "MAP",
                                "MASK",
                                "LOCAL",
                                "VERBOSE",
                                "SORT",
                                "PREFER"
                            ]
                        }
                    },
                    "memory_per_tres": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "nice": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "open_mode": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "APPEND",
                                "TRUNCATE"
                            ]
                        }
                    },
                    "reserve_ports": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "overcommit": {
                        "type": "boolean"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "distribution_plane_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "power_flags": {
                        "$ref": "#/components/schemas/v0.0.39_power_flags"
                    },
                    "prefer": {
                        "type": "string"
                    },
                    "hold": {
                        "type": "boolean",
                        "description": "Hold (true) or release (false) job"
                    },
                    "priority": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val",
                        "description": "Request specific job priority"
                    },
                    "profile": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "NOT_SET",
                                "NONE",
                                "ENERGY",
                                "LUSTRE",
                                "NETWORK",
                                "TASK"
                            ]
                        }
                    },
                    "qos": {
                        "type": "string"
                    },
                    "reboot": {
                        "type": "boolean"
                    },
                    "required_nodes": {
                        "$ref": "#/components/schemas/v0.0.39_csv_string"
                    },
                    "requeue": {
                        "type": "boolean"
                    },
                    "reservation": {
                        "type": "string"
                    },
                    "script": {
                        "type": "string"
                    },
                    "shared": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "none",
                                "oversubscribe",
                                "user",
                                "mcs"
                            ]
                        }
                    },
                    "exclusive": {
                        "$ref": "#/components/schemas/v0.0.39_job_exclusive"
                    },
                    "oversubscribe": {
                        "type": "boolean"
                    },
                    "site_factor": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "spank_environment": {
                        "$ref": "#/components/schemas/v0.0.39_job_desc_msg_spank_env"
                    },
                    "distribution": {
                        "type": "string"
                    },
                    "time_limit": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "time_minimum": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "tres_bind": {
                        "type": "string"
                    },
                    "tres_freq": {
                        "type": "string"
                    },
                    "tres_per_job": {
                        "type": "string"
                    },
                    "tres_per_node": {
                        "type": "string"
                    },
                    "tres_per_socket": {
                        "type": "string"
                    },
                    "tres_per_task": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "wait_all_nodes": {
                        "type": "boolean"
                    },
                    "kill_warning_flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "BATCH_JOB",
                                "ARRAY_TASK",
                                "FULL_STEPS_ONLY",
                                "FULL_JOB",
                                "FEDERATION_REQUEUE",
                                "HURRY",
                                "OUT_OF_MEMORY",
                                "NO_SIBLING_JOBS",
                                "RESERVATION_JOB",
                                "WARNING_SENT"
                            ]
                        }
                    },
                    "kill_warning_signal": {
                        "type": "string"
                    },
                    "kill_warning_delay": {
                        "$ref": "#/components/schemas/v0.0.39_uint16_no_val"
                    },
                    "current_working_directory": {
                        "type": "string"
                    },
                    "cpus_per_task": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maximum_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "nodes": {
                        "type": "string"
                    },
                    "minimum_nodes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maximum_nodes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_boards_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_sockets_per_board": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sockets_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "threads_per_core": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_socket": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_core": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_board": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ntasks_per_tres": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimum_cpus_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "memory_per_cpu": {
                        "$ref": "#/components/schemas/v0.0.39_mem_per_cpus"
                    },
                    "memory_per_node": {
                        "$ref": "#/components/schemas/v0.0.39_mem_per_node"
                    },
                    "temporary_disk_per_node": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "selinux_context": {
                        "type": "string"
                    },
                    "required_switches": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "standard_error": {
                        "type": "string"
                    },
                    "standard_input": {
                        "type": "string"
                    },
                    "standard_output": {
                        "type": "string"
                    },
                    "wait_for_switch": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "wckey": {
                        "type": "string"
                    },
                    "x11": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "FORWARD_ALL_NODES",
                                "BATCH_NODE",
                                "FIRST_NODE",
                                "LAST_NODE"
                            ]
                        }
                    },
                    "x11_magic_cookie": {
                        "type": "string"
                    },
                    "x11_target_host": {
                        "type": "string"
                    },
                    "x11_target_port": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "required": [
                    "environment"
                ]
            },
            "v0.0.39_job_desc_msg_argv": {
                "$ref": "#/components/schemas/v0.0.39_string_array"
            },
            "v0.0.39_string_array": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.39_job_desc_msg_cron_entry": {
                "$ref": "#/components/schemas/v0.0.39_cron_entry_ptr"
            },
            "v0.0.39_cron_entry_ptr": {
                "$ref": "#/components/schemas/v0.0.39_cron_entry"
            },
            "v0.0.39_cron_entry": {
                "type": "object",
                "properties": {
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "WILD_MINUTE",
                                "WILD_HOUR",
                                "WILD_DAY_OF_MONTH",
                                "WILD_MONTH",
                                "WILD_DAY_OF_WEEK"
                            ]
                        }
                    },
                    "minute": {
                        "$ref": "#/components/schemas/v0.0.39_bitstr_ptr"
                    },
                    "hour": {
                        "$ref": "#/components/schemas/v0.0.39_bitstr_ptr"
                    },
                    "day_of_month": {
                        "$ref": "#/components/schemas/v0.0.39_bitstr_ptr"
                    },
                    "month": {
                        "$ref": "#/components/schemas/v0.0.39_bitstr_ptr"
                    },
                    "day_of_week": {
                        "$ref": "#/components/schemas/v0.0.39_bitstr_ptr"
                    },
                    "specification": {
                        "type": "string"
                    },
                    "command": {
                        "type": "string"
                    },
                    "line": {
                        "type": "object",
                        "properties": {
                            "start": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "end": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                },
                "required": []
            },
            "v0.0.39_bitstr_ptr": {
                "type": "string"
            },
            "v0.0.39_job_desc_msg_env": {
                "$ref": "#/components/schemas/v0.0.39_string_array"
            },
            "v0.0.39_csv_string": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.39_power_flags": {
                "type": "array",
                "description": "removed field",
                "items": {},
                "deprecated": true
            },
            "v0.0.39_job_exclusive": {
                "type": "array",
                "items": {
                    "type": "string",
                    "description": "flags",
                    "enum": [
                        "true",
                        "false",
                        "user",
                        "mcs"
                    ]
                }
            },
            "v0.0.39_job_desc_msg_spank_env": {
                "$ref": "#/components/schemas/v0.0.39_string_array"
            },
            "v0.0.39_uint16_no_val": {
                "type": "object",
                "description": "Integer number with flags",
                "properties": {
                    "set": {
                        "type": "boolean",
                        "description": "True if number has been set. False if number is unset",
                        "default": false
                    },
                    "infinite": {
                        "type": "boolean",
                        "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
                        "default": 0
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64",
                        "description": "If set is True the number will be set with value. Otherwise ignore number contents."
                    }
                }
            },
            "v0.0.39_update_node_msg": {
                "type": "object",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "arbitrary comment"
                    },
                    "cpu_bind": {
                        "type": "integer",
                        "format": "int32",
                        "description": "default CPU binding type"
                    },
                    "extra": {
                        "type": "string",
                        "description": "arbitrary string"
                    },
                    "features": {
                        "$ref": "#/components/schemas/v0.0.39_csv_string",
                        "description": "new available feature for node"
                    },
                    "features_act": {
                        "$ref": "#/components/schemas/v0.0.39_csv_string",
                        "description": "new active feature for node"
                    },
                    "gres": {
                        "type": "string",
                        "description": "new generic resources for node"
                    },
                    "address": {
                        "$ref": "#/components/schemas/v0.0.39_hostlist_string",
                        "description": "communication name"
                    },
                    "hostname": {
                        "$ref": "#/components/schemas/v0.0.39_hostlist_string",
                        "description": "node's hostname"
                    },
                    "name": {
                        "$ref": "#/components/schemas/v0.0.39_hostlist_string",
                        "description": "node to update"
                    },
                    "state": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "INVALID",
                                "UNKNOWN",
                                "DOWN",
                                "IDLE",
                                "ALLOCATED",
                                "ERROR",
                                "MIXED",
                                "FUTURE",
                                "RESERVED",
                                "UNDRAIN",
                                "CLOUD",
                                "RESUME",
                                "DRAIN",
                                "COMPLETING",
                                "NOT_RESPONDING",
                                "POWERED_DOWN",
                                "FAIL",
                                "POWERING_UP",
                                "MAINTENANCE",
                                "REBOOT_REQUESTED",
                                "REBOOT_CANCELED",
                                "POWERING_DOWN",
                                "DYNAMIC_FUTURE",
                                "REBOOT_ISSUED",
                                "PLANNED",
                                "INVALID_REG",
                                "POWER_DOWN",
                                "POWER_UP",
                                "POWER_DRAIN",
                                "DYNAMIC_NORM"
                            ]
                        },
                        "description": "assign new node state"
                    },
                    "reason": {
                        "type": "string",
                        "description": "reason for node being DOWN or DRAINING"
                    },
                    "reason_uid": {
                        "type": "string",
                        "description": "user ID of sending (needed if user root is sending message)"
                    },
                    "resume_after": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val",
                        "description": "automatically resume DOWN or DRAINED node after this amount of seconds"
                    },
                    "weight": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val",
                        "description": "new weight for node"
                    }
                },
                "required": []
            },
            "v0.0.39_hostlist_string": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.39_stats_msg": {
                "type": "object",
                "properties": {
                    "parts_packed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "req_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "req_time_start": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "server_thread_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "agent_queue_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "agent_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "agent_thread_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dbd_agent_queue_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "gettimeofday_latency": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "schedule_cycle_max": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "schedule_cycle_last": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "schedule_cycle_total": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "schedule_cycle_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "schedule_cycle_mean_depth": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "schedule_cycle_per_minute": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "schedule_queue_length": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_submitted": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_started": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_completed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_canceled": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_failed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_pending": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs_running": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "job_states_ts": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_backfilled_jobs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_last_backfilled_jobs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_backfilled_het_jobs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_cycle_counter": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_cycle_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_depth_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_depth_mean_try": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_cycle_sum": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_cycle_last": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_last_depth": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_last_depth_try": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_depth_sum": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_depth_try_sum": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_queue_len": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_queue_len_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_queue_len_sum": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_table_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bf_table_size_mean": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_when_last_cycle": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bf_active": {
                        "type": "boolean"
                    },
                    "rpcs_by_message_type": {
                        "$ref": "#/components/schemas/v0.0.39_stats_msg_rpcs_by_type"
                    },
                    "rpcs_by_user": {
                        "$ref": "#/components/schemas/v0.0.39_stats_msg_rpcs_by_user"
                    }
                },
                "required": []
            },
            "v0.0.39_stats_msg_rpcs_by_type": {
                "type": "array",
                "description": "RPCs by message type",
                "items": {
                    "type": "object",
                    "description": "RPC",
                    "properties": {
                        "message_type": {
                            "type": "string",
                            "description": "Message type as string"
                        },
                        "type_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Message type as integer"
                        },
                        "count": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number of RPCs received"
                        },
                        "average_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Average time spent processing RPC in seconds"
                        },
                        "total_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Total time spent processing RPC in seconds"
                        }
                    }
                }
            },
            "v0.0.39_stats_msg_rpcs_by_user": {
                "type": "array",
                "description": "RPCs by user",
                "items": {
                    "type": "object",
                    "description": "user",
                    "properties": {
                        "user": {
                            "type": "string",
                            "description": "user name"
                        },
                        "user_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "user id (numeric)"
                        },
                        "count": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number of RPCs received"
                        },
                        "average_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Average time spent processing RPC in seconds"
                        },
                        "total_time": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Total time spent processing RPC in seconds"
                        }
                    }
                }
            },
            "v0.0.39_licenses": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_license"
                }
            },
            "v0.0.39_license": {
                "type": "object",
                "properties": {
                    "LicenseName": {
                        "type": "string"
                    },
                    "Total": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Used": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Free": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Remote": {
                        "type": "boolean"
                    },
                    "Reserved": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "LastConsumed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "LastDeficit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "LastUpdate": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": []
            },
            "v0.0.39_controller_ping_array": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_controller_ping"
                }
            },
            "v0.0.39_controller_ping": {
                "type": "object",
                "properties": {
                    "hostname": {
                        "type": "string"
                    },
                    "pinged": {
                        "type": "string"
                    },
                    "latency": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "mode": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.39_partition_info_array": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_partition_info"
                }
            },
            "v0.0.39_partition_info": {
                "type": "object",
                "properties": {
                    "nodes": {
                        "type": "object",
                        "properties": {
                            "allowed_allocation": {
                                "type": "string"
                            },
                            "configured": {
                                "type": "string"
                            },
                            "total": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "accounts": {
                        "type": "object",
                        "properties": {
                            "allowed": {
                                "type": "string"
                            },
                            "deny": {
                                "type": "string"
                            }
                        }
                    },
                    "groups": {
                        "type": "object",
                        "properties": {
                            "allowed": {
                                "type": "string"
                            }
                        }
                    },
                    "qos": {
                        "type": "object",
                        "properties": {
                            "allowed": {
                                "type": "string"
                            },
                            "deny": {
                                "type": "string"
                            },
                            "assigned": {
                                "type": "string"
                            }
                        }
                    },
                    "alternate": {
                        "type": "string"
                    },
                    "tres": {
                        "type": "object",
                        "properties": {
                            "billing_weights": {
                                "type": "string"
                            },
                            "configured": {
                                "type": "string"
                            }
                        }
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "cpus": {
                        "type": "object",
                        "properties": {
                            "task_binding": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "total": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "defaults": {
                        "type": "object",
                        "properties": {
                            "memory_per_cpu": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "time": {
                                "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                            },
                            "job": {
                                "type": "string"
                            }
                        }
                    },
                    "grace_time": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maximums": {
                        "type": "object",
                        "properties": {
                            "cpus_per_node": {
                                "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                            },
                            "cpus_per_socket": {
                                "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                            },
                            "memory_per_cpu": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "nodes": {
                                "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                            },
                            "shares": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "time": {
                                "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                            },
                            "over_time_limit": {
                                "$ref": "#/components/schemas/v0.0.39_uint16_no_val"
                            }
                        }
                    },
                    "minimums": {
                        "type": "object",
                        "properties": {
                            "nodes": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "node_sets": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "object",
                        "properties": {
                            "job_factor": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "tier": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "timeouts": {
                        "type": "object",
                        "properties": {
                            "resume": {
                                "$ref": "#/components/schemas/v0.0.39_uint16_no_val"
                            },
                            "suspend": {
                                "$ref": "#/components/schemas/v0.0.39_uint16_no_val"
                            }
                        }
                    },
                    "suspend_time": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    }
                },
                "required": []
            },
            "v0.0.39_reservation_info_array": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_reservation_info"
                }
            },
            "v0.0.39_reservation_info": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "string"
                    },
                    "burst_buffer": {
                        "type": "string"
                    },
                    "core_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "core_specializations": {
                        "$ref": "#/components/schemas/v0.0.39_reservation_info_core_spec"
                    },
                    "end_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "features": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "MAINT",
                                "NO_MAINT",
                                "DAILY",
                                "NO_DAILY",
                                "WEEKLY",
                                "NO_WEEKLY",
                                "IGNORE_JOBS",
                                "NO_IGNORE_JOBS",
                                "ANY_NODES",
                                "STATIC",
                                "NO_STATIC",
                                "PART_NODES",
                                "NO_PART_NODES",
                                "OVERLAP",
                                "SPEC_NODES",
                                "TIME_FLOAT",
                                "REPLACE",
                                "ALL_NODES",
                                "PURGE_COMP",
                                "WEEKDAY",
                                "NO_WEEKDAY",
                                "WEEKEND",
                                "NO_WEEKEND",
                                "FLEX",
                                "NO_FLEX",
                                "DURATION_PLUS",
                                "DURATION_MINUS",
                                "NO_HOLD_JOBS_AFTER_END",
                                "NO_PURGE_COMP",
                                "MAGNETIC",
                                "SKIP",
                                "HOURLY",
                                "NO_HOURLY",
                                "REOCCURRING"
                            ]
                        }
                    },
                    "groups": {
                        "type": "string"
                    },
                    "licenses": {
                        "type": "string"
                    },
                    "max_start_delay": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "node_count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "node_list": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "purge_completed": {
                        "type": "object",
                        "properties": {
                            "time": {
                                "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                            }
                        }
                    },
                    "start_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "watts": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "tres": {
                        "type": "string"
                    },
                    "users": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.39_reservation_info_core_spec": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_reservation_core_spec"
                }
            },
            "v0.0.39_reservation_core_spec": {
                "type": "object",
                "properties": {
                    "node": {
                        "type": "string"
                    },
                    "core": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.39_job_array_response_msg_ptr": {
                "$ref": "#/components/schemas/v0.0.39_job_array_response_msg"
            },
            "v0.0.39_job_array_response_msg": {
                "type": "array",
                "description": "Result per ArrayJob",
                "items": {
                    "type": "object",
                    "description": "ArrayJob",
                    "properties": {
                        "job_id": {
                            "type": "integer",
                            "format": "int32",
                            "description": "JobId"
                        },
                        "error_code": {
                            "type": "integer",
                            "format": "int32",
                            "description": "numeric error code"
                        },
                        "error": {
                            "type": "string",
                            "description": "error code description"
                        },
                        "why": {
                            "type": "string",
                            "description": "error message"
                        }
                    }
                }
            },
            "v0.0.39_job_info_msg": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_job_info"
                }
            },
            "v0.0.39_job_info": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "accrue_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "admin_comment": {
                        "type": "string"
                    },
                    "allocating_node": {
                        "type": "string"
                    },
                    "array_job_id": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "array_task_id": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "array_max_tasks": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "array_task_string": {
                        "type": "string"
                    },
                    "association_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "batch_features": {
                        "type": "string"
                    },
                    "batch_flag": {
                        "type": "boolean"
                    },
                    "batch_host": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "KILL_INVALID_DEPENDENCY",
                                "NO_KILL_INVALID_DEPENDENCY",
                                "HAS_STATE_DIRECTORY",
                                "TESTING_BACKFILL",
                                "GRES_BINDING_ENFORCED",
                                "TEST_NOW_ONLY",
                                "SEND_JOB_ENVIRONMENT",
                                "SPREAD_JOB",
                                "PREFER_MINIMUM_NODE_COUNT",
                                "JOB_KILL_HURRY",
                                "SKIP_TRES_STRING_ACCOUNTING",
                                "SIBLING_CLUSTER_UPDATE_ONLY",
                                "HETEROGENEOUS_JOB",
                                "EXACT_TASK_COUNT_REQUESTED",
                                "EXACT_CPU_COUNT_REQUESTED",
                                "TESTING_WHOLE_NODE_BACKFILL",
                                "TOP_PRIORITY_JOB",
                                "ACCRUE_COUNT_CLEARED",
                                "GRED_BINDING_DISABLED",
                                "JOB_WAS_RUNNING",
                                "JOB_ACCRUE_TIME_RESET",
                                "CRON_JOB",
                                "EXACT_MEMORY_REQUESTED",
                                "USING_DEFAULT_ACCOUNT",
                                "USING_DEFAULT_PARTITION",
                                "USING_DEFAULT_QOS",
                                "USING_DEFAULT_WCKEY",
                                "DEPENDENT",
                                "MAGNETIC",
                                "PARTITION_ASSIGNED",
                                "BACKFILL_ATTEMPTED",
                                "SCHEDULING_ATTEMPTED",
                                "SAVE_BATCH_SCRIPT"
                            ]
                        }
                    },
                    "burst_buffer": {
                        "type": "string"
                    },
                    "burst_buffer_state": {
                        "type": "string"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "cluster_features": {
                        "type": "string"
                    },
                    "command": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "container": {
                        "type": "string"
                    },
                    "container_id": {
                        "type": "string"
                    },
                    "contiguous": {
                        "type": "boolean"
                    },
                    "core_spec": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "thread_spec": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cores_per_socket": {
                        "$ref": "#/components/schemas/v0.0.39_uint16_no_val"
                    },
                    "billable_tres": {
                        "$ref": "#/components/schemas/v0.0.39_float64_no_val"
                    },
                    "cpus_per_task": {
                        "$ref": "#/components/schemas/v0.0.39_uint16_no_val"
                    },
                    "cpu_frequency_minimum": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "cpu_frequency_maximum": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "cpu_frequency_governor": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "cpus_per_tres": {
                        "type": "string"
                    },
                    "cron": {
                        "type": "string"
                    },
                    "deadline": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "delay_boot": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "dependency": {
                        "type": "string"
                    },
                    "derived_exit_code": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "eligible_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "end_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "excluded_nodes": {
                        "type": "string"
                    },
                    "exit_code": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "failed_node": {
                        "type": "string"
                    },
                    "features": {
                        "type": "string"
                    },
                    "federation_origin": {
                        "type": "string"
                    },
                    "federation_siblings_active": {
                        "type": "string"
                    },
                    "federation_siblings_viable": {
                        "type": "string"
                    },
                    "gres_detail": {
                        "$ref": "#/components/schemas/v0.0.39_job_info_gres_detail"
                    },
                    "group_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "group_name": {
                        "type": "string"
                    },
                    "het_job_id": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "het_job_id_set": {
                        "type": "string"
                    },
                    "het_job_offset": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "job_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "job_resources": {
                        "$ref": "#/components/schemas/v0.0.39_job_res_ptr"
                    },
                    "job_size_str": {
                        "$ref": "#/components/schemas/v0.0.39_csv_string"
                    },
                    "job_state": {
                        "type": "string"
                    },
                    "last_sched_evaluation": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "licenses": {
                        "type": "string"
                    },
                    "mail_type": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "BEGIN",
                                "END",
                                "FAIL",
                                "REQUEUE",
                                "TIME=100%",
                                "TIME=90%",
                                "TIME=80%",
                                "TIME=50%",
                                "STAGE_OUT",
                                "ARRAY_TASKS",
                                "INVALID_DEPENDENCY"
                            ]
                        }
                    },
                    "mail_user": {
                        "type": "string"
                    },
                    "max_cpus": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "max_nodes": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "mcs_label": {
                        "type": "string"
                    },
                    "memory_per_tres": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "nodes": {
                        "type": "string"
                    },
                    "nice": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tasks_per_core": {
                        "$ref": "#/components/schemas/v0.0.39_uint16_no_val"
                    },
                    "tasks_per_tres": {
                        "$ref": "#/components/schemas/v0.0.39_uint16_no_val"
                    },
                    "tasks_per_node": {
                        "$ref": "#/components/schemas/v0.0.39_uint16_no_val"
                    },
                    "tasks_per_socket": {
                        "$ref": "#/components/schemas/v0.0.39_uint16_no_val"
                    },
                    "tasks_per_board": {
                        "$ref": "#/components/schemas/v0.0.39_uint16_no_val"
                    },
                    "cpus": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "node_count": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "tasks": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "prefer": {
                        "type": "string"
                    },
                    "memory_per_cpu": {
                        "$ref": "#/components/schemas/v0.0.39_mem_per_cpus"
                    },
                    "memory_per_node": {
                        "$ref": "#/components/schemas/v0.0.39_mem_per_node"
                    },
                    "minimum_cpus_per_node": {
                        "$ref": "#/components/schemas/v0.0.39_uint16_no_val"
                    },
                    "minimum_tmp_disk_per_node": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "power": {
                        "type": "object",
                        "properties": {
                            "flags": {
                                "$ref": "#/components/schemas/v0.0.39_power_flags"
                            }
                        }
                    },
                    "preempt_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "preemptable_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pre_sus_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "hold": {
                        "type": "boolean",
                        "description": "Hold (true) or release (false) job"
                    },
                    "priority": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val",
                        "description": "Request specific job priority"
                    },
                    "profile": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "NOT_SET",
                                "NONE",
                                "ENERGY",
                                "LUSTRE",
                                "NETWORK",
                                "TASK"
                            ]
                        }
                    },
                    "qos": {
                        "type": "string"
                    },
                    "reboot": {
                        "type": "boolean"
                    },
                    "required_nodes": {
                        "type": "string"
                    },
                    "minimum_switches": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "requeue": {
                        "type": "boolean"
                    },
                    "resize_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "restart_cnt": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "resv_name": {
                        "type": "string"
                    },
                    "scheduled_nodes": {
                        "type": "string"
                    },
                    "selinux_context": {
                        "type": "string"
                    },
                    "shared": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "none",
                                "oversubscribe",
                                "user",
                                "mcs"
                            ]
                        }
                    },
                    "exclusive": {
                        "$ref": "#/components/schemas/v0.0.39_job_exclusive"
                    },
                    "oversubscribe": {
                        "type": "boolean"
                    },
                    "show_flags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "ALL",
                                "DETAIL",
                                "MIXED",
                                "LOCAL",
                                "SIBLING",
                                "FEDERATION",
                                "FUTURE"
                            ]
                        }
                    },
                    "sockets_per_board": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sockets_per_node": {
                        "$ref": "#/components/schemas/v0.0.39_uint16_no_val"
                    },
                    "start_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "state_description": {
                        "type": "string"
                    },
                    "state_reason": {
                        "type": "string"
                    },
                    "standard_error": {
                        "type": "string"
                    },
                    "standard_input": {
                        "type": "string"
                    },
                    "standard_output": {
                        "type": "string"
                    },
                    "submit_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "suspend_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "system_comment": {
                        "type": "string"
                    },
                    "time_limit": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "time_minimum": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "threads_per_core": {
                        "$ref": "#/components/schemas/v0.0.39_uint16_no_val"
                    },
                    "tres_bind": {
                        "type": "string"
                    },
                    "tres_freq": {
                        "type": "string"
                    },
                    "tres_per_job": {
                        "type": "string"
                    },
                    "tres_per_node": {
                        "type": "string"
                    },
                    "tres_per_socket": {
                        "type": "string"
                    },
                    "tres_per_task": {
                        "type": "string"
                    },
                    "tres_req_str": {
                        "type": "string"
                    },
                    "tres_alloc_str": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "user_name": {
                        "type": "string"
                    },
                    "maximum_switch_wait_time": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "wckey": {
                        "type": "string"
                    },
                    "current_working_directory": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.39_job_info_gres_detail": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "v0.0.39_job_res_ptr": {
                "$ref": "#/components/schemas/v0.0.39_job_res"
            },
            "v0.0.39_job_res": {
                "type": "object",
                "properties": {
                    "nodes": {
                        "type": "string"
                    },
                    "allocated_cores": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "allocated_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "allocated_hosts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "allocated_nodes": {
                        "$ref": "#/components/schemas/v0.0.39_job_res_nodes"
                    }
                },
                "required": []
            },
            "v0.0.39_job_res_nodes": {
                "type": "array",
                "description": "job node resources",
                "items": {}
            },
            "v0.0.39_job_desc_msg_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_job_desc_msg"
                }
            },
            "v0.0.39_nodes": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/v0.0.39_node"
                }
            },
            "v0.0.39_node": {
                "type": "object",
                "properties": {
                    "architecture": {
                        "type": "string"
                    },
                    "burstbuffer_network_address": {
                        "type": "string"
                    },
                    "boards": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "boot_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "cluster_name": {
                        "type": "string"
                    },
                    "cores": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "specialized_cores": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cpu_binding": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cpu_load": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "free_mem": {
                        "$ref": "#/components/schemas/v0.0.39_uint64_no_val"
                    },
                    "cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "effective_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "specialized_cpus": {
                        "type": "string"
                    },
                    "energy": {
                        "$ref": "#/components/schemas/v0.0.39_acct_gather_energy_ptr"
                    },
                    "external_sensors": {
                        "$ref": "#/components/schemas/v0.0.39_ext_sensors_data_ptr"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "power": {
                        "$ref": "#/components/schemas/v0.0.39_power_mgmt_data_ptr"
                    },
                    "features": {
                        "$ref": "#/components/schemas/v0.0.39_csv_string"
                    },
                    "active_features": {
                        "$ref": "#/components/schemas/v0.0.39_csv_string"
                    },
                    "gres": {
                        "type": "string"
                    },
                    "gres_drained": {
                        "type": "string"
                    },
                    "gres_used": {
                        "type": "string"
                    },
                    "last_busy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "mcs_label": {
                        "type": "string"
                    },
                    "specialized_memory": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "next_state_after_reboot": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "INVALID",
                                "UNKNOWN",
                                "DOWN",
                                "IDLE",
                                "ALLOCATED",
                                "ERROR",
                                "MIXED",
                                "FUTURE",
                                "RESERVED",
                                "UNDRAIN",
                                "CLOUD",
                                "RESUME",
                                "DRAIN",
                                "COMPLETING",
                                "NOT_RESPONDING",
                                "POWERED_DOWN",
                                "FAIL",
                                "POWERING_UP",
                                "MAINTENANCE",
                                "REBOOT_REQUESTED",
                                "REBOOT_CANCELED",
                                "POWERING_DOWN",
                                "DYNAMIC_FUTURE",
                                "REBOOT_ISSUED",
                                "PLANNED",
                                "INVALID_REG",
                                "POWER_DOWN",
                                "POWER_UP",
                                "POWER_DRAIN",
                                "DYNAMIC_NORM"
                            ]
                        }
                    },
                    "address": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "state": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "flags",
                            "enum": [
                                "INVALID",
                                "UNKNOWN",
                                "DOWN",
                                "IDLE",
                                "ALLOCATED",
                                "ERROR",
                                "MIXED",
                                "FUTURE",
                                "RESERVED",
                                "UNDRAIN",
                                "CLOUD",
                                "RESUME",
                                "DRAIN",
                                "COMPLETING",
                                "NOT_RESPONDING",
                                "POWERED_DOWN",
                                "FAIL",
                                "POWERING_UP",
                                "MAINTENANCE",
                                "REBOOT_REQUESTED",
                                "REBOOT_CANCELED",
                                "POWERING_DOWN",
                                "DYNAMIC_FUTURE",
                                "REBOOT_ISSUED",
                                "PLANNED",
                                "INVALID_REG",
                                "POWER_DOWN",
                                "POWER_UP",
                                "POWER_DRAIN",
                                "DYNAMIC_NORM"
                            ]
                        }
                    },
                    "operating_system": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "partitions": {
                        "$ref": "#/components/schemas/v0.0.39_csv_string"
                    },
                    "port": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "real_memory": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "reason_changed_at": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "reason_set_by_user": {
                        "type": "string"
                    },
                    "resume_after": {
                        "$ref": "#/components/schemas/v0.0.39_uint64_no_val"
                    },
                    "reservation": {
                        "type": "string"
                    },
                    "alloc_memory": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "alloc_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "alloc_idle_cpus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tres_used": {
                        "type": "string"
                    },
                    "tres_weighted": {
                        "type": "number",
                        "format": "double"
                    },
                    "slurmd_start_time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "sockets": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "threads": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "temporary_disk": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "weight": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tres": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": []
            },
            "v0.0.39_acct_gather_energy_ptr": {
                "$ref": "#/components/schemas/v0.0.39_acct_gather_energy"
            },
            "v0.0.39_acct_gather_energy": {
                "type": "object",
                "properties": {
                    "average_watts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "base_consumed_energy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "consumed_energy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "current_watts": {
                        "$ref": "#/components/schemas/v0.0.39_uint32_no_val"
                    },
                    "previous_consumed_energy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "last_collected": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": []
            },
            "v0.0.39_ext_sensors_data_ptr": {
                "$ref": "#/components/schemas/v0.0.39_ext_sensors_data"
            },
            "v0.0.39_ext_sensors_data": {
                "type": "object",
                "description": "removed field",
                "properties": {},
                "deprecated": true
            },
            "v0.0.39_power_mgmt_data_ptr": {
                "$ref": "#/components/schemas/v0.0.39_power_mgmt_data"
            },
            "v0.0.39_power_mgmt_data": {
                "type": "object",
                "description": "removed field",
                "properties": {},
                "deprecated": true
            }
        },
        "securitySchemes": {
            "user": {
                "type": "apiKey",
                "description": "User name",
                "name": "X-SLURM-USER-NAME",
                "in": "header"
            },
            "token": {
                "type": "apiKey",
                "description": "User access token",
                "name": "X-SLURM-USER-TOKEN",
                "in": "header"
            },
            "bearerAuth": {
                "type": "http",
                "description": "Bearer Authentication",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "info": {
        "contact": {
            "name": "SchedMD LLC",
            "url": "https://www.schedmd.com/",
            "email": "sales@schedmd.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "title": "Slurm REST API",
        "description": "API to access and control Slurm",
        "termsOfService": "https://github.com/SchedMD/slurm/blob/master/DISCLAIMER",
        "version": "Slurm-24.05.2&openapi/dbv0.0.39&openapi/v0.0.39&openapi/slurmdbd&openapi/slurmctld"
    },
    "servers": [
        {
            "url": "/"
        }
    ],
    "security": [
        {
            "user": [],
            "token": []
        },
        {
            "token": []
        },
        {
            "bearerAuth": []
        },
        {}
    ],
    "openapi": "3.0.3"
}
